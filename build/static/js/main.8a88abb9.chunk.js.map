{"version":3,"sources":["actions/index.js","components/Navbar.js","components/Dashboard.js","containers/LeadListContainer.js","components/SearchBar.js","components/SearchResults.js","components/LoginForm.js","containers/SearchContainer.js","components/UserProfile.js","components/NewUserForm.js","components/LandingPage.js","components/LeadList.js","components/EditUserForm.js","components/App.js","reducers/index.js","index.js"],"names":["FETCH_CATEGORIES","START_FETCH_CATEGORIES","START_FETCH_LEADS","FETCH_LEADS","FETCH_LISTS","ADD_LIST","START_DELETE_LIST","DELETE_LIST","DELETE_LISTLEAD","FETCH_LIST_BY_ID","FETCH_LIST_WITH_LEADNOTES","uuidv1","require","loginUser","user","type","thunkFetchLists","id","dispatch","fetch","then","res","json","data","console","log","lists","deleteList","method","catch","err","styleBar","overflow","backgroundColor","height","textAlign","verticalAlign","position","top","width","styleLink","float","display","color","padding","fontSize","textDecoration","Navbar","handleLogout","props","logoutUser","localStorage","removeItem","history","push","style","onClick","to","React","Component","connect","withRouter","Dashboard","state","column","direction","deleteConfirmation","totalLeadCount","totalMeetingsBooked","totalNotContacted","show","dimmer","setState","handleConfirm","handleCancel","formattedListArray","array","forEach","list","dateString","Date","created_at","toDateString","name","date","countTotalLeads","totalLeads","leadCountArray","count","leads","length","reduce","total","countMeetingsBooked","meetingsBookedCount","listWithLeadNotes","lead","leadnotes","leadnote","status","countNotContacted","notContacted","event","preventDefault","newArray","filter","handleRowClick","thunkFetchListById","handleSort","clickedColumn","reverse","_","sortBy","this","Grid","divided","Row","margin","marginLeft","columns","Column","Card","Content","Header","Description","Image","floated","size","src","minHeight","Table","sortable","selectable","celled","fixed","HeaderCell","sorted","Body","map","key","Cell","Icon","Confirm","open","cancelButton","confirmButton","onCancel","onConfirm","LeadListContainer","backgroundImage","auth","SearchBar","selectionParam","searchParam","locationParam","leadsResults","searchClicked","handleDropdown","e","targetValue","value","targetName","handleChange","target","handleSubmit","thunkFetchLeads","Form","Group","Input","onChange","placeholder","loading","marginTop","borderColor","borderWidth","Button","categories","thunkFetchCategories","domainName","result","styleDropdown","SearchResults","listId","leadSelection","company","website","newListName","leadsArray","activePage","leadsPagination","userId","addLead","handleLeadClick","checked","l","email","Message","handlePageChange","organization","domain","dataSlice","dataArray","dataArrayEmails","emails","slice","listArray","text","tableRow","first_name","last_name","confidence","Checkbox","singleLine","colSpan","Modal","centered","trigger","basic","as","Actions","Dropdown","fluid","disabled","selection","options","inverted","Footer","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","content","icon","lastItem","prevItem","nextItem","siblingRange","totalPages","onPageChange","headers","Accept","body","JSON","stringify","leadsData","list_id","lead_id","user_id","styleForm","LoginForm","password","login","className","onSubmit","Segment","iconPosition","activeClassName","formData","reqObj","resp","message","token","SearchContainer","UserProfile","handleDeleteClick","success","loadUser","condRender","Container","backgroundSize","positon","doubling","circular","img_url","marginBottom","Link","loadingCb","successCb","failCb","Authorization","NewUserForm","firstName","lastName","registerUser","error","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","HomepageHeading","mobile","fontWeight","DesktopContainer","hideFixedMenu","showFixedMenu","children","Visibility","once","onBottomPassed","onBottomPassedReverse","vertical","Menu","pointing","secondary","Item","active","primary","statusArray","statusInput","nextStepsInput","commentsInput","listleads","last","next_steps","comments","comments_date","last_date_contacted","contacted_date","phone_number","deleteListLead","handleAddLeadNote","leadId","addLeadNote","Select","label","control","rows","nextSteps","comment","EditUserForm","updateUser","App","currentUser","thunkFetchAllListById","exact","path","component","LandingPage","LeadList","leads_with_notes","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a88abb9.chunk.js","sourcesContent":["export const FETCH_CATEGORIES = \"FETCH_CATEGORIES\";\nexport const START_FETCH_CATEGORIES = \"START_FETCH_CATEGORIES\";\nexport const START_FETCH_LEADS = \"START_FETCH_LEADS\";\nexport const FETCH_LEADS = \"FETCH_LEADS\";\nexport const START_FETCH_LISTS = \"FETCH_LISTS\";\nexport const START_FETCH_LEADNOTES = \"START_FETCH_LEADNOTES\";\nexport const FETCH_LISTS = \"FETCH_LISTS\";\nexport const FETCH_LEADNOTES = \"FETCH_LEADNOTES\";\nexport const ADD_LIST = \"ADD_LIST\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const START_DELETE_LIST = \"START_DELETE_LIST\";\nexport const START_DELETE_LEAD = \"START_DELETE_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\nexport const DELETE_LISTLEAD = \"DELETE_LISTLEAD\";\nexport const FETCH_LIST_BY_ID = \"FETCH_LIST_BY_ID\";\nexport const ADD_LEAD_NOTE = \"ADD_LEAD_NOTE\";\nexport const ACTION_SUCCESS = \"ACTION_SUCCESS\";\nexport const FETCH_LIST_WITH_LEADNOTES = \"FETCH_LIST_WITH_LEADNOTES\";\n// export const START_DELETE_LEADLIST = \"START_DELETE_LEADLIST\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\n// LOGIN\n\nexport function loginUser(user) {\n  return {\n    type: \"LOGIN_USER\",\n    user\n  };\n}\n\nexport function logoutUser() {\n  return {\n    type: \"LOGOUT_USER\"\n  };\n}\n\nexport function currentUser(history) {\n  return dispatch => {\n    const token = localStorage.token;\n    const reqObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n\n    // dispatch with \"loading\" current user\n\n    return fetch(\"http://localhost:3000/api/v1/current_user\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          //handle error\n          history.push(\"/\");\n          console.log(\"current user\", data.error);\n        } else {\n          dispatch(loginUser({ user: data.user }));\n        }\n      });\n  };\n}\n\n// ? testing\nexport function loadUser(loadingCb, successCb, failCb) {\n  return function(dispatch) {\n    loadingCb();\n    const token = localStorage.token;\n    const reqObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n\n    // dispatch with \"loading\" current user\n\n    return fetch(\"http://localhost:3000/api/v1/current_user\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        dispatch({ type: \"ACTION_SUCCESS\", user: data.user });\n        successCb();\n      })\n      .catch(err => {\n        failCb();\n      });\n  };\n}\n\nexport function login(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData)\n    };\n\n    return fetch(\"http://localhost:3000/api/v1/login\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.message) {\n          //handle error case\n          console.log(\"login error\", data.message);\n        } else {\n          console.log(\"fetch login\", data);\n          localStorage.token = data.token;\n          dispatch(loginUser({ user: data.user }));\n          history.push(\"/search\");\n        }\n      })\n      .catch(err => console.log(err));\n  };\n}\n\nexport function registerUser(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData)\n    };\n\n    return fetch(\"http://localhost:3000/api/v1/auth\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          //handle error case\n          console.log(data.error);\n        } else {\n          localStorage.token = data.token;\n          dispatch(loginUser(data.user));\n          history.push(\"/search\");\n        }\n      });\n  };\n}\n\n////LOGIN\n\nexport function thunkFetchCategories() {\n  return function(dispatch) {\n    dispatch({ type: START_FETCH_CATEGORIES });\n\n    fetch(\"http://localhost:3000/api/v1/categories\")\n      .then(res => res.json())\n      .then(data => {\n        dispatch({ type: FETCH_CATEGORIES, categories: data });\n      });\n  };\n}\n\n// ? Invoked on App.js and fetches all lists in array format with leads data\n// ? Used to populate the Dashboard.js\n\nexport function thunkFetchLists(id) {\n  return function(dispatch) {\n    // dispatch({ type: START_FETCH_LISTS });\n\n    fetch(`http://localhost:3000/api/v1/lists/show_lists/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        dispatch({ type: FETCH_LISTS, lists: data });\n      });\n  };\n}\n\n// ? Search by id of the LIST and return a list with leads and leadnote data\n// ? Used to populate LeadList.js\n\nexport function thunkFetchListById(id, history) {\n  return function(dispatch) {\n    fetch(`http://localhost:3000/api/v1/lists/show_special/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        dispatch({\n          type: FETCH_LIST_BY_ID,\n          leads: data.leads,\n          list: data.list\n        });\n        history.push(\"/leads\");\n      });\n  };\n}\n\nexport function thunkFetchAllListById(id) {\n  return function(dispatch) {\n    fetch(`http://localhost:3000/api/v1/lists/show_special_all/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"LIST WITH ALL LEADNOTES\", data);\n        dispatch({\n          type: FETCH_LIST_WITH_LEADNOTES,\n          leads: data.leads_with_notes,\n        });\n      });\n  };\n}\n\n//! FETCHES ONE LEADNOTE (DONT THINK I NEED THIS ANYMORE)\n// export function thunkFetchLeadNote(user_id, lead_id) {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_LEADNOTE });\n\n//     fetch(\"http://localhost:3000/leadnotes/show\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": 'application/json',\n//         \"Accept\": 'application/json'\n//       },\n//       body: JSON.stringify({\n//         user_id: user_id,\n//         lead_id: lead_id\n//       })\n//     })\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(\"leadnote\", data)\n//       // dispatch({ type: FETCH_LEADNOTE, leadnote: data});\n//       // history.push('/leads')\n//     })\n//   }\n// }\n\n// ! FETCHES ALL LEADNOTES\n\n// export function thunkFetchLeadNotes(user_id) {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_LEADNOTES });\n\n//     fetch(`http://localhost:3000/leadnotes/${user_id}`)\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(\"leadnotes\", data)\n//       dispatch({ type: FETCH_LEADNOTES, leadnotes: data});\n//       // history.push('/leads')\n//     })\n//   }\n// }\n\n/////////////////// FETCHING LEADLIST /////////////////////////\n\n// export function thunkFetchListById(id, history) {\n//   return function(dispatch) {\n//     // dispatch({ type: START_FETCH_LISTS });\n\n//     fetch(`http://localhost:3000/api/v1/lists/show/${id}`)\n//       .then(res => res.json())\n//       .then(data => {\n//         console.log(data.leads)\n//         dispatch({ type: FETCH_LIST_BY_ID, listlead: data.leads, listid: data.id});\n//         history.push('/leads')\n//       });\n//   };\n// }\n\n// creating a new lead instance of the one the user saved and creating the association between list and lead\nexport function addLead(\n  leadsArray,\n  company,\n  website,\n  listId,\n  newListName,\n  userId\n) {\n  return function(dispatch) {\n    // const token = localStorage.token;\n    dispatch({ type: START_FETCH_LEADS });\n\n    fetch(\"http://localhost:3000/api/v1/leads\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        leadsArray,\n        company: company,\n        website: website\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        const leadsData = data;\n        if (listId) {\n          data.forEach(lead => {\n            fetch(\"http://localhost:3000/api/v1/leadlists\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              body: JSON.stringify({\n                list_id: listId,\n                lead_id: lead.id\n              })\n            }).catch(err => console.log(err));\n          });\n        } else {\n          fetch(\"http://localhost:3000/api/v1/lists\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n              name: newListName,\n              user_id: userId\n            })\n          })\n            .then(res => res.json())\n            .then(data => {\n              console.log(data);\n              dispatch({ type: ADD_LIST, list: data });\n              leadsData.forEach(lead => {\n                fetch(\"http://localhost:3000/api/v1/leadlists\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    list_id: data.id,\n                    lead_id: lead.id\n                  })\n                })\n                  .then(res => res.json())\n                  .then(data =>\n                    console.log(\"leadlist from creation of new list\", data)\n                  )\n                  .catch(err => console.log(err));\n              });\n            })\n            .catch(err => console.log(err));\n        }\n      })\n      .catch(err => console.log(err));\n  };\n}\n\n// export function addList(listName, id) {\n//   return function(dispatch) {\n\n//     fetch(\"http://localhost:3000/api/v1/lists\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": 'application/json',\n//         \"Accept\": 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: listName\n//       })\n//     })\n//       .then(res => res.json())\n//       .then(data => {\n\n//       })\n//       .catch(err => console.log(err));\n//   };\n// }\n\nexport function thunkFetchLeads(domainName, history) {\n  return function(dispatch) {\n    dispatch({ type: START_FETCH_LEADS });\n\n    fetch(\n      `https://api.hunter.io/v2/domain-search?domain=${domainName}&limit=100&api_key=7ca084937e5e049696b7bb64c10366c3d077c650`\n    )\n      .then(res => res.json())\n      .then(result => {\n        dispatch({ type: FETCH_LEADS, id: uuidv1(), leads: result.data });\n        history.push(\"/results\");\n      });\n  };\n}\n\nexport function deleteList(id) {\n  return function(dispatch) {\n    dispatch({ type: START_DELETE_LIST });\n\n    fetch(`http://localhost:3000/api/v1/lists/${id}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then(dispatch({ type: DELETE_LIST, id }))\n      .catch(err => console.log(err));\n  };\n}\n\n// ? delete lead from LeadList.js\nexport function deleteListLead(list_id, lead_id) {\n  return function(dispatch) {\n    fetch(`http://localhost:3000/api/v1/leadlists`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        list_id: list_id,\n        lead_id: lead_id\n      })\n    })\n      .then(res => res.json())\n      .then(data => dispatch({ type: DELETE_LISTLEAD, id: lead_id }))\n      // dispatch({type: DELETE_LISTLEAD, lead_id: lead_id, list: list_id})})\n      .catch(err => console.log(err));\n  };\n}\n\nexport function addLeadNote(status, nextSteps, userId, leadId, comment) {\n  return function(dispatch) {\n    fetch(\"http://localhost:3000/leadnotes/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        status: status,\n        next_steps: nextSteps,\n        comments: comment,\n        lead_id: leadId,\n        user_id: userId\n      })\n    })\n      .then(res => res.json())\n      .then(console.log)\n      // .then(data => {\n      // dispatch({type: ADD_LEAD_NOTE, leadnote: data})})\n      .catch(err => console.log(err));\n  };\n}\n//// ! ADD COMMENTS AS THE CALL BACK using the leadnote id received back from data\n// ! Create a reducer for this action\n\n// .then(data => {\n//    console.log(data)\n//    fetch(\"http://localhost:3000/comments\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": 'application/json',\n//       \"Accept\": 'application/json'\n//     },\n//     body: JSON.stringify({\n//       leadnote_id: data.id,\n//       status: comment\n\nexport function updateUser(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData)\n    };\n\n    return fetch(\"http://localhost:3000/api/v1/auth\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          //handle error case\n          console.log(data.error);\n        } else {\n          localStorage.token = data.token;\n          dispatch(loginUser(data.user));\n          history.push(\"/search\");\n        }\n      });\n  };\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, Redirect, Link, withRouter } from \"react-router-dom\";\nimport { logoutUser } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility\n} from \"semantic-ui-react\";\n\nconst styleBar = {\n  overflow: 'hidden',\n  backgroundColor: '#5400E8',\n  height: '50px',\n  textAlign: 'center',\n  verticalAlign: 'middle',\n  position: 'fixed',\n  top: '0',\n  width: '100%'\n}\n\nconst styleLink = {\n  float: 'right',\n  display: 'block',\n  color: '#f2f2f2',\n  textAlign: 'center',\n  padding: '14px 16px',\n  fontSize: '17px',\n  textDecoration: 'none'\n}\n\nclass Navbar extends React.Component {\n\n  handleLogout = () => {\n    this.props.logoutUser()\n    localStorage.removeItem('token')\n    this.props.history.push('/')\n    // redirect to login page\n  }\n\n  render() {\n    return (\n      <div style={styleBar}>\n        <NavLink style={styleLink} onClick={() => this.handleLogout()}>\n          Logout\n        </NavLink>\n        <NavLink style={styleLink} to=\"/leadlists\">\n          Dashboard\n        </NavLink>\n        {/* <NavLink style={styleLink} to=\"/results\">\n          Results\n        </NavLink> */}\n        <NavLink style={styleLink} to=\"/profile\">\n          My Profile\n        </NavLink>\n        <NavLink style={styleLink} to=\"/\">\n          Home\n        </NavLink>\n        \n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(Navbar));\n","import React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Confirm } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById } from \"../actions\";\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    deleteConfirmation: false,\n    totalLeadCount: 0,\n    totalMeetingsBooked: 0, \n    totalNotContacted: 0\n  };\n\n  componentDidMount() {\n    this.formattedListArray();\n     this.countTotalLeads()\n     this.countMeetingsBooked()\n     this.countNotContacted()\n  }\n\n  show = dimmer => this.setState({ dimmer, deleteConfirmation: true });\n  handleConfirm = () => this.setState({ deleteConfirmation: false });\n  handleCancel = () => {\n    this.setState({ deleteConfirmation: false });\n    // let newArray = this.state.data.filter(data => data.id !== id);\n    // this.setState({ data: newArray });\n    // this.props.deleteList(id);\n  };\n\n  formattedListArray = () => {\n    // if (this.props.lists.length) {\n    let array = [];\n    this.props.lists.forEach(list => {\n      let date = new Date(list.created_at);\n      let dateString = date.toDateString();\n      array.push({\n        id: list.id,\n        name: list.name,\n        date: dateString\n      });\n    });\n    this.setState({ data: array });\n    // return array\n  };\n\n  countTotalLeads = () => {\n    if (this.props.lists) {\n    let leadCountArray = []\n    let totalLeads\n    console.log(this.props.lists)\n    this.props.lists.forEach(list => {\n      let count = list.leads.length\n      leadCountArray.push(count)\n    })\n    totalLeads = leadCountArray.reduce((total, count) => total + count)\n    this.setState({totalLeadCount: totalLeads})\n    } else {\n      return null\n    }\n  }\n\n  countMeetingsBooked = () => {\n    let meetingsBookedCount = 0\n    if (this.props.listWithLeadNotes) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if(leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1\n          }\n        })\n      })\n      this.setState({totalMeetingsBooked: meetingsBookedCount})\n      } else {\n        return null\n      }\n  }\n\n    countNotContacted = () => {\n    let notContacted = 0\n    // let testArray = []\n    if (this.props.listWithLeadNotes) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1\n          console.log(notContacted)\n        }\n      })\n      this.setState({totalNotContacted: notContacted})\n      } else {\n        return null\n      }\n  }\n\n  handleConfirm = (event, id) => {\n    event.preventDefault()\n    console.log(id)\n    // console.log(this.state.data)\n    let newArray = this.state.data.filter(data => data.id !== id);\n    this.setState({ data: newArray, deleteConfirmation: false });\n    this.countTotalLeads()\n    this.countMeetingsBooked()\n    this.countNotContacted()\n    this.props.deleteList(id);\n    // debugger\n  };\n\n  handleRowClick = id => {\n    console.log(\"row clicked\", id);\n    this.props.thunkFetchListById(id, this.props.history);\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const { column, data, direction, totalLeadCount, totalMeetingsBooked, totalNotContacted } = this.state;\n    // console.log(this.props.lists)\n    console.log(this.state);\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <Grid divided=\"vertically\">\n          <Grid.Row\n            style={{\n              position: \"fixed\",\n              top: \"40px\",\n              margin: \"40px\",\n              marginLeft: \"70px\",\n              padding: \"px\"\n            }}\n            columns={3}\n          >\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>{totalLeadCount}</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Meetings Booked</Card.Header>\n                  <Card.Description>{totalMeetingsBooked}</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Not Yet Contacted</Card.Header>\n                  <Card.Description>{totalNotContacted}</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row\n            style={{\n              position: \"fixed\",\n              top: \"250px\",\n              margin: \"40px\",\n              minHeight: \"600px\"\n            }}\n            columns={1}\n          >\n            <Grid.Column>\n              <Table sortable selectable celled fixed>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell\n                      sorted={column === \"name\" ? direction : null}\n                      onClick={this.handleSort(\"name\")}\n                    >\n                      List Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"meetings\" ? direction : null}\n                      onClick={this.handleSort(\"meetings\")}\n                    >\n                      Meetings Booked\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"total\" ? direction : null}\n                      onClick={this.handleSort(\"total\")}\n                    >\n                      Total Leads\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"date\" ? direction : null}\n                      onClick={this.handleSort(\"date\")}\n                    >\n                      Date Created\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    >\n                      Delete List\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {_.map(data, ({ id, name, date }) => (\n                    <Table.Row key={id}>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>\n                        {name}\n                      </Table.Cell>\n                      <Table.Cell\n                        onClick={() => this.handleRowClick(id)}\n                      ></Table.Cell>\n                      <Table.Cell\n                        onClick={() => this.handleRowClick(id)}\n                      ></Table.Cell>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>\n                        {date}\n                      </Table.Cell>\n                      {/* <Table.Cell><Icon name={'trash alternate outline'} onClick={(event) => this.handleDeleteClick(event, id)} name='trash alternate outline' size='large' /></Table.Cell> */}\n                      <Table.Cell>\n                        <Icon\n                          name={\"trash alternate outline\"}\n                          onClick={() => this.show(\"inverted\")}\n                          name=\"trash alternate outline\"\n                          size=\"large\"\n                        />\n                      <Confirm\n                        open={this.state.deleteConfirmation}\n                        cancelButton=\"Cancel\"\n                        confirmButton=\"Confirm\"\n                        onCancel={this.handleCancel}\n                        onConfirm={(event) => this.handleConfirm(event, id)}\n                      />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: id => {\n      dispatch(deleteList(id));\n    },\n    thunkFetchListById: (id, history) => {\n      dispatch(thunkFetchListById(id, history));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Dashboard));\n","import React, { Component } from 'react';\nimport Navbar from '../components/Navbar'\nimport Dashboard from '../components/Dashboard'\nimport {connect} from 'react-redux'\nimport { thunkFetchLists } from \"../actions\";\nimport { withRouter} from \"react-router-dom\";\n\n\n\n\nclass LeadListContainer extends Component {\n\n  componentDidMount() {\n    // // this.props.thunkFetchLists(17)\n    // if (this.props.auth.user.id) {\n    // this.thunkFetchLists(this.props.auth.user.id)\n    } \n\n  render() {\n    return (\n      <div style={{backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\"})`}}>\n       <Navbar />\n       <Dashboard />\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchLists: (id) => {\n      dispatch(thunkFetchLists(id));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    auth: state.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeadListContainer));\n","import React, { Component } from \"react\";\nimport { Form, Dropdown, Button } from \"semantic-ui-react\";\nimport { thunkFetchCategories, thunkFetchLeads } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from 'react-router-dom';\nimport Loading from './Loading'\n/////////////////////// STYLING /////////////////////////\nconst searchOptions = [\n  { key: \"industry\", text: \"Industry\", value: \"industry\" },\n  { key: \"domain\", text: \"Company Domain\", value: \"domain\" }\n];\n\nconst styleSearchBar = {\n\n}\n\n/////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  state = {\n    selectionParam: \"\",\n    searchParam: \"\",\n    locationParam: \"\",\n    leadsResults: [],\n    searchClicked: false\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    const targetName = data.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    this.setState({searchClicked: true})\n    this.props.thunkFetchLeads(this.state.searchParam, this.props.history)\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        {/* {this.state.searchClicked ? <Loading /> : null} */}\n        {/* <Form>  */}\n            <Form >\n              <Form.Group >\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"searchParam\"\n                placeholder=\"Enter domain name...\"\n                loading={this.state.searchClicked ? true : false }\n                style={{fontSize:\"large\", marginLeft:\"40px\", marginTop:\"20px\", height:\"50px\", borderColor:\"#6200EE\", borderWidth:\"medium\", width:\"490px\"}}\n              />\n              <Button style={{fontSize:\"large\", backgroundColor:\"#6200EE\", marginTop:\"20px\",color: 'white', width:\"120px\"}} type=\"submit\" onClick={this.handleSubmit}>\n                Search\n              </Button>\n            </Form.Group>\n            </Form>\n        {/* </Form> */}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchCategories: () => {\n      dispatch(thunkFetchCategories());\n    },\n    thunkFetchLeads: (domainName, history) => {\n      dispatch(thunkFetchLeads(domainName, history))\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(SearchBar));\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  Menu,\n  Form,\n  Icon,\n  Modal,\n  Header,\n  Button,\n  Dropdown,\n  Input,\n  Checkbox,\n  Pagination,\n  Message\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [],\n    activePage: 1,\n    leadsPagination: []\n    };\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n  };\n\n  // handleLeadClick = (lead, checked) => {\n  //   console.log(lead);\n  //   console.log(checked);\n  //   if (checked) {\n  //     this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n  //   } else {\n  //     const newArray = this.state.leadsArray.filter(\n  //       l => l.value !== lead.value\n  //     );\n  //     this.setState({ leadsArray: newArray });\n  //   }\n  // };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.props.listWithLeadNotes.forEach(l => {\n        console.log(\"what is l\", l)\n        if (l.lead.email !== lead.value) {\n          this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n        } else {\n          return (\n            <Message>\n              <Message.Header>Heads up! You have already added this lead</Message.Header>\n            </Message>\n          )\n        }\n      })\n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  render() {\n    const { activePage } = this.state;\n    const dataArray = this.props.leads;\n    const dataArrayEmails = this.props.leads.emails;\n    let dataSlice;\n    if (activePage === 1) {\n      dataSlice = dataArrayEmails.slice(0, 9);\n    } else if (activePage === 2) {\n      dataSlice = dataArrayEmails.slice(10, 19);\n    } else if (activePage === 3) {\n      dataSlice = dataArrayEmails.slice(20, 29);\n    } else if (activePage === 4) {\n      dataSlice = dataArrayEmails.slice(30, 39);\n    } else if (activePage === 5) {\n      dataSlice = dataArrayEmails.slice(40, 49);\n    } else if (activePage === 6) {\n      dataSlice = dataArrayEmails.slice(50, 59);\n    } else if (activePage === 7) {\n      dataSlice = dataArrayEmails.slice(60, 69);\n    } else if (activePage === 8) {\n      dataSlice = dataArrayEmails.slice(70, 79);\n    } else if (activePage === 9) {\n      dataSlice = dataArrayEmails.slice(80, 89);\n    } else if (activePage === 10) {\n      dataSlice = dataArrayEmails.slice(90, 99);\n    } else {\n      dataSlice = [];\n    }\n    console.log(\"search results\", this.state)\n    console.log(\"list props\", this.props.lists);\n    let lists = this.props.lists;\n    let listArray = lists.map(list => {\n      return {\n        key: list.id,\n        text: list.name,\n        value: list.id\n      };\n    });\n    const tableRow = dataSlice.map(lead => {\n      return (\n        <Table.Row>\n          <Table.Cell>{lead.first_name}</Table.Cell>\n          <Table.Cell>{lead.last_name}</Table.Cell>\n          <Table.Cell>{lead.value}</Table.Cell>\n          <Table.Cell>{lead.position}</Table.Cell>\n          <Table.Cell>{dataArray.organization}</Table.Cell>\n          <Table.Cell>{lead.confidence}</Table.Cell>\n          <Table.Cell>\n            <Checkbox\n              onClick={(event, { checked }) =>\n                this.handleLeadClick(lead, checked)\n              }\n            />\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n    return (\n      <div>\n        <Navbar />\n        <div>\n          <h1>SEARCH RESULTS</h1>\n        </div>\n        <Table singleLine>\n          <Table.Header>\n            {this.state.leadsArray.length > 0 ? (\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"6\">\n                  {this.state.leadsArray.length} leads selected\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <Modal\n                    centered\n                    trigger={<Button>Save Leads</Button>}\n                    basic\n                    size=\"small\"\n                  >\n                    {listArray.length ? (\n                      <div>\n                        <Modal.Header as=\"h2\">\n                          Select an Existing List:\n                        </Modal.Header>\n                        <Modal.Actions>\n                          <Dropdown\n                            onChange={this.handleDropdown}\n                            name=\"listId\"\n                            style={styleDropdown}\n                            placeholder=\"Select list...\"\n                            fluid\n                            disabled={this.state.newListName ? true : false}\n                            selection\n                            options={listArray}\n                          />\n                          <Modal.Header as=\"h2\">\n                            Create a New List:\n                          </Modal.Header>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Modal.Header as=\"h2\"></Modal.Header>\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    ) : (\n                      <div>\n                        <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                        <Modal.Actions>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    )}\n                  </Modal>\n                </Table.HeaderCell>\n              </Table.Row>\n            ) : null}\n            <Table.Row>\n              <Table.HeaderCell>First Name</Table.HeaderCell>\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell>Position</Table.HeaderCell>\n              <Table.HeaderCell>Company</Table.HeaderCell>\n              <Table.HeaderCell>Confidence</Table.HeaderCell>\n              <Table.HeaderCell>Save Lead</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{tableRow}</Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Pagination\n                  boundaryRange={0}\n                  defaultActivePage={1}\n                  ellipsisItem={\"...\"}\n                  firstItem={{\n                    content: <Icon name=\"angle double left\" />,\n                    icon: true\n                  }}\n                  lastItem={{\n                    content: <Icon name=\"angle double right\" />,\n                    icon: true\n                  }}\n                  prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                  nextItem={{\n                    content: <Icon name=\"angle right\" />,\n                    icon: true\n                  }}\n                  siblingRange={1}\n                  totalPages={10}\n                  onPageChange={(event, { activePage }) =>\n                    this.handlePageChange(activePage)\n                  }\n                />\n                {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(\n        addLead(leadsArray, company, website, listId, newListName, userId)\n      );\n    }\n  };\n};\n\n// Connect this component to all returns for the company search\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchResults);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment\n} from \"semantic-ui-react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions\";\nimport \"../App.css\";\n\n// const styleColumn = {\n//   float: \"left\",\n//   width: \"50%\",\n//   padding: \"14px\"\n//   // margin: '10px'\n// };\n\nconst styleForm = {\n  // float: \"right\",\n  width: \"500px\",\n  height: \"400px\",\n  padding: \"30px\",\n  margin: \"40px\",\n  textAlign: 'center',\n  marginTop: '150px'\n  // paddingLeft: \"20px\"\n};\n\nclass LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.login(this.state, this.props.history);\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"login-form\">\n          <Grid textAlign=\"center\" verticalAlign=\"middle\">\n            <Form.Group>\n              <Form style={styleForm} size=\"large\" onSubmit={this.handleSubmit}>\n                <Header as=\"h2\" style={{ color: \"#03DAC6\" }} textAlign=\"center\">\n                  Log-in\n                </Header>\n                <Segment>\n                  <Form.Input\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    fluid\n                    icon=\"user\"\n                    iconPosition=\"left\"\n                    placeholder=\"E-mail address\"\n                  />\n                  <Form.Input\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    fluid\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                  />\n                  <Button\n                    style={{ backgroundColor: \"#03DAC6\", color: \"white\" }}\n                    fluid\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                  <NavLink\n                    style={{marginTop: '20px'}}\n                    to=\"/signup\"\n                    activeClassName=\"hurray\"\n                  >\n                    New User\n                  </NavLink>\n                </Segment>\n              </Form>\n            </Form.Group>\n            {/* </Grid.Column> */}\n          </Grid>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (formData, history) => {\n      dispatch(login(formData, history));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LoginForm));\n","import React, { Component } from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchResultsTest from \"../NOT USING/SearchResultsTest\";\nimport NavBar from \"../components/Navbar\";\nimport DatatablePage from \"../NOT USING/DatatablePage\";\nimport LoginForm from \"../components/LoginForm\";\n// import LeadList from \"../components/LeadsList\";\nimport { thunkFetchLeads, thunkFetchLists } from \"../actions\";\nimport { connect } from \"react-redux\";\n\n\nconst CATEGORY_URL = \"http://localhost:3000/api/v1/categories\";\nconst LEADS_URL = \"http://localhost:3000/api/v1/leads\";\n\nclass SearchContainer extends Component {\n\n  render() {\n    // console.log(this.state)\n    return (\n      <div>\n        <NavBar />\n          <div>\n            <SearchBar />\n            {/* <LeadList /> */}\n            {/* <SearchResultsTest /> */}\n          </div>\n        {/* <SearchResultsTest />} */}\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   return {leads: state.leads}\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     thunkFetchLeads: () => {\n//       dispatch(thunkFetchLeads());\n//     },\n//     thunkFetchLists: () => {\n//       dispatch(thunkFetchLists());\n//     }\n//   };\n// };\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(SearchContainer);\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Header, Image, Segment, Container, Grid} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { currentUser, loadUser } from \"../actions\";\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      loading: false,\n      success: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.loadUser(\n      () => {\n        this.setState({ loading: true });\n      },\n      () => {\n        this.setState({ success: true, loading: false });\n      },\n      () => {\n        this.setState({ success: false, loading: false });\n      }\n    );\n  }\n\n  handleDeleteClick = () => {\n\n  }\n\n  render() {\n    let condRender = null;\n\n    if (this.state.loading) {\n      condRender = <div> LOADING </div>;\n    } else if (this.state.success == true) {\n      condRender = (\n        <div style={{textAlign: 'center', backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\"})`}}>\n          {\" \"}\n          \n          <Navbar />\n          {/* <Header\n            style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n            as=\"h3\"\n            content=\"Text Container\"\n            textAlign=\"center\"\n          > */}\n          <Container style={{display: 'inline-block', minHeight: '830px', width: '50%', backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\"})`, backgroundSize: 'cover'}}>\n            <Grid>\n              <Grid.Column style={{ positon: \"absolute\", top: '70px', verticalAlign: 'center'}}>\n                <Grid.Row columns={1} centered doubling>\n                  <Grid.Column centered>\n                    <Segment textAlign='center'>\n                      <Header as=\"h1\">\n                        {\" \"}\n                        {this.props.auth.user.first_name}{\" \"}\n                        {this.props.auth.user.last_name}\n                      </Header>\n                      <Image circular src={this.props.auth.user.img_url} />\n                    <Segment style={{ marginBottom: \"20px\", marginTop: \"20px\" }} as={Link} to='/edit'>Edit Account</Segment>\n                    <Segment style={{ marginBottom: \"20px\", marginTop: \"20px\" }} as={Link} to='/leadlists'>View Lead Lists</Segment>\n                    <Segment style={{ marginBottom: \"20px\", marginTop: \"20px\" }} onClick={this.handleDeleteClick} >Delete Account</Segment>\n                    </Segment>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid.Column>\n              {/* <Grid.Column style={{ positon: \"absolute\", left: \"150px\" }}>\n                <Grid.Row columns={3} doubling>\n                  <Grid.Column style={{ marginBottom: \"20px\" }}>\n                    <Segment>Edit Account</Segment>\n                  </Grid.Column>\n                  <Grid.Column style={{ marginBottom: \"20px\" }}>\n                    <Segment>View Lead Lists</Segment>\n                  </Grid.Column>\n                  <Grid.Column style={{ marginBottom: \"20px\" }}>\n                    <Segment>Delete Account</Segment>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid.Column> */}\n            </Grid>\n          </Container>\n        </div>\n      );\n    } else if (!this.state.success) {\n      condRender = <div> ERROR </div>;\n    }\n\n    return condRender;\n  }\n}\n\n//   }\n\n//   render() {\n//     console.log(this.props.auth)\n//     // const {img_url, first_name, last_name, email} = this.props.auth.user\n//     const isLoading = this.state.isLoading\n//     if (isLoading) {\n//       return (\n//         <div>Loading...</div>\n//         )\n//       } else {\n//         console.log(this.props.auth.user.img_url)\n//     return (\n//       <div>\n//         <Navbar />\n//         <Header\n//           style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n//           as=\"h3\"\n//           content=\"Text Container\"\n//           textAlign=\"center\"\n//         >\n//           <Grid columns={2}>\n//             <Grid.Column>\n//               <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>\n//                     <Image circular  />\n//                   </Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Header> </Header>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Grid columns={3} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//           </Grid>\n//         </Header>\n//       </div>\n//     );\n//     }\n//   }\n// }\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { loadUser }\n)(UserProfile);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions\";\n\nconst styleColumn = {\n  float: \"left\",\n  width: \"50%\",\n  padding: \"14px\"\n  // margin: '10px'\n};\n\nconst styleForm = {\n  // float: \"right\",\n  width: \"500px\",\n  height: \"400px\",\n  padding: \"30px\",\n  margin: \"40px\",\n  textAlign: 'center',\n  marginTop: '150px'\n  // paddingLeft: \"20px\"\n};\n\nclass NewUserForm extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.registerUser(this.state, this.props.history);\n  };\n\n  render() {\n    console.log(\"new user form\", this.state);\n    return (\n      <div className=\"new-user-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Form.Group>\n            <Form style={styleForm} size=\"large\" onSubmit={this.handleSubmit}>\n              <Header as=\"h2\" style={{ color: \"#03DAC6\" }} textAlign=\"center\">\n                Create A New Account\n              </Header>\n              <Segment>\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"firstName\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"First Name\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"lastName\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Last Name\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  fluid\n                  icon=\"envelope open icon\"\n                  iconPosition=\"left\"\n                  placeholder=\"Email\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"password\"\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n                <Button\n                  style={{ backgroundColor: \"#03DAC6\", color: \"white\" }}\n                  fluid\n                  size=\"large\"\n                >\n                  Create Account\n                </Button>\n                <NavLink to=\"/\" activeClassName=\"hurray\">\n                  Back to Login\n                </NavLink>\n              </Segment>\n            </Form>\n          </Form.Group>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registerUser: (formData, history) =>\n      dispatch(registerUser(formData, history))\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(NewUserForm));\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility,\n  Input,\n  Pagination\n} from \"semantic-ui-react\";\nimport SearchBar from \"./SearchBar\";\n\n// Heads up!\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst HomepageHeading = ({ mobile }) => (\n  <Container text centered>\n    <Header\n      as=\"h1\"\n      content=\"Search for Prospects Instantly\"\n      style={{\n        fontSize: mobile ? \"2em\" : \"3em\",\n        fontWeight: \"bold\",\n        marginBottom: 0,\n        marginTop: mobile ? \"1.5em\" : \"5em\"\n      }}\n    />\n    <SearchBar />\n  </Container>\n);\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { children } = this.props;\n    const { fixed } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            // inverted\n            textAlign=\"center\"\n            // style={{ minHeight: 700, padding: \"1em 0em\" }}\n            vertical\n            style={{\n              backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\"})`,\n              backgroundSize: \"cover\",\n              width: \"100%\",\n              height: \"100%\",\n              minHeight: 800,\n              padding: \"1em 0em\"\n            }}\n          >\n            <Menu\n              fixed={fixed ? \"top\" : null}\n              // inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size=\"large\"\n            >\n              <Container>\n                <Menu.Item\n                  style={{ fontSize: \"large\", color: \"#43425D\" }}\n                  as={Link}\n                  to=\"/\"\n                  active\n                >\n                  Home\n                </Menu.Item>\n                <Menu.Item\n                  style={{ fontSize: \"large\", color: \"#43425D\" }}\n                  as={Link}\n                  to=\"/leadlists\"\n                >\n                  Dashboard\n                </Menu.Item>\n                <Menu.Item\n                  style={{ fontSize: \"large\", color: \"#43425D\" }}\n                  as={Link}\n                  to=\"/profile\"\n                >\n                  My Account\n                </Menu.Item>\n                {/* <Menu.Item\n                  style={{ fontSize: \"large\", color: \"#43425D\" }}\n                  as={Link}\n                  to=\"/results\"\n                >\n                  Results\n                </Menu.Item> */}\n                <Menu.Item position=\"right\">\n                  <Button as={Link} to=\"/login\" inverted={!fixed}>\n                    Log in\n                  </Button>\n                  <Button\n                    as={Link}\n                    to=\"/signup\"\n                    inverted={!fixed}\n                    primary={fixed}\n                    style={{ marginLeft: \"0.5em\" }}\n                  >\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n            <HomepageHeading />\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as=\"a\" active>\n            Home\n          </Menu.Item>\n          <Menu.Item as=\"a\">Dashboard</Menu.Item>\n          <Menu.Item as=\"a\">My Profile</Menu.Item>\n          <Menu.Item as=\"a\">Careers</Menu.Item>\n          <Menu.Item as=\"a\">Log in</Menu.Item>\n          <Menu.Item as=\"a\">Sign Up</Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 350, padding: \"1em 0em\" }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n                <Menu.Item position=\"right\">\n                  <Button as={Link} to=\"/login\" inverted>\n                    Log in\n                  </Button>\n                  <Button\n                    as={Link}\n                    to=\"/signup\"\n                    inverted\n                    style={{ marginLeft: \"0.5em\" }}\n                  >\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node\n};\n\n// const HomepageLayout = () => (\n//   <ResponsiveContainer>\n//     <Segment style={{ padding: \"8em 0em\" }} vertical>\n//       <Grid container stackable verticalAlign=\"middle\">\n//         <Grid.Row>\n//           <Grid.Column width={8}>\n//             <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n//               We Help Companies and Companions\n//             </Header>\n//             <p style={{ fontSize: \"1.33em\" }}>\n//               We can give your company superpowers to do things that they never\n//               thought possible. Let us delight your customers and empower your\n//               needs... through pure data analytics.\n//             </p>\n//             <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n//               We Make Bananas That Can Dance\n//             </Header>\n//             <p style={{ fontSize: \"1.33em\" }}>\n//               Yes that's right, you thought it was the stuff of dreams, but even\n//               bananas can be bioengineered.\n//             </p>\n//           </Grid.Column>\n//           <Grid.Column floated=\"right\" width={6}>\n//             <Image\n//               bordered\n//               rounded\n//               size=\"large\"\n//               src=\"/images/wireframe/white-image.png\"\n//             />\n//           </Grid.Column>\n//         </Grid.Row>\n//         <Grid.Row>\n//           <Grid.Column textAlign=\"center\">\n//             <Button size=\"huge\">Check Them Out</Button>\n//           </Grid.Column>\n//         </Grid.Row>\n//       </Grid>\n//     </Segment>\n//     <Segment style={{ padding: \"0em\" }} vertical>\n//       <Grid celled=\"internally\" columns=\"equal\" stackable>\n//         <Grid.Row textAlign=\"center\">\n//           <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n//             <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n//               \"What a Company\"\n//             </Header>\n//             <p style={{ fontSize: \"1.33em\" }}>\n//               That is what they all say about us\n//             </p>\n//           </Grid.Column>\n//           <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n//             <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n//               \"I shouldn't have gone with their competitor.\"\n//             </Header>\n//             <p style={{ fontSize: \"1.33em\" }}>\n//               <Image avatar src=\"/images/avatar/large/nan.jpg\" />\n//               <b>Nan</b> Chief Fun Officer Acme Toys\n//             </p>\n//           </Grid.Column>\n//         </Grid.Row>\n//       </Grid>\n//     </Segment>\n//     <Segment style={{ padding: \"8em 0em\" }} vertical>\n//       <Container text>\n//         <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n//           Breaking The Grid, Grabs Your Attention\n//         </Header>\n//         <p style={{ fontSize: \"1.33em\" }}>\n//           Instead of focusing on content creation and hard work, we have learned\n//           how to master the art of doing nothing by providing massive amounts of\n//           whitespace and generic content that can seem massive, monolithic and\n//           worth your attention.\n//         </p>\n//         <Button as=\"a\" size=\"large\">\n//           Read More\n//         </Button>\n//         <Divider\n//           as=\"h4\"\n//           className=\"header\"\n//           horizontal\n//           style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\n//         >\n//           <a href=\"#\">Case Studies</a>\n//         </Divider>\n//         <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n//           Did We Tell You About Our Bananas?\n//         </Header>\n//         <p style={{ fontSize: \"1.33em\" }}>\n//           Yes I know you probably disregarded the earlier boasts as non-sequitur\n//           filler content, but it's really true. It took years of gene splicing\n//           and combinatory DNA research, but our bananas can really dance.\n//         </p>\n//         <Button as=\"a\" size=\"large\">\n//           I'm Still Quite Interested\n//         </Button>\n//       </Container>\n//     </Segment>\n//     <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\n//       <Container>\n//         <Grid divided inverted stackable>\n//           <Grid.Row>\n//             <Grid.Column width={3}>\n//               <Header inverted as=\"h4\" content=\"About\" />\n//               <List link inverted>\n//                 <List.Item as=\"a\">Sitemap</List.Item>\n//                 <List.Item as=\"a\">Contact Us</List.Item>\n//                 <List.Item as=\"a\">Religious Ceremonies</List.Item>\n//                 <List.Item as=\"a\">Gazebo Plans</List.Item>\n//               </List>\n//             </Grid.Column>\n//             <Grid.Column width={3}>\n//               <Header inverted as=\"h4\" content=\"Services\" />\n//               <List link inverted>\n//                 <List.Item as=\"a\">Banana Pre-Order</List.Item>\n//                 <List.Item as=\"a\">DNA FAQ</List.Item>\n//                 <List.Item as=\"a\">How To Access</List.Item>\n//                 <List.Item as=\"a\">Favorite X-Men</List.Item>\n//               </List>\n//             </Grid.Column>\n//             <Grid.Column width={7}>\n//               <Header as=\"h4\" inverted>\n//                 Footer Header\n//               </Header>\n//               <p>\n//                 Extra space for a call to action inside the footer that could\n//                 help re-engage users.\n//               </p>\n//             </Grid.Column>\n//           </Grid.Row>\n//         </Grid>\n//       </Container>\n//     </Segment>\n//   </ResponsiveContainer>\n// );\nexport default DesktopContainer;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Card,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  Header,\n  Modal,\n  Form\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, deleteListLead, addLeadNote } from \"../actions\";\n\nconst statusArray = [\n  { key: \"10\", text: \"Meeting booked\", value: \"Meeting booked\" },\n  {\n    key: \"25\",\n    text: \"Met with decision maker\",\n    value: \"Met with decision maker\"\n  },\n  { key: \"50\", text: \"Proposal sent\", value: \"Proposal sent\" },\n  { key: \"90\", text: \"Verbal confirmation\", value: \"Verbal confirmation\" },\n  { key: \"100\", text: \"Sale closed\", value: \"Sale closed\" },\n  {\n    key: \"notfit\",\n    text: \"Not fit for business\",\n    value: \"Not fit for business\"\n  },\n  { key: \"incorrect\", text: \"Incorrect contact\", value: \"Incorrect contact\" },\n  {\n    key: \"contact\",\n    text: \"Contact at later date\",\n    value: \"Contact at later date\"\n  }\n];\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    activePage: 1,\n    statusInput: \"\",\n    nextStepsInput: \"\",\n    commentsInput: \"\"\n  };\n\n  componentDidMount() {\n    this.formattedListArray();\n  }\n\n  formattedListArray = () => {\n    // let listArray = this.props.listlead[0];\n    let listArray = this.props.listleads.leads;\n    // let leadNotesArray = this.props.leadnotes\n    // let leadnoteArray= lead.leadnotes\n    // let lastLeadnote = leadnoteArray.slice(-1)[0]\n    if (listArray) {\n      // console.log(\"LISTARRAY??\", listArray)\n      let array = listArray.map(lead => {\n        // const oneLead = lead.lead\n        let last = null\n        if (lead.leadnotes.length) {\n          last = lead.leadnotes[lead.leadnotes.length - 1];\n        }\n        console.log(\"LAST\", last)\n        if (lead.leadnotes.length > 0) {\n          let date = new Date(last.created_at)\n          let dateString = date.toDateString()\n        return {\n          id: lead.lead.id,\n          first_name: lead.lead.first_name,\n          last_name: lead.lead.last_name,\n          position: lead.lead.position,\n          company: lead.lead.company,\n          status: last.status,\n          next_steps: last.next_steps,\n          comments: last.comments,\n          comments_date: dateString,\n          last_date_contacted: lead.lead.contacted_date,\n          email: lead.lead.email,\n          phone_number: lead.lead.phone_number\n        }\n      } else {\n        return {\n          id: lead.lead.id,\n          first_name: lead.lead.first_name,\n          last_name: lead.lead.last_name,\n          position: lead.lead.position,\n          company: lead.lead.company,\n          status: null,\n          next_steps: null,\n          comments: null,\n          comments_date: null,\n          last_date_contacted: lead.lead.contacted_date,\n          email: lead.lead.email,\n          phone_number: lead.lead.phone_number\n        }}\n      });\n      console.log(\"LISTARRAY\", listArray);\n      this.setState({ data: array });\n    }\n  };\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault();\n    let newArray = this.state.data.filter(data => data.id !== lead_id);\n    this.setState({ data: newArray });\n    this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n    // debugger\n  };\n\n  // handleRowClick = id => {\n  //   console.log(\"row clicked\", id);\n  // };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ statusInput: targetValue });\n  };\n\n  handleAddLeadNote = leadId => {\n    console.log(leadId);\n    const { statusInput, nextStepsInput, commentsInput } = this.state;\n    this.props.addLeadNote(\n      statusInput,\n      nextStepsInput,\n      this.props.auth.user.id,\n      leadId,\n      commentsInput\n    );\n  };\n\n  // handleFetchClick = (id) => {\n  //   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n  // }\n\n  render() {\n    console.log(\"LEADLIST\", this.state);\n    const { column, data, direction, activePage } = this.state;\n    const leadnotesArray = this.props.leadnotes;\n\n    let dataSlice;\n    if (data) {\n      if (activePage === 1) {\n        dataSlice = data.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = data.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = data.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = data.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = data.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = data.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = data.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = data.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = data.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = data.slice(90, 99);\n      } else {\n        dataSlice = [];\n      }\n      // return dataSlice\n    }\n\n    return (\n      <div>\n        <Navbar />\n        <Grid style={{backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\"})`}} divided=\"vertically\">\n          <Grid.Row style={{marginTop:\"40px\", marginLeft: \"70px\"}} columns={3}>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>XXXXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Open Leads</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Another METRIC</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n          {this.props.listleads.leads ? (\n            <Grid.Row style={{margin:\"40px\", minHeight:'450px'}} columns={1}>\n              <Grid.Column>\n                <Table sortable selectable celled fixed>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell\n                        sorted={column === \"first_name\" ? direction : null}\n                        onClick={this.handleSort(\"first_name\")}\n                      >\n                        First Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"last_name\" ? direction : null}\n                        onClick={this.handleSort(\"last_name\")}\n                      >\n                        Last Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"position\" ? direction : null}\n                        onClick={this.handleSort(\"position\")}\n                      >\n                        Position\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"company\" ? direction : null}\n                        onClick={this.handleSort(\"company\")}\n                      >\n                        Company\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"next_steps\" ? direction : null}\n                        onClick={this.handleSort(\"next_steps\")}\n                      >\n                        Next Steps\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={\n                          column === \"last_date_contacted\" ? direction : null\n                        }\n                        onClick={this.handleSort(\"last_date_contacted\")}\n                      >\n                        Last Date Contacted\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Edit Lead</Table.HeaderCell>\n                      <Table.HeaderCell>Delete Lead</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {_.map(\n                      dataSlice,\n                      ({\n                        id,\n                        first_name,\n                        last_name,\n                        position,\n                        company,\n                        status,\n                        next_steps,\n                        last_date_contacted,\n                        phone_number,\n                        email,\n                        comments,\n                        comments_date\n                      }) => (\n                        <Table.Row\n                          key={id}\n                          // onClick={() => this.handleRowClick(id)}\n                        >\n                          <Table.Cell>{first_name}</Table.Cell>\n                          <Table.Cell>{last_name}</Table.Cell>\n                          <Table.Cell>{position}</Table.Cell>\n                          <Table.Cell>{company}</Table.Cell>\n                          <Table.Cell>{status}</Table.Cell>\n                          <Table.Cell>{next_steps}</Table.Cell>\n                          <Table.Cell>{comments_date}</Table.Cell>\n                          <Table.Cell>\n                            {/* {leadnotesArray.find(lead => )} */}\n                            <Modal\n                              trigger={\n                                <Icon name={\"edit outline\"} size=\"large\" />\n                              }\n                            >\n                              <Modal.Header as=\"h2\">\n                                {first_name} {last_name} <br />{\" \"}\n                                {position ? position + \",\" : null} {company}\n                              </Modal.Header>\n                              <Modal.Header as=\"h3\">\n                                {phone_number ? \"Phone:\" + phone_number : null}{\" \"}\n                                Email: {email}\n                                <Icon name={\"envelope\"}></Icon>\n                              </Modal.Header>\n                              {/* <Modal.Header as='h3'>{position}, {company}</Modal.Header> */}\n\n                              <Modal.Content>\n                                <Form>\n                                  <Form.Group>\n                                    <Form.Select\n                                      // fluid\n                                      onChange={this.handleDropdown}\n                                      name=\"statusInput\"\n                                      label=\"Status\"\n                                      options={statusArray}\n                                      placeholder={\n                                        status ? status : \"Select status\"\n                                      }\n                                    />\n                                    {/* <Form.Header>Next Steps</Form.Header> */}\n                                    <Form.Input\n                                      onChange={this.handleChange}\n                                      name=\"nextStepsInput\"\n                                      label=\"Next Steps\"\n                                      placeholder={\n                                        next_steps ? next_steps : \"Next steps\"\n                                      }\n                                    ></Form.Input>\n                                  </Form.Group>\n                                  <Form.Input\n                                    onChange={this.handleChange}\n                                    name=\"commentsInput\"\n                                    control=\"textarea\"\n                                    rows=\"3\"\n                                    label=\"Notes\"\n                                    value={\n                                      comments ? comments_date + comments : null\n                                    }\n                                  />\n                                  <Button\n                                    onClick={() => this.handleAddLeadNote(id)}\n                                  >\n                                    Save\n                                  </Button>\n                                  {/* <Form.Description></Form.Description> */}\n                                </Form>\n                              </Modal.Content>\n                            </Modal>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Icon\n                              name={\"trash alternate outline\"}\n                              onClick={event =>\n                                this.handleDeleteClick(event, id)\n                              }\n                              size=\"large\"\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    )}\n                  </Table.Body>\n                  <Table.Footer>\n                    <Table.Row>\n                      <Table.HeaderCell colSpan=\"3\">\n                        <Pagination\n                          boundaryRange={0}\n                          defaultActivePage={1}\n                          ellipsisItem={\"...\"}\n                          firstItem={{\n                            content: <Icon name=\"angle double left\" />,\n                            icon: true\n                          }}\n                          lastItem={{\n                            content: <Icon name=\"angle double right\" />,\n                            icon: true\n                          }}\n                          prevItem={{\n                            content: <Icon name=\"angle left\" />,\n                            icon: true\n                          }}\n                          nextItem={{\n                            content: <Icon name=\"angle right\" />,\n                            icon: true\n                          }}\n                          siblingRange={1}\n                          totalPages={10}\n                          onPageChange={(event, { activePage }) =>\n                            this.handlePageChange(activePage)\n                          }\n                        />\n                        {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Footer>\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          ) : (\n            <div>\n              <Header>You do not have any leads saved under this list.</Header>\n              <Button as={Link} to=\"/search\">\n                Go to Search\n              </Button>\n            </div>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, deleteListLead, addLeadNote }\n)(Dashboard);\n","// ! This is an unfinished Component\n\n\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateUser} from \"../actions\";\n\nconst styleColumn = {\n  float: \"left\",\n  width: \"50%\",\n  padding: \"14px\"\n  // margin: '10px'\n};\n\nconst styleForm = {\n  // float: \"right\",\n  width: \"500px\",\n  height: \"400px\",\n  padding: \"30px\",\n  margin: \"40px\",\n  textAlign: 'center',\n  marginTop: '150px'\n  // paddingLeft: \"20px\"\n};\n\nclass EditUserForm extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.updateUser(this.state, this.props.history);\n  };\n\n  render() {\n    return (\n      <div className=\"edit-user-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Form.Group>\n            <Form style={styleForm} size=\"large\" onSubmit={this.handleSubmit}>\n              <Header as=\"h2\" style={{ color: \"#03DAC6\" }} textAlign=\"center\">\n                Edit Account\n              </Header>\n              <Segment>\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"firstName\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder={this.props.auth.user.first_name}\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"lastName\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder={this.props.auth.user.last_name}\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  fluid\n                  icon=\"envelope open icon\"\n                  iconPosition=\"left\"\n                  placeholder={this.props.auth.user.email}\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"password\"\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n                <Button\n                  style={{ backgroundColor: \"#03DAC6\", color: \"white\" }}\n                  fluid\n                  size=\"large\"\n                >\n                  Update Account\n                </Button>\n              </Segment>\n            </Form>\n          </Form.Group>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {updateUser}\n)(withRouter(EditUserForm));\n","import React from \"react\";\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport LeadListContainer from \"../containers/LeadListContainer\";\nimport SearchContainer from \"../containers/SearchContainer\";\nimport UserProfile from \"./UserProfile\";\nimport SearchResults from \"./SearchResults\";\nimport LoginForm from \"./LoginForm\";\nimport NewUserForm from \"./NewUserForm\";\nimport LandingPage from \"./LandingPage\";\nimport LeadList from \"./LeadList\";\nimport EditUserForm from \"./EditUserForm\";\nimport { connect } from \"react-redux\";\nimport { currentUser, thunkFetchLists, thunkFetchAllListById } from \"../actions\";\n\n// const LEADS_URL = 'http://localhost:3000/api/v1/leads'\n\nclass App extends React.Component {\n  \n  componentDidMount() {\n    this.props.currentUser(this.props.history)\n  }\n\n  render() {\n    if (this.props.auth.user) {\n      this.props.thunkFetchLists(this.props.auth.user.id)\n      this.props.thunkFetchAllListById(this.props.auth.user.id)\n      // this.props.thunkFetchLeadNotes(this.props.auth.user.id)\n    }\n    return (\n      <div className=\"app\">\n        {/* {this.props.auth.id ? <Navbar /> : null} */}\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/login\" component={LoginForm} />\n          <Route exact path=\"/results\" component={SearchResults} />\n          <Route exact path=\"/leadlists\" component={LeadListContainer} />\n          <Route exact path=\"/profile\" component={UserProfile} />\n          <Route exact path=\"/search\" component={SearchContainer} />\n          <Route exact path=\"/signup\" component={NewUserForm} />\n          <Route exact path=\"/leads\" component={LeadList} />\n          <Route exact path=\"/edit\" component={EditUserForm} />\n        </Switch>\n        {/* <Route exact path=\"/logout\" component={} /> */}\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     currentUser: history => {\n//       dispatch(currentUser(history));\n//     },\n//     thunkFetchLists: id => {\n//       dispatch(thunkFetchLists(id));\n//     }\n//   };\n// };\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    auth: state.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {currentUser, thunkFetchAllListById, thunkFetchLists}\n)(withRouter(App));\n","import { combineReducers } from \"redux\";\nimport {\n  FETCH_CATEGORIES,\n  FETCH_LEADS,\n  FETCH_LISTS,\n  ADD_LIST,\n  LOGIN_USER,\n  LOGOUT_USER,\n  DELETE_LIST,\n  DELETE_LISTLEAD,\n  FETCH_LEADNOTES,\n  ADD_LEAD_NOTE,\n  ACTION_SUCCESS,\n  FETCH_LIST_WITH_LEADNOTES\n} from \"../actions\";\n\nexport default combineReducers({\n  categories: categories,\n  leads: leads,\n  lists: lists,\n  auth: auth,\n  listleads: listleads,\n  leadnotes: leadnotes,\n  listWithLeadNotes: listWithLeadNotes\n});\n\nfunction categories(state = [], action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return action.categories;\n    default:\n      return state;\n  }\n}\n\nfunction listWithLeadNotes(state = [], action) {\n  switch (action.type) {\n    case  FETCH_LIST_WITH_LEADNOTES:\n      return action.leads;\n    default:\n      return state;\n  }\n}\n\nfunction leads(state = [], action) {\n  switch (action.type) {\n    case FETCH_LEADS:\n      return action.leads;\n    default:\n      return state;\n  }\n}\n\nfunction lists(state = [], action) {\n  // let newState = []\n  switch (action.type) {\n    case FETCH_LISTS:\n      return action.lists;\n    case ADD_LIST:\n      return [...state, action.list];\n    case DELETE_LIST:\n      return [...state.filter(list => list.id !== action.id)];\n    default:\n      return state;\n  }\n}\n\nfunction auth(state = {}, action) {\n  switch (action.type) {\n    case \"ACTION_SUCESS\":\n        return action.user;\n    case \"LOGIN_USER\":\n      return action.user;\n    case \"LOGOUT_USER\":\n      return {};\n    default:\n      return state;\n  }\n}\n\n// ? Updates state with the lead-> leadnote association data for LeadList.js\n\nfunction listleads(state = {leads: [], list: []}, action) {\n  switch (action.type) {\n    case \"FETCH_LIST_BY_ID\":\n      return {leads: action.leads, list: action.list};\n    case \"DELETE_LISTLEAD\":\n        return {...state, leads: state.leads.filter(lead => lead.id !== action.id)};\n    default:\n      return state;\n  }\n}\n\nfunction leadnotes(state = [], action) {\n  switch (action.type) {\n    case \"FETCH_LEADNOTES\":\n      return action.leadnotes;\n    case \"ADD_LEAD_NOTE\":\n      return action.leadnote\n    default:\n      return state;\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers/index\";\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage\nimport {loadState, saveState} from './localStorage'\nimport throttle from 'lodash/throttle'\n\n// const persistedState = loadState()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(\n   applyMiddleware(thunk)\n));\n\n// removed persistedState from store\n\n// store.subscribe(throttle(() => {\n//   saveState({\n//     leads: store.getState().leads,\n//     auth: store.getState().auth,\n//     lists: store.getState().lists\n// });\n// }, 1000))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n    <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}