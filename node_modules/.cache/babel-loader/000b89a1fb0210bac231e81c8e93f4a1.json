{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Confirm } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from 'lodash';\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById } from '../actions';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      deleteConfirmation: false,\n      totalLeadCount: 0\n    };\n\n    this.show = dimmer => this.setState({\n      dimmer,\n      deleteConfirmation: true\n    });\n\n    this.handleConfirm = () => this.setState({\n      deleteConfirmation: false\n    });\n\n    this.handleCancel = id => {\n      this.setState({\n        deleteConfirmation: false\n      });\n      let newArray = this.state.data.filter(data => data.id !== id);\n      this.setState({\n        data: newArray\n      });\n      this.props.deleteList(id);\n    };\n\n    this.countTotalLeads = () => {\n      let leadCountArray = [];\n      this.props.lists.forEach(list => {\n        let count = list.leads.length;\n        leadCountArray.push(count);\n      });\n      let totalLeads = leadCountArray.reduce((total, count) => total + count);\n      this.setState({});\n    };\n\n    this.formattedListArray = () => {\n      // if (this.props.lists.length) {\n      let array = [];\n      this.props.lists.forEach(list => {\n        let date = new Date(list.created_at);\n        let dateString = date.toDateString();\n        array.push({\n          id: list.id,\n          name: list.name,\n          date: dateString\n        });\n      });\n      this.setState({\n        data: array\n      }); // return array\n    };\n\n    this.handleDeleteClick = (event, id) => {\n      event.preventDefault(); // console.log(id)\n      // console.log(this.state.data)\n\n      let newArray = this.state.data.filter(data => data.id !== id);\n      this.setState({\n        data: newArray\n      });\n      this.props.deleteList(id); // debugger\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n      this.props.thunkFetchListById(id, this.props.history);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.formattedListArray();\n  }\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction; // console.log(this.props.lists)\n\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        position: 'fixed',\n        top: '40px',\n        margin: \"40px\",\n        marginLeft: \"70px\",\n        padding: 'px'\n      },\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"XXXXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Open Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Another METRIC\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))))), React.createElement(Grid.Row, {\n      style: {\n        position: 'fixed',\n        top: '250px',\n        margin: \"40px\",\n        minHeight: '600px'\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"name\" ? direction : null,\n      onClick: this.handleSort(\"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"List Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"meetings\" ? direction : null,\n      onClick: this.handleSort(\"meetings\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Meetings Booked\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"total\" ? direction : null,\n      onClick: this.handleSort(\"total\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"date\" ? direction : null,\n      onClick: this.handleSort(\"date\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"date\" ? direction : null,\n      onClick: this.handleSort(\"date\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Delete List\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, _.map(data, ({\n      id,\n      name,\n      date\n    }) => React.createElement(Table.Row, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, name), React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, date), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'trash alternate outline',\n      onClick: () => this.show('inverted'),\n      name: \"trash alternate outline\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(Confirm, {\n      open: this.state.deleteConfirmation,\n      cancelButton: \"Cancel\",\n      confirmButton: \"Confirm\",\n      onCancel: this.handleCancel,\n      onConfirm: () => this.handleConfirm(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: id => {\n      dispatch(deleteList(id));\n    },\n    thunkFetchListById: (id, history) => {\n      dispatch(thunkFetchListById(id, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Confirm","connect","withRouter","_","Navbar","deleteList","thunkFetchListById","Dashboard","state","column","data","direction","deleteConfirmation","totalLeadCount","show","dimmer","setState","handleConfirm","handleCancel","id","newArray","filter","props","countTotalLeads","leadCountArray","lists","forEach","list","count","leads","length","push","totalLeads","reduce","total","formattedListArray","array","date","Date","created_at","dateString","toDateString","name","handleDeleteClick","event","preventDefault","handleRowClick","console","log","history","handleSort","clickedColumn","sortBy","reverse","componentDidMount","render","position","top","margin","marginLeft","padding","minHeight","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Confirm } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from 'lodash'\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById } from '../actions'\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS \n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    deleteConfirmation: false,\n    totalLeadCount: 0\n  };\n\n  componentDidMount() {\n   this.formattedListArray()\n  }\n\n  show = (dimmer) => this.setState({ dimmer, deleteConfirmation: true })\n  handleConfirm = () => this.setState({ deleteConfirmation: false })\n  handleCancel = (id) => {\n    this.setState({ deleteConfirmation: false })\n    let newArray = this.state.data.filter(data => data.id !== id)\n    this.setState({data: newArray})\n    this.props.deleteList(id)\n  }\n\n  countTotalLeads = () => {\n    let leadCountArray = []\n    this.props.lists.forEach(list => {\n      let count = list.leads.length\n      leadCountArray.push(count)\n    })\n    let totalLeads = leadCountArray.reduce((total, count) => total + count)\n    this.setState({})\n  }\n\n  formattedListArray = () => {\n    // if (this.props.lists.length) {\n    let array = []\n    this.props.lists.forEach(list => {\n      let date = new Date(list.created_at)\n      let dateString = date.toDateString()\n      array.push({\n        id: list.id,\n        name: list.name,\n        date: dateString\n      })\n    })\n    this.setState({data: array})\n    // return array\n}\n\n  handleDeleteClick = (event, id) => {\n    event.preventDefault()\n    // console.log(id)\n    // console.log(this.state.data)\n    let newArray = this.state.data.filter(data => data.id !== id)\n    this.setState({data: newArray})\n    this.props.deleteList(id)\n    // debugger\n  }\n\n  handleRowClick = (id) => {\n    console.log(\"row clicked\", id)\n    this.props.thunkFetchListById(id, this.props.history)\n  }\n  \n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  render() {\n\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const { column, data, direction } = this.state;\n    // console.log(this.props.lists)\n    console.log(this.state)\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <Grid divided=\"vertically\">\n          <Grid.Row style={{position: 'fixed', top: '40px', margin:\"40px\", marginLeft: \"70px\", padding: 'px'}} columns={3}>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>XXXXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Open Leads</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Another METRIC</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row style={{position: 'fixed', top: '250px', margin:\"40px\", minHeight:'600px'}} columns={1}>\n            <Grid.Column>\n              <Table sortable selectable celled fixed>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell\n                      sorted={column === \"name\" ? direction : null}\n                      onClick={this.handleSort(\"name\")}\n                    >\n                      List Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"meetings\" ? direction : null}\n                      onClick={this.handleSort(\"meetings\")}\n                    >\n                      Meetings Booked\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"total\" ? direction : null}\n                      onClick={this.handleSort(\"total\")}\n                    >\n                      Total Leads\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"date\" ? direction : null}\n                      onClick={this.handleSort(\"date\")}\n                    >\n                      Date Created\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"date\" ? direction : null}\n                      onClick={this.handleSort(\"date\")}\n                    >\n                      Delete List\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {_.map(data, ({ id, name, date}) => (\n                    <Table.Row key={id}>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>{name}</Table.Cell>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}></Table.Cell>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}></Table.Cell>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>{date}</Table.Cell>\n                      {/* <Table.Cell><Icon name={'trash alternate outline'} onClick={(event) => this.handleDeleteClick(event, id)} name='trash alternate outline' size='large' /></Table.Cell> */}\n                      <Table.Cell><Icon name={'trash alternate outline'} onClick={() => this.show('inverted')} name='trash alternate outline' size='large' /></Table.Cell>\n                      <Confirm\n                        open={this.state.deleteConfirmation}\n                        cancelButton='Cancel'\n                        confirmButton=\"Confirm\"\n                        onCancel={this.handleCancel}\n                        onConfirm={() => this.handleConfirm(id)}\n                        />\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: (id) => {\n      dispatch(deleteList(id))\n    },\n    thunkFetchListById: (id, history) => {\n      dispatch(thunkFetchListById(id, history))\n    }\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Dashboard));\n"]},"metadata":{},"sourceType":"module"}