{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchBar.js\";\nimport React, { Component } from \"react\";\nimport { Form, Dropdown, Button } from \"semantic-ui-react\";\nimport { thunkFetchCategories, thunkFetchLeads } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from 'react-router-dom';\nimport Loading from './Loading'; /////////////////////// STYLING /////////////////////////\n\nconst searchOptions = [{\n  key: \"industry\",\n  text: \"Industry\",\n  value: \"industry\"\n}, {\n  key: \"domain\",\n  text: \"Company Domain\",\n  value: \"domain\"\n}];\nconst styleSearchBar = {}; /////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectionParam: \"\",\n      searchParam: \"\",\n      locationParam: \"\",\n      leadsResults: [],\n      searchClicked: false\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      const targetName = data.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        searchClicked: true\n      });\n      this.props.thunkFetchLeads(this.state.searchParam, this.props.history);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"searchParam\",\n      placeholder: \"Enter domain name...\",\n      loading: this.state.searchClicked ? true : false // style={{fontSize:\"large\", marginLeft:\"40px\", marginTop:\"20px\", height:\"50px\", borderColor:\"#6200EE\", borderWidth:\"medium\", width:\"490px\"}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: '100px',\n        borderColor: '#6200EE',\n        height: \"50px\",\n        fontSize: \"large\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        fontSize: \"large\",\n        backgroundColor: \"#6200EE\",\n        marginTop: \"20px\",\n        color: 'white',\n        width: \"120px\"\n      },\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Search\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchCategories: () => {\n      dispatch(thunkFetchCategories());\n    },\n    thunkFetchLeads: (domainName, history) => {\n      dispatch(thunkFetchLeads(domainName, history));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchBar.js"],"names":["React","Component","Form","Dropdown","Button","thunkFetchCategories","thunkFetchLeads","connect","Link","withRouter","Loading","searchOptions","key","text","value","styleSearchBar","SearchBar","state","selectionParam","searchParam","locationParam","leadsResults","searchClicked","handleDropdown","e","data","targetValue","targetName","name","setState","handleChange","target","handleSubmit","props","history","render","borderRadius","borderColor","height","fontSize","backgroundColor","marginTop","color","width","mapDispatchToProps","dispatch","domainName","mapStateToProps","categories","leads"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Dropdown, Button } from \"semantic-ui-react\";\nimport { thunkFetchCategories, thunkFetchLeads } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from 'react-router-dom';\nimport Loading from './Loading'\n/////////////////////// STYLING /////////////////////////\nconst searchOptions = [\n  { key: \"industry\", text: \"Industry\", value: \"industry\" },\n  { key: \"domain\", text: \"Company Domain\", value: \"domain\" }\n];\n\nconst styleSearchBar = {\n\n}\n\n/////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  state = {\n    selectionParam: \"\",\n    searchParam: \"\",\n    locationParam: \"\",\n    leadsResults: [],\n    searchClicked: false\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    const targetName = data.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    this.setState({searchClicked: true})\n    this.props.thunkFetchLeads(this.state.searchParam, this.props.history)\n  };\n\n  render() {\n    return (\n      <div>\n        {/* {this.state.searchClicked ? <Loading /> : null} */}\n        {/* <Form>  */}\n            <Form >\n              <Form.Group >\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"searchParam\"\n                placeholder=\"Enter domain name...\"\n                loading={this.state.searchClicked ? true : false }\n                // style={{fontSize:\"large\", marginLeft:\"40px\", marginTop:\"20px\", height:\"50px\", borderColor:\"#6200EE\", borderWidth:\"medium\", width:\"490px\"}}\n              ><input style={{borderRadius: '100px', borderColor:'#6200EE', height: \"50px\",fontSize: \"large\" }} /></Form.Input>\n              <Button style={{fontSize:\"large\", backgroundColor:\"#6200EE\", marginTop:\"20px\",color: 'white', width:\"120px\"}} type=\"submit\" onClick={this.handleSubmit}>\n                Search\n              </Button>\n            </Form.Group>\n            </Form>\n        {/* </Form> */}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchCategories: () => {\n      dispatch(thunkFetchCategories());\n    },\n    thunkFetchLeads: (domainName, history) => {\n      dispatch(thunkFetchLeads(domainName, history))\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(SearchBar));\n"]},"metadata":{},"sourceType":"module"}