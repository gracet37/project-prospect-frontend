{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { FETCH_CATEGORIES, FETCH_LEADS, FETCH_LISTS, ADD_LIST, LOGIN_USER, LOGOUT_USER, DELETE_LIST, DELETE_LISTLEAD, FETCH_LEADNOTES } from \"../actions\";\nexport default combineReducers({\n  categories: categories,\n  leads: leads,\n  lists: lists,\n  auth: auth,\n  listlead: listlead\n});\n\nfunction categories(state = [], action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return action.categories;\n\n    default:\n      return state;\n  }\n}\n\nfunction leads(state = [], action) {\n  switch (action.type) {\n    case FETCH_LEADS:\n      return action.leads;\n\n    default:\n      return state;\n  }\n}\n\nfunction lists(state = [], action) {\n  // let newState = []\n  switch (action.type) {\n    case FETCH_LISTS:\n      return action.lists;\n\n    case ADD_LIST:\n      return [...state, action.list];\n\n    case DELETE_LIST:\n      return [...state.filter(list => list.id !== action.id)];\n\n    default:\n      return state;\n  }\n}\n\nfunction auth(state = {}, action) {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return action.user;\n\n    case \"LOGOUT_USER\":\n      return {};\n\n    default:\n      return state;\n  }\n} // ! NEED TO FINISH OFF THE DELETE LIST LEAD ACTION\n\n\nfunction listlead(state = [], action) {\n  // let findLead = state.find(lead => lead.id === action.id);\n  // let leadId = findLead.id\n  // let leadlist = state.find(leadlist => )\n  switch (action.type) {\n    case \"FETCH_LIST_BY_ID\":\n      return [action.listlead, action.listid];\n    // case \"DELETE_LISTLEAD\":\n    //   let listlead_state = state;\n    //   let newListState = [\n    //     ...state[0].filter(listlead => listlead.id !== action.id)\n    //   ];\n    //   let newListLeadState = [\n    //     {\n    //       leads: newListState,\n    //       id: state[1].id\n    //     }\n    //   ];\n    //   return newListLeadState;\n\n    default:\n      return state;\n  }\n}\n\nfunction leadnotes(state = [], action) {\n  switch (action.type) {\n    case \"FETCH_LEADNOTES\":\n      return action.leadnotes;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/reducers/index.js"],"names":["combineReducers","FETCH_CATEGORIES","FETCH_LEADS","FETCH_LISTS","ADD_LIST","LOGIN_USER","LOGOUT_USER","DELETE_LIST","DELETE_LISTLEAD","FETCH_LEADNOTES","categories","leads","lists","auth","listlead","state","action","type","list","filter","id","user","listid","leadnotes"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,eARF,EASEC,eATF,QAUO,YAVP;AAYA,eAAeT,eAAe,CAAC;AAC7BU,EAAAA,UAAU,EAAEA,UADiB;AAE7BC,EAAAA,KAAK,EAAEA,KAFsB;AAG7BC,EAAAA,KAAK,EAAEA,KAHsB;AAI7BC,EAAAA,IAAI,EAAEA,IAJuB;AAK7BC,EAAAA,QAAQ,EAAEA;AALmB,CAAD,CAA9B;;AAQA,SAASJ,UAAT,CAAoBK,KAAK,GAAG,EAA5B,EAAgCC,MAAhC,EAAwC;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,gBAAL;AACE,aAAOe,MAAM,CAACN,UAAd;;AACF;AACE,aAAOK,KAAP;AAJJ;AAMD;;AAED,SAASJ,KAAT,CAAeI,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAL;AACE,aAAOc,MAAM,CAACL,KAAd;;AACF;AACE,aAAOI,KAAP;AAJJ;AAMD;;AAED,SAASH,KAAT,CAAeG,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACjC;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,WAAL;AACE,aAAOa,MAAM,CAACJ,KAAd;;AACF,SAAKR,QAAL;AACE,aAAO,CAAC,GAAGW,KAAJ,EAAWC,MAAM,CAACE,IAAlB,CAAP;;AACF,SAAKX,WAAL;AACE,aAAO,CAAC,GAAGQ,KAAK,CAACI,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYJ,MAAM,CAACI,EAAxC,CAAJ,CAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD;;AAED,SAASF,IAAT,CAAcE,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACK,IAAd;;AACF,SAAK,aAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAON,KAAP;AANJ;AAQD,C,CAED;;;AAEA,SAASD,QAAT,CAAkBC,KAAK,GAAG,EAA1B,EAA8BC,MAA9B,EAAsC;AACpC;AACA;AACA;AAEA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,CAACD,MAAM,CAACF,QAAR,EAAkBE,MAAM,CAACM,MAAzB,CAAP;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOP,KAAP;AAhBJ;AAkBD;;AAED,SAASQ,SAAT,CAAmBR,KAAK,GAAG,EAA3B,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAOD,MAAM,CAACO,SAAd;;AACF;AACE,aAAOR,KAAP;AAJJ;AAMD","sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  FETCH_CATEGORIES,\n  FETCH_LEADS,\n  FETCH_LISTS,\n  ADD_LIST,\n  LOGIN_USER,\n  LOGOUT_USER,\n  DELETE_LIST,\n  DELETE_LISTLEAD,\n  FETCH_LEADNOTES\n} from \"../actions\";\n\nexport default combineReducers({\n  categories: categories,\n  leads: leads,\n  lists: lists,\n  auth: auth,\n  listlead: listlead\n});\n\nfunction categories(state = [], action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return action.categories;\n    default:\n      return state;\n  }\n}\n\nfunction leads(state = [], action) {\n  switch (action.type) {\n    case FETCH_LEADS:\n      return action.leads;\n    default:\n      return state;\n  }\n}\n\nfunction lists(state = [], action) {\n  // let newState = []\n  switch (action.type) {\n    case FETCH_LISTS:\n      return action.lists;\n    case ADD_LIST:\n      return [...state, action.list];\n    case DELETE_LIST:\n      return [...state.filter(list => list.id !== action.id)];\n    default:\n      return state;\n  }\n}\n\nfunction auth(state = {}, action) {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return action.user;\n    case \"LOGOUT_USER\":\n      return {};\n    default:\n      return state;\n  }\n}\n\n// ! NEED TO FINISH OFF THE DELETE LIST LEAD ACTION\n\nfunction listlead(state = [], action) {\n  // let findLead = state.find(lead => lead.id === action.id);\n  // let leadId = findLead.id\n  // let leadlist = state.find(leadlist => )\n\n  switch (action.type) {\n    case \"FETCH_LIST_BY_ID\":\n      return [action.listlead, action.listid];\n    // case \"DELETE_LISTLEAD\":\n    //   let listlead_state = state;\n    //   let newListState = [\n    //     ...state[0].filter(listlead => listlead.id !== action.id)\n    //   ];\n    //   let newListLeadState = [\n    //     {\n    //       leads: newListState,\n    //       id: state[1].id\n    //     }\n    //   ];\n    //   return newListLeadState;\n    default:\n      return state;\n  }\n}\n\nfunction leadnotes(state = [], action) {\n  switch (action.type) {\n    case \"FETCH_LEADNOTES\":\n      return action.leadnotes;\n    default:\n      return state;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}