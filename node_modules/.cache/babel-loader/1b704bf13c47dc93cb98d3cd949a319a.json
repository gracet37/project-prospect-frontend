{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { connect } from 'react-redux';\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nclass DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: [],\n      rows: [],\n      isLoading: true\n    };\n\n    this.createData = (first_name, last_name, email, position, company, confidence) => {\n      return {\n        first_name,\n        last_name,\n        email,\n        position,\n        company,\n        confidence\n      };\n    };\n\n    this.createRowData = () => {\n      let array = [];\n      this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence);\n        array.push(newRow);\n      });\n      this.setState({\n        rows: array\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadsArray = _this$state.leadsArray,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.auth.user.id;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId);\n    };\n\n    this.handleLeadClick = (lead, checked) => {\n      console.log(lead);\n      console.log(checked);\n\n      if (checked) {\n        this.props.listWithLeadNotes.forEach(l => {\n          console.log(\"what is l\", l);\n\n          if (l.lead.email !== lead.value) {\n            this.setState({\n              leadsArray: [...this.state.leadsArray, lead]\n            });\n          } else {\n            return null;\n          }\n        });\n      } else {\n        const newArray = this.state.leadsArray.filter(l => l.value !== lead.value);\n        this.setState({\n          leadsArray: newArray\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData();\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(EnhancedTable, {\n      rows: this.state.rows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(addLead(leadsArray, company, website, listId, newListName, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTest.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","connect","addList","addLead","Navbar","DataTable","Component","state","listId","leadSelection","company","website","newListName","leadsArray","rows","isLoading","createData","first_name","last_name","email","position","confidence","createRowData","array","props","leads","emails","forEach","lead","newRow","value","organization","push","setState","handleDropdown","e","data","targetValue","handleChange","target","targetName","name","handleSubmit","console","log","userId","auth","user","id","handleLeadClick","checked","listWithLeadNotes","l","newArray","filter","componentDidMount","domain","render","mapStateToProps","lists","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {connect} from 'react-redux';\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\n\nclass DataTable extends React.Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [],\n    rows: [],\n    isLoading: true\n  }  \n  \n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData()\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  createData = (first_name, last_name, email, position, company, confidence) => {\n    return { first_name, last_name, email, position, company, confidence};\n  }\n\n  createRowData = () => {\n    let array = []\n    this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence)\n        array.push(newRow)\n    })\n    this.setState({rows: array})\n    this.setState({isLoading: false})\n  }\n  \n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n  };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.props.listWithLeadNotes.forEach(l => {\n        console.log(\"what is l\", l)\n        if (l.lead.email !== lead.value) {\n          this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n        } else {\n          return (\n            null\n          )\n        }\n      })\n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n  render() {\n    console.log(this.state)\n    if (isLoading) {\n      return <div>Loading</div>\n    }\n    return (\n      <div>\n        <EnhancedTable rows={this.state.rows}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(\n        addLead(leadsArray, company, website, listId, newListName, userId)\n      );\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable)\n"]},"metadata":{},"sourceType":"module"}