{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Confirm, Button, Modal, Form, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById, addList } from \"../actions\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleMetrics = {\n  borderWidth: \"5px\",\n  borderRadius: \"10px\",\n  borderColor: \"#808495\",\n  borderStyle: \"solid\",\n  margin: \"40px\",\n  width: \"60px\",\n  height: \"200px\",\n  padding: \"20px\"\n};\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      deleteConfirmation: false,\n      totalLeadCount: 0,\n      totalMeetingsBooked: 0,\n      totalNotContacted: 0,\n      newListName: \"\"\n    };\n\n    this.show = dimmer => this.setState({\n      dimmer,\n      deleteConfirmation: true\n    });\n\n    this.handleConfirm = () => this.setState({\n      deleteConfirmation: false\n    });\n\n    this.handleCancel = () => {\n      this.setState({\n        deleteConfirmation: false\n      }); // let newArray = this.state.data.filter(data => data.id !== id);\n      // this.setState({ data: newArray });\n      // this.props.deleteList(id);\n    };\n\n    this.formattedListArray = () => {\n      // if (this.props.lists.length) {\n      let array = [];\n      this.props.lists.forEach(list => {\n        let date = new Date(list.created_at);\n        let dateString = date.toDateString();\n        array.push({\n          id: list.id,\n          name: list.name,\n          date: dateString,\n          leadCount: list.leads.length\n        });\n      });\n      this.setState({\n        data: array\n      }); // return array\n    };\n\n    this.countMeetingsBooked = () => {\n      let meetingsBookedCount = 0;\n\n      if (this.props.listWithLeadNotes) {\n        this.props.listWithLeadNotes.forEach(lead => {\n          lead.leadnotes.forEach(leadnote => {\n            if (leadnote.status === \"Meeting booked\") {\n              meetingsBookedCount += 1;\n            }\n          });\n        });\n        this.setState({\n          totalMeetingsBooked: meetingsBookedCount\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.countNotContacted = () => {\n      let notContacted = 0; // let testArray = []\n\n      if (this.props.listWithLeadNotes) {\n        this.props.listWithLeadNotes.forEach(lead => {\n          if (lead.leadnotes.length < 1) {\n            notContacted += 1;\n          }\n        });\n        this.setState({\n          totalNotContacted: notContacted\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.handleConfirm = (event, id) => {\n      event.preventDefault();\n      let newArray = this.state.data.filter(data => data.id !== id);\n      this.setState({\n        data: newArray,\n        deleteConfirmation: false\n      }); // !this.countTotalLeads();\n\n      this.countMeetingsBooked();\n      this.countNotContacted();\n      this.props.deleteList(id);\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n      this.props.thunkFetchListById(id, this.props.history);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const newListName = this.state.newListName;\n      const userId = this.props.auth.user.id;\n      this.props.addList(newListName, userId);\n      this.formattedListArray();\n    };\n  }\n\n  componentDidMount() {\n    this.formattedListArray(); //  ! this.countTotalLeads()\n\n    this.countMeetingsBooked();\n    this.countNotContacted();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction,\n          totalLeadCount = _this$state2.totalLeadCount,\n          totalMeetingsBooked = _this$state2.totalMeetingsBooked,\n          totalNotContacted = _this$state2.totalNotContacted; // console.log(this.props.lists)\n\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: \"equal\",\n      style: {\n        margin: \"70px\",\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, totalLeadCount), React.createElement(Image, {\n      size: \"small\",\n      centered: true,\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Meetings Booked\"), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, totalMeetingsBooked), React.createElement(Image, {\n      size: \"small\",\n      centered: true,\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Not Yet Contacted\"), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, totalNotContacted), React.createElement(Image, {\n      size: \"medium\",\n      centered: true,\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      style: {\n        top: \"100px\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      centered: true,\n      trigger: React.createElement(Button, {\n        style: {\n          borderRadius: \"30px\",\n          color: \"white\",\n          backgroundColor: \"#6200EE\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), \" Add Lead to List\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Create a New List:\"), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"30px\",\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"violet\",\n      inverted: true,\n      style: {\n        margin: \"20px\",\n        borderRadius: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), \" Add Lead to List\")))))), React.createElement(Grid.Row, {\n      style: {\n        top: \"35px\",\n        margin: \"60px\",\n        marginLeft: \"150px\",\n        marginRight: \"150px\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"name\" ? direction : null,\n      onClick: this.handleSort(\"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"List Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"name\" ? direction : null,\n      onClick: this.handleSort(\"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"No. of Leads\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"date\" ? direction : null,\n      onClick: this.handleSort(\"date\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Delete List\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, _.map(data, ({\n      id,\n      name,\n      date,\n      leadCount\n    }) => React.createElement(Table.Row, {\n      textAlign: \"center\",\n      key: uuidv1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, name), React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, leadCount), React.createElement(Table.Cell, {\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, date), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"trash alternate outline\",\n      onClick: () => this.show(\"inverted\"),\n      name: \"trash alternate outline\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(Confirm, {\n      open: this.state.deleteConfirmation,\n      cancelButton: \"Cancel\",\n      confirmButton: \"Confirm\",\n      onCancel: this.handleCancel,\n      onConfirm: event => this.handleConfirm(event, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     thunkFetchListById: (id, history) => {\n//       dispatch(thunkFetchListById(id, history));\n//     }\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  thunkFetchListById,\n  addList\n})(withRouter(Dashboard));","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Confirm","Button","Modal","Form","Header","connect","withRouter","_","Navbar","deleteList","thunkFetchListById","addList","uuidv1","require","styleMetrics","borderWidth","borderRadius","borderColor","borderStyle","margin","width","height","padding","Dashboard","state","column","data","direction","deleteConfirmation","totalLeadCount","totalMeetingsBooked","totalNotContacted","newListName","show","dimmer","setState","handleConfirm","handleCancel","formattedListArray","array","props","lists","forEach","list","date","Date","created_at","dateString","toDateString","push","id","name","leadCount","leads","length","countMeetingsBooked","meetingsBookedCount","listWithLeadNotes","lead","leadnotes","leadnote","status","countNotContacted","notContacted","event","preventDefault","newArray","filter","handleRowClick","console","log","history","handleSort","clickedColumn","sortBy","reverse","handleChange","e","targetValue","target","value","targetName","handleSubmit","userId","auth","user","componentDidMount","render","position","top","color","backgroundColor","verticalAlign","textAlign","marginLeft","marginRight","map","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Card,\n  Table,\n  Icon,\n  Confirm,\n  Button,\n  Modal,\n  Form,\n  Header\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById, addList } from \"../actions\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleMetrics = {\n  borderWidth: \"5px\",\n  borderRadius: \"10px\",\n  borderColor: \"#808495\",\n  borderStyle: \"solid\",\n  margin: \"40px\", \n  width: \"60px\",\n  height: \"200px\",\n  padding: \"20px\"\n}\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    deleteConfirmation: false,\n    totalLeadCount: 0,\n    totalMeetingsBooked: 0,\n    totalNotContacted: 0,\n    newListName: \"\"\n  };\n\n  componentDidMount() {\n    this.formattedListArray();\n    //  ! this.countTotalLeads()\n    this.countMeetingsBooked();\n    this.countNotContacted();\n  }\n\n  show = dimmer => this.setState({ dimmer, deleteConfirmation: true });\n  handleConfirm = () => this.setState({ deleteConfirmation: false });\n  handleCancel = () => {\n    this.setState({ deleteConfirmation: false });\n    // let newArray = this.state.data.filter(data => data.id !== id);\n    // this.setState({ data: newArray });\n    // this.props.deleteList(id);\n  };\n\n  formattedListArray = () => {\n    // if (this.props.lists.length) {\n    let array = [];\n    this.props.lists.forEach(list => {\n      let date = new Date(list.created_at);\n      let dateString = date.toDateString();\n      array.push({\n        id: list.id,\n        name: list.name,\n        date: dateString,\n        leadCount: list.leads.length\n      });\n    });\n    this.setState({ data: array });\n    // return array\n  };\n\n  // ! countTotalLeads = () => {\n  //   if (this.props.lists) {\n  //   let leadCountArray = []\n  //   let totalLeads\n  //   console.log(this.props.lists)\n  //   this.props.lists.forEach(list => {\n  //     let count = list.leads.length\n  //     leadCountArray.push(count)\n  //   })\n  //   totalLeads = leadCountArray.reduce((total, count) => total + count)\n  //   this.setState({totalLeadCount: totalLeads})\n  //   } else {\n  //     return null\n  //   }\n  // }\n\n  countMeetingsBooked = () => {\n    let meetingsBookedCount = 0;\n    if (this.props.listWithLeadNotes) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      this.setState({ totalMeetingsBooked: meetingsBookedCount });\n    } else {\n      return null;\n    }\n  };\n\n  countNotContacted = () => {\n    let notContacted = 0;\n    // let testArray = []\n    if (this.props.listWithLeadNotes) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      this.setState({ totalNotContacted: notContacted });\n    } else {\n      return null;\n    }\n  };\n\n  handleConfirm = (event, id) => {\n    event.preventDefault();\n    let newArray = this.state.data.filter(data => data.id !== id);\n    this.setState({ data: newArray, deleteConfirmation: false });\n    // !this.countTotalLeads();\n    this.countMeetingsBooked();\n    this.countNotContacted();\n    this.props.deleteList(id);\n  };\n\n  handleRowClick = id => {\n    console.log(\"row clicked\", id);\n    this.props.thunkFetchListById(id, this.props.history);\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { newListName } = this.state;\n    const userId = this.props.auth.user.id;\n    this.props.addList(newListName, userId);\n    this.formattedListArray();\n  };\n\n  render() {\n    const {\n      column,\n      data,\n      direction,\n      totalLeadCount,\n      totalMeetingsBooked,\n      totalNotContacted\n    } = this.state;\n    // console.log(this.props.lists)\n    console.log(this.state);\n    return (\n      <div>\n        {/* METRIC CARDS */}\n        <Grid>\n          <Grid.Row\n            columns=\"equal\"\n            style={{ margin: \"70px\", position:'relative'}}\n          >\n            <Grid.Column\n              style={styleMetrics}\n            >\n              <Header as=\"h1\">Total Leads</Header>\n              <Header>{totalLeadCount}</Header>\n              <Image size='small' centered src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\" />\n            </Grid.Column>\n            <Grid.Column\n              style={styleMetrics}\n            >\n              <Header>Meetings Booked</Header>\n              <Header>{totalMeetingsBooked}</Header>\n              <Image size='small' centered src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\" />\n            </Grid.Column>\n            <Grid.Column\n              style={styleMetrics}\n            >\n              <Header>Not Yet Contacted</Header>\n              <Header>{totalNotContacted}</Header>\n              <Image size='medium' centered src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\" />\n            </Grid.Column>\n          </Grid.Row>\n\n          {/* STYLING FOR THE BUTTON */}\n          <Grid.Row style={{ top: \"100px\" }} columns={1}>\n            <Grid.Column>\n              <Modal\n                centered\n                trigger={\n                  <Button\n                    style={{\n                      borderRadius: \"30px\",\n                      color: \"white\",\n                      backgroundColor: \"#6200EE\"\n                    }}\n                  >\n                    <Icon name=\"add\" /> Add Lead to List\n                  </Button>\n                }\n                basic\n                size=\"small\"\n              >\n                <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n                  <Modal.Header as=\"h2\">Create a New List:</Modal.Header>\n                  <Form.Group>\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    >\n                      <input\n                        style={{ borderRadius: \"30px\", width: \"200px\" }}\n                      ></input>\n                    </Form.Input>\n                    <Form.Button\n                      onClick={this.handleSubmit}\n                      basic\n                      color=\"violet\"\n                      inverted\n                      style={{ margin: \"20px\", borderRadius: \"30px\" }}\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Form.Button>\n                  </Form.Group>\n                </div>\n              </Modal>\n            </Grid.Column>\n          </Grid.Row>\n          {/* TABLE OF CONTENTS */}\n          <Grid.Row\n            style={{\n              top: \"35px\",\n              margin: \"60px\",\n              marginLeft: \"150px\",\n              marginRight: \"150px\"\n            }}\n            columns={1}\n          >\n            <Grid.Column>\n              <Table sortable selectable celled>\n                <Table.Header>\n                  <Table.Row textAlign=\"center\">\n                    <Table.HeaderCell\n                      sorted={column === \"name\" ? direction : null}\n                      onClick={this.handleSort(\"name\")}\n                    >\n                      List Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"name\" ? direction : null}\n                      onClick={this.handleSort(\"name\")}\n                    >\n                      No. of Leads\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"date\" ? direction : null}\n                      onClick={this.handleSort(\"date\")}\n                    >\n                      Date Created\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>Delete List</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {_.map(data, ({ id, name, date, leadCount }) => (\n                    <Table.Row textAlign=\"center\" key={uuidv1()}>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>\n                        {name}\n                      </Table.Cell>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>\n                        {leadCount}\n                      </Table.Cell>\n                      <Table.Cell onClick={() => this.handleRowClick(id)}>\n                        {date}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <Icon\n                          name={\"trash alternate outline\"}\n                          onClick={() => this.show(\"inverted\")}\n                          name=\"trash alternate outline\"\n                          size=\"large\"\n                        />\n                        <Confirm\n                          open={this.state.deleteConfirmation}\n                          cancelButton=\"Cancel\"\n                          confirmButton=\"Confirm\"\n                          onCancel={this.handleCancel}\n                          onConfirm={event => this.handleConfirm(event, id)}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     thunkFetchListById: (id, history) => {\n//       dispatch(thunkFetchListById(id, history));\n//     }\n//   };\n// };\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, thunkFetchListById, addList }\n)(withRouter(Dashboard));\n"]},"metadata":{},"sourceType":"module"}