{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Button, Pagination, Header, Modal, Dropdown, Form } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, deleteListLead } from \"../actions\";\nconst statusArray = [{\n  key: \"10\",\n  text: \"Meeting booked\",\n  value: \"10\"\n}, {\n  key: \"25\",\n  text: \"Met with decision maker\",\n  value: \"25\"\n}, {\n  key: \"50\",\n  text: \"Proposal sent\",\n  value: \"50\"\n}, {\n  key: \"90\",\n  text: \"Verbal confirmation\",\n  value: \"90\"\n}, {\n  key: \"100\",\n  text: \"Sale closed\",\n  value: \"100\"\n}, {\n  key: \"notfit\",\n  text: \"Not fit for business\",\n  value: \"notfit\"\n}, {\n  key: \"incorrect\",\n  text: \"Incorrect contact\",\n  value: \"incorrect\"\n}, {\n  key: \"contact\",\n  text: \"Contact at later date\",\n  value: \"contact\"\n}];\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: null,\n      direction: null,\n      activePage: 1\n    };\n\n    this.formattedListArray = () => {\n      let listArray = this.props.listlead[0];\n\n      if (listArray) {\n        // console.log(\"LISTARRAY??\", listArray)\n        let array = listArray.map(lead => {\n          return {\n            id: lead.id,\n            first_name: lead.first_name,\n            last_name: lead.last_name,\n            position: lead.position,\n            company: lead.company,\n            status: null,\n            next_steps: null,\n            last_date_contacted: lead.contacted_date,\n            email: lead.email,\n            phone_number: lead.phone_number\n          };\n        });\n        this.setState({\n          data: array\n        });\n      }\n    };\n\n    this.handleDeleteClick = (event, lead_id) => {\n      event.preventDefault();\n      this.props.deleteListLead(this.props.listlead[1], lead_id);\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.formattedListArray();\n  }\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction,\n          activePage = _this$state2.activePage;\n    let dataSlice;\n\n    if (data) {\n      if (activePage === 1) {\n        dataSlice = data.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = data.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = data.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = data.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = data.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = data.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = data.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = data.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = data.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = data.slice(90, 99);\n      } else {\n        dataSlice = [];\n      } // return dataSlice\n\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"XXXXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Open Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Another METRIC\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))))), this.props.listlead[0].length > 0 ? React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"first_name\" ? direction : null,\n      onClick: this.handleSort(\"first_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_name\" ? direction : null,\n      onClick: this.handleSort(\"last_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"position\" ? direction : null,\n      onClick: this.handleSort(\"position\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"company\" ? direction : null,\n      onClick: this.handleSort(\"company\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"status\" ? direction : null,\n      onClick: this.handleSort(\"status\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"next_steps\" ? direction : null,\n      onClick: this.handleSort(\"next_steps\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_date_contacted\" ? direction : null,\n      onClick: this.handleSort(\"last_date_contacted\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Last Date Contacted\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Edit Lead\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Delete Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, _.map(dataSlice, ({\n      id,\n      first_name,\n      last_name,\n      position,\n      company,\n      status,\n      next_steps,\n      last_date_contacted,\n      phone_number,\n      email\n    }) => React.createElement(Table.Row, {\n      key: id,\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, first_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, last_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, position), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, company), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, status), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, next_steps), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, last_date_contacted), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \" \", React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        name: \"edit outline\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, first_name, \" \", last_name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), \" \", position ? position + \",\" : null, \" \", company), React.createElement(Modal.Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Phone: \", phone_number), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      // fluid\n      label: \"Status\",\n      options: statusArray,\n      placeholder: \"Select status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Next Steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(Form.Input, {\n      control: \"textarea\",\n      rows: \"3\",\n      label: \"Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Save\"))))), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"trash alternate outline\",\n      onClick: event => this.handleDeleteClick(event, id),\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }))))), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      boundaryRange: 0,\n      defaultActivePage: 1,\n      ellipsisItem: \"...\",\n      firstItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      lastItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      prevItem: {\n        content: React.createElement(Icon, {\n          name: \"angle left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      nextItem: {\n        content: React.createElement(Icon, {\n          name: \"angle right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      siblingRange: 1,\n      totalPages: 10,\n      onPageChange: (event, {\n        activePage\n      }) => this.handlePageChange(activePage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }))))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"You do not have any leads saved under this list.\"), React.createElement(Button, {\n      as: Link,\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Go to Search\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listlead: state.listlead,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: id => {\n      dispatch(deleteList(id));\n    },\n    deleteListLead: (list_id, lead_id) => {\n      dispatch(deleteListLead(list_id, lead_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Button","Pagination","Header","Modal","Dropdown","Form","Link","connect","_","Navbar","deleteList","deleteListLead","statusArray","key","text","value","Dashboard","state","column","data","direction","activePage","formattedListArray","listArray","props","listlead","array","map","lead","id","first_name","last_name","position","company","status","next_steps","last_date_contacted","contacted_date","email","phone_number","setState","handleDeleteClick","event","lead_id","preventDefault","handleRowClick","console","log","handleSort","clickedColumn","sortBy","reverse","handlePageChange","componentDidMount","render","dataSlice","slice","height","length","content","icon","mapStateToProps","lists","auth","mapDispatchToProps","dispatch","list_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Card,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  Header,\n  Modal,\n  Dropdown,\n  Form\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, deleteListLead } from \"../actions\";\n\nconst statusArray = [\n  {key: \"10\", text: \"Meeting booked\", value: \"10\"},\n  {key: \"25\", text: \"Met with decision maker\", value: \"25\"},\n  {key: \"50\", text: \"Proposal sent\", value: \"50\"},\n  {key: \"90\", text: \"Verbal confirmation\", value: \"90\"},\n  {key: \"100\", text: \"Sale closed\", value: \"100\"},\n  {key: \"notfit\", text: \"Not fit for business\", value: \"notfit\"},\n  {key: \"incorrect\", text: \"Incorrect contact\", value: \"incorrect\"},\n  {key: \"contact\", text: \"Contact at later date\", value: \"contact\"}\n  ]\n  \n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: null,\n    direction: null,\n    activePage: 1\n  };\n\n  componentDidMount() {\n    this.formattedListArray();\n  }\n\n  formattedListArray = () => {\n    let listArray = this.props.listlead[0];\n    if (listArray) {\n      // console.log(\"LISTARRAY??\", listArray)\n      let array = listArray.map(lead => {\n        return {\n          id: lead.id,\n          first_name: lead.first_name,\n          last_name: lead.last_name,\n          position: lead.position,\n          company: lead.company,\n          status: null,\n          next_steps: null,\n          last_date_contacted: lead.contacted_date,\n          email: lead.email,\n          phone_number: lead.phone_number\n        };\n      });\n      this.setState({ data: array });\n    }\n  };\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault();\n    this.props.deleteListLead(this.props.listlead[1], lead_id);\n  };\n\n  handleRowClick = id => {\n    console.log(\"row clicked\", id);\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const { column, data, direction, activePage } = this.state;\n\n    let dataSlice;\n    if (data) {\n      if (activePage === 1) {\n        dataSlice = data.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = data.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = data.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = data.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = data.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = data.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = data.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = data.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = data.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = data.slice(90, 99);\n      } else {\n        dataSlice = [];\n      }\n      // return dataSlice\n    }\n\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Navbar />\n        <Grid divided=\"vertically\">\n          <Grid.Row columns={3}>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>XXXXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Open Leads</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Another METRIC</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n          {this.props.listlead[0].length > 0 ? (\n            <Grid.Row columns={1}>\n              <Grid.Column>\n                <Table sortable selectable celled fixed>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell\n                        sorted={column === \"first_name\" ? direction : null}\n                        onClick={this.handleSort(\"first_name\")}\n                      >\n                        First Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"last_name\" ? direction : null}\n                        onClick={this.handleSort(\"last_name\")}\n                      >\n                        Last Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"position\" ? direction : null}\n                        onClick={this.handleSort(\"position\")}\n                      >\n                        Position\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"company\" ? direction : null}\n                        onClick={this.handleSort(\"company\")}\n                      >\n                        Company\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"next_steps\" ? direction : null}\n                        onClick={this.handleSort(\"next_steps\")}\n                      >\n                        Next Steps\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={\n                          column === \"last_date_contacted\" ? direction : null\n                        }\n                        onClick={this.handleSort(\"last_date_contacted\")}\n                      >\n                        Last Date Contacted\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Edit Lead</Table.HeaderCell>\n                      <Table.HeaderCell>Delete Lead</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {_.map(\n                      dataSlice,\n                      ({\n                        id,\n                        first_name,\n                        last_name,\n                        position,\n                        company,\n                        status,\n                        next_steps,\n                        last_date_contacted,\n                        phone_number,\n                        email\n                      }) => (\n                        <Table.Row\n                          key={id}\n                          onClick={() => this.handleRowClick(id)}\n                        >\n                          <Table.Cell>{first_name}</Table.Cell>\n                          <Table.Cell>{last_name}</Table.Cell>\n                          <Table.Cell>{position}</Table.Cell>\n                          <Table.Cell>{company}</Table.Cell>\n                          <Table.Cell>{status}</Table.Cell>\n                          <Table.Cell>{next_steps}</Table.Cell>\n                          <Table.Cell>{last_date_contacted}</Table.Cell>\n                          <Table.Cell>\n                            {\" \"}\n                            <Modal\n                              trigger={\n                                <Icon name={\"edit outline\"} size=\"large\" />\n                              }\n                            >\n                              <Modal.Header as=\"h2\">\n                                {first_name} {last_name} <br />{\" \"}\n                                {position ? position + \",\" : null} {company}\n                              </Modal.Header>\n                              <Modal.Header as=\"h3\">\n                                Phone: {phone_number}\n                              </Modal.Header>\n                              {/* <Modal.Header as='h3'>{position}, {company}</Modal.Header> */}\n                \n                                <Modal.Content>\n                                  <Form>\n                                    <Form.Group>\n                                      <Form.Select\n                                        // fluid\n                                        label=\"Status\"\n                                        options={statusArray}\n                                        placeholder=\"Select status\"\n                                      />\n                                      {/* <Form.Header>Next Steps</Form.Header> */}\n                                      <Form.Input label=\"Next Steps\"></Form.Input>\n                                    </Form.Group>\n                                    <Form.Input control='textarea' rows='3' label=\"Notes\"/>\n                                    <Form.Field control={Button}>Save</Form.Field>\n                                    {/* <Form.Description></Form.Description> */} \n                                  </Form>\n                                </Modal.Content>\n                    \n                              \n                            </Modal>\n                            {/* <Icon\n                              name={\"edit outline\"}\n                              onClick={event =>\n                                this.handleLeadNoteModal(event, id)\n                              }\n                              size=\"large\"\n                            /> */}\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Icon\n                              name={\"trash alternate outline\"}\n                              onClick={event =>\n                                this.handleDeleteClick(event, id)\n                              }\n                              size=\"large\"\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    )}\n                  </Table.Body>\n                  <Table.Footer>\n                    <Table.Row>\n                      <Table.HeaderCell colSpan=\"3\">\n                        <Pagination\n                          boundaryRange={0}\n                          defaultActivePage={1}\n                          ellipsisItem={\"...\"}\n                          firstItem={{\n                            content: <Icon name=\"angle double left\" />,\n                            icon: true\n                          }}\n                          lastItem={{\n                            content: <Icon name=\"angle double right\" />,\n                            icon: true\n                          }}\n                          prevItem={{\n                            content: <Icon name=\"angle left\" />,\n                            icon: true\n                          }}\n                          nextItem={{\n                            content: <Icon name=\"angle right\" />,\n                            icon: true\n                          }}\n                          siblingRange={1}\n                          totalPages={10}\n                          onPageChange={(event, { activePage }) =>\n                            this.handlePageChange(activePage)\n                          }\n                        />\n                        {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Footer>\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          ) : (\n            <div>\n              <Header>You do not have any leads saved under this list.</Header>\n              <Button as={Link} to=\"/search\">\n                Go to Search\n              </Button>\n            </div>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listlead: state.listlead,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: id => {\n      dispatch(deleteList(id));\n    },\n    deleteListLead: (list_id, lead_id) => {\n      dispatch(deleteListLead(list_id, lead_id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}