{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchBar.js\";\nimport React, { Component } from \"react\";\nimport { Form, Loader, Button } from \"semantic-ui-react\";\nimport { thunkFetchLeads, fetchError } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport \"../App.css\"; /////////////////////// STYLING /////////////////////////\n\nconst searchOptions = [{\n  key: \"industry\",\n  text: \"Industry\",\n  value: \"industry\"\n}, {\n  key: \"domain\",\n  text: \"Company Domain\",\n  value: \"domain\"\n}];\nconst styleSearchBar = {\n  marginLeft: '30px',\n  marginTop: '10px',\n  width: \"500px\",\n  borderRadius: \"50px\",\n  borderColor: \"#6200EE\",\n  borderWidth: \"3px\",\n  height: \"60px\",\n  fontSize: \"large\"\n}; /////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectionParam: \"\",\n      searchParam: \"\",\n      leadsResults: [],\n      searchClicked: false\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      const targetName = data.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.props.auth.user) {\n        this.setState({\n          searchClicked: true\n        });\n        this.props.thunkFetchLeads(this.state.searchParam, this.props.history);\n      } else {\n        this.props.fetchError(\"Oops! You need to be logged in to do that.\");\n        this.props.history.push('/login');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        verticalAlign: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"searchParam\",\n      placeholder: \"Enter domain name...\" // loading={this.state.searchClicked ? true : false}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: styleSearchBar,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      loading: this.state.searchClicked ? true : false,\n      onClick: this.handleSubmit,\n      style: {\n        borderRadius: \"50px\",\n        marginLeft: '10px',\n        backgroundColor: '#6200EE',\n        color: 'white',\n        marginTop: '10px',\n        width: '130px',\n        height: '60px',\n        fontSize: 'large',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Search\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchLeads: (domainName, history) => {\n      dispatch(thunkFetchLeads(domainName, history));\n    },\n    fetchError: error => {\n      dispatch(fetchError(error));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchBar.js"],"names":["React","Component","Form","Loader","Button","thunkFetchLeads","fetchError","connect","Link","withRouter","Loading","searchOptions","key","text","value","styleSearchBar","marginLeft","marginTop","width","borderRadius","borderColor","borderWidth","height","fontSize","SearchBar","state","selectionParam","searchParam","leadsResults","searchClicked","handleDropdown","e","data","targetValue","targetName","name","setState","handleChange","target","handleSubmit","props","auth","user","history","push","render","verticalAlign","textAlign","backgroundColor","color","mapDispatchToProps","dispatch","domainName","error","mapStateToProps","categories","leads"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Loader, Button } from \"semantic-ui-react\";\nimport { thunkFetchLeads, fetchError } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport \"../App.css\";\n/////////////////////// STYLING /////////////////////////\nconst searchOptions = [\n  { key: \"industry\", text: \"Industry\", value: \"industry\" },\n  { key: \"domain\", text: \"Company Domain\", value: \"domain\" }\n];\n\nconst styleSearchBar = {\n  marginLeft: '30px',\n  marginTop: '10px',\n  width: \"500px\",\n  borderRadius: \"50px\",\n  borderColor: \"#6200EE\",\n  borderWidth: \"3px\",\n  height: \"60px\",\n  fontSize: \"large\"\n};\n\n/////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  state = {\n    selectionParam: \"\",\n    searchParam: \"\",\n    leadsResults: [],\n    searchClicked: false\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    const targetName = data.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    if (this.props.auth.user) {\n    this.setState({ searchClicked: true });\n    this.props.thunkFetchLeads(this.state.searchParam, this.props.history)\n    } else {\n      this.props.fetchError(\"Oops! You need to be logged in to do that.\")\n      this.props.history.push('/login')\n    }\n  };\n\n  render() {\n    return (\n      <div style={{verticalAlign:'center', textAlign:'center'}}>\n        {/* {this.state.searchClicked ? <Loading /> : null} */}\n        {/* <Form>  */}\n        <Form>\n          <Form.Group>\n            <Form.Input\n              onChange={this.handleChange}\n              name=\"searchParam\"\n              placeholder=\"Enter domain name...\"\n              // loading={this.state.searchClicked ? true : false}\n            >\n              <input style={styleSearchBar} required/>\n            </Form.Input>\n            <Button\n              type=\"submit\"\n              loading={this.state.searchClicked ? true : false}\n              onClick={this.handleSubmit}\n              style={{borderRadius: \"50px\", marginLeft: '10px', backgroundColor: '#6200EE', color: 'white', marginTop: '10px', width: '130px',height: '60px', fontSize: 'large', textAlign: 'center' }}\n            >\n              Search\n            </Button>\n          </Form.Group>\n        </Form>\n        {/* </Form> */}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchLeads: (domainName, history) => {\n      dispatch(thunkFetchLeads(domainName, history));\n    },\n    fetchError: (error) => {\n      dispatch(fetchError(error))\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth, \n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(SearchBar));\n"]},"metadata":{},"sourceType":"module"}