{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTable.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addLead, clearMessage } from \"../actions\";\nimport Navbar from \"./Navbar\";\nimport EnhancedTable from \"./EnhancedTable\";\nconst style = {\n  backgroundImage: \"url(\".concat(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\", \")\"),\n  backgroundSize: \"cover\",\n  width: \"100%\",\n  height: \"100%\",\n  minHeight: 1000,\n  padding: \"1em 0em\"\n};\n\nclass DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: [],\n      rows: [],\n      isLoading: true\n    };\n\n    this.createData = (name, last_name, email, position, company, confidence) => {\n      return {\n        name,\n        last_name,\n        email,\n        position,\n        company,\n        confidence\n      };\n    };\n\n    this.createRowData = () => {\n      let array = [];\n      this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence);\n        array.push(newRow);\n      });\n      this.setState({\n        rows: array\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadsArray = _this$state.leadsArray,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.auth.user.id;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData();\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  // handleLeadClick = (lead, checked) => {\n  //   console.log(lead);\n  //   console.log(checked);\n  //   if (checked) {\n  //     this.props.listWithLeadNotes.forEach(l => {\n  //       console.log(\"what is l\", l)\n  //       if (l.lead.email !== lead.value) {\n  //         this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n  //       } else {\n  //         return (\n  //           null\n  //         )\n  //       }\n  //     })\n  //   } else {\n  //     const newArray = this.state.leadsArray.filter(\n  //       l => l.value !== lead.value\n  //     );\n  //     this.setState({ leadsArray: newArray });\n  //   }\n  // };\n  render() {\n    let lists = this.props.lists;\n    let listArray = lists.map(list => {\n      return {\n        key: list.id,\n        text: list.name,\n        value: list.id\n      };\n    });\n    console.log(this.state);\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(BUtton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(EnhancedTable, {\n      clearMessage: this.props.clearMessage,\n      message: this.props.message,\n      addLead: this.props.addLead,\n      company: this.state.company,\n      website: this.state.website,\n      rows: this.state.rows,\n      listArray: listArray,\n      userId: this.props.auth.user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    message: state.message,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     // addList: (listName, id) => {\n//     //   dispatch(addList(listName, id));\n//     // },\n//     addLead: (leadsArray, company, website, listId, newListName, userId) => {\n//       dispatch(\n//         addLead(leadsArray, company, website, listId, newListName, userId)\n//       );\n//     }\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  addLead,\n  clearMessage\n})(DataTable);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTable.js"],"names":["React","connect","addLead","clearMessage","Navbar","EnhancedTable","style","backgroundImage","backgroundSize","width","height","minHeight","padding","DataTable","Component","state","listId","leadSelection","company","website","newListName","leadsArray","rows","isLoading","createData","name","last_name","email","position","confidence","createRowData","array","props","leads","emails","forEach","lead","newRow","first_name","value","organization","push","setState","handleSubmit","console","log","userId","auth","user","id","componentDidMount","domain","render","lists","listArray","map","list","key","text","message","mapStateToProps","listWithLeadNotes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { addLead, clearMessage } from \"../actions\";\nimport Navbar from \"./Navbar\";\nimport EnhancedTable from \"./EnhancedTable\";\n\nconst style={\n  backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\"})`,\n  backgroundSize: \"cover\",\n  width: \"100%\",\n  height: \"100%\",\n  minHeight: 1000,\n  padding: \"1em 0em\"\n}\n\nclass DataTable extends React.Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [],\n    rows: [],\n    isLoading: true\n  }  \n  \n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData()\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  createData = (name, last_name, email, position, company, confidence) => {\n    return { name, last_name, email, position, company, confidence};\n  }\n\n  createRowData = () => {\n    let array = []\n    this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence)\n        array.push(newRow)\n    })\n    this.setState({rows: array})\n    this.setState({isLoading: false})\n  }\n  \n  // handleDropdown = (e, data) => {\n  //   const targetValue = data.value;\n  //   this.setState({ listId: targetValue });\n  // };\n\n  // handleChange = e => {\n  //   const targetValue = e.target.value;\n  //   const targetName = e.target.name;\n  //   this.setState({ [targetName]: targetValue });\n  // };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n  };\n\n  // handleLeadClick = (lead, checked) => {\n  //   console.log(lead);\n  //   console.log(checked);\n  //   if (checked) {\n  //     this.props.listWithLeadNotes.forEach(l => {\n  //       console.log(\"what is l\", l)\n  //       if (l.lead.email !== lead.value) {\n  //         this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n  //       } else {\n  //         return (\n  //           null\n  //         )\n  //       }\n  //     })\n  //   } else {\n  //     const newArray = this.state.leadsArray.filter(\n  //       l => l.value !== lead.value\n  //     );\n  //     this.setState({ leadsArray: newArray });\n  //   }\n  // };\n\n  render() {\n    let lists = this.props.lists;\n    let listArray = lists.map(list => {\n      return {\n        key: list.id,\n        text: list.name,\n        value: list.id\n      };\n    });\n\n    console.log(this.state)\n    if (this.state.isLoading) {\n      return <div>Loading</div>\n    }\n    return (\n      <div style={style}>\n        <Navbar />\n        <div><BUtton></BUtton></div>\n        <EnhancedTable clearMessage={this.props.clearMessage} message={this.props.message} addLead={this.props.addLead} company={this.state.company} website={this.state.website} rows={this.state.rows} listArray={listArray} userId={this.props.auth.user.id}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    message: state.message, \n    listWithLeadNotes: state.listWithLeadNotes\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     // addList: (listName, id) => {\n//     //   dispatch(addList(listName, id));\n//     // },\n//     addLead: (leadsArray, company, website, listId, newListName, userId) => {\n//       dispatch(\n//         addLead(leadsArray, company, website, listId, newListName, userId)\n//       );\n//     }\n//   };\n// };\n\nexport default connect(mapStateToProps, {addLead, clearMessage})(DataTable)\n\n"]},"metadata":{},"sourceType":"module"}