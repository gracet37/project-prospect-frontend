{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CheckBox = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _const = require('../const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nvar _bootstrap = require('../contexts/bootstrap');\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/require-default-props: 0 */\n\n\nvar CheckBox = exports.CheckBox = function CheckBox(_ref) {\n  var className = _ref.className,\n      checked = _ref.checked,\n      indeterminate = _ref.indeterminate;\n  return _react2.default.createElement('input', {\n    type: 'checkbox',\n    checked: checked,\n    className: className,\n    ref: function ref(input) {\n      if (input) input.indeterminate = indeterminate; // eslint-disable-line no-param-reassign\n    },\n    onChange: function onChange() {}\n  });\n};\n\nCheckBox.propTypes = {\n  checked: _propTypes2.default.bool.isRequired,\n  indeterminate: _propTypes2.default.bool.isRequired,\n  className: _propTypes2.default.string\n};\n\nvar SelectionHeaderCell = function (_Component) {\n  _inherits(SelectionHeaderCell, _Component);\n\n  function SelectionHeaderCell() {\n    _classCallCheck(this, SelectionHeaderCell);\n\n    var _this = _possibleConstructorReturn(this, (SelectionHeaderCell.__proto__ || Object.getPrototypeOf(SelectionHeaderCell)).call(this));\n\n    _this.handleCheckBoxClick = _this.handleCheckBoxClick.bind(_this);\n    return _this;\n  }\n  /**\n   * avoid updating if button is\n   * 1. radio\n   * 2. status was not changed.\n   */\n\n\n  _createClass(SelectionHeaderCell, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var ROW_SELECT_SINGLE = _const2.default.ROW_SELECT_SINGLE;\n      var _props = this.props,\n          mode = _props.mode,\n          checkedStatus = _props.checkedStatus;\n      if (mode === ROW_SELECT_SINGLE) return false;\n      return nextProps.checkedStatus !== checkedStatus;\n    }\n  }, {\n    key: 'handleCheckBoxClick',\n    value: function handleCheckBoxClick(e) {\n      var _props2 = this.props,\n          onAllRowsSelect = _props2.onAllRowsSelect,\n          checkedStatus = _props2.checkedStatus;\n      var isUnSelect = checkedStatus === _const2.default.CHECKBOX_STATUS_CHECKED || checkedStatus === _const2.default.CHECKBOX_STATUS_INDETERMINATE;\n      onAllRowsSelect(e, isUnSelect);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var CHECKBOX_STATUS_CHECKED = _const2.default.CHECKBOX_STATUS_CHECKED,\n          CHECKBOX_STATUS_INDETERMINATE = _const2.default.CHECKBOX_STATUS_INDETERMINATE,\n          ROW_SELECT_MULTIPLE = _const2.default.ROW_SELECT_MULTIPLE;\n      var _props3 = this.props,\n          mode = _props3.mode,\n          checkedStatus = _props3.checkedStatus,\n          selectionHeaderRenderer = _props3.selectionHeaderRenderer,\n          hideSelectAll = _props3.hideSelectAll,\n          headerColumnStyle = _props3.headerColumnStyle;\n\n      if (hideSelectAll) {\n        return _react2.default.createElement('th', {\n          'data-row-selection': true\n        });\n      }\n\n      var checked = checkedStatus === CHECKBOX_STATUS_CHECKED;\n      var indeterminate = checkedStatus === CHECKBOX_STATUS_INDETERMINATE;\n      var attrs = {};\n      var content = void 0;\n\n      if (selectionHeaderRenderer || mode === ROW_SELECT_MULTIPLE) {\n        attrs.onClick = this.handleCheckBoxClick;\n      }\n\n      attrs.style = _utils2.default.isFunction(headerColumnStyle) ? headerColumnStyle(checkedStatus) : headerColumnStyle;\n      return _react2.default.createElement(_bootstrap.BootstrapContext.Consumer, null, function (_ref2) {\n        var bootstrap4 = _ref2.bootstrap4;\n\n        if (selectionHeaderRenderer) {\n          content = selectionHeaderRenderer({\n            mode: mode,\n            checked: checked,\n            indeterminate: indeterminate\n          });\n        } else if (mode === ROW_SELECT_MULTIPLE) {\n          content = _react2.default.createElement(CheckBox, _extends({}, _this2.props, {\n            checked: checked,\n            className: bootstrap4 ? 'selection-input-4' : '',\n            indeterminate: indeterminate\n          }));\n        }\n\n        return _react2.default.createElement('th', _extends({\n          'data-row-selection': true\n        }, attrs), content);\n      });\n    }\n  }]);\n\n  return SelectionHeaderCell;\n}(_react.Component);\n\nSelectionHeaderCell.propTypes = {\n  mode: _propTypes2.default.string.isRequired,\n  checkedStatus: _propTypes2.default.string,\n  onAllRowsSelect: _propTypes2.default.func,\n  hideSelectAll: _propTypes2.default.bool,\n  selectionHeaderRenderer: _propTypes2.default.func,\n  headerColumnStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func])\n};\nexports.default = SelectionHeaderCell;","map":null,"metadata":{},"sourceType":"script"}