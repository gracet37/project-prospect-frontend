{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchContainer.js\";\nimport React, { Component } from 'react';\nimport { Form, Dropdown } from 'semantic-ui-react';\nconst searchOptions = [{\n  key: \"industry\",\n  text: \"Industry\",\n  value: \"industry\"\n}, {\n  key: \"domain\",\n  text: \"Company Domain\",\n  value: \"domain\"\n}];\nconst styleDropdown = {\n  width: '20%'\n};\n\nclass SearchContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectionParam: \"\",\n      searchParam: \"\"\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      const targetName = data.name;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      namestyle: styleDropdown,\n      placeholder: \"Search by...\",\n      fluid: true,\n      selection: true,\n      options: searchOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Industry or Domain Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SearchContainer;","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchContainer.js"],"names":["React","Component","Form","Dropdown","searchOptions","key","text","value","styleDropdown","width","SearchContainer","state","selectionParam","searchParam","handleDropdown","e","data","targetValue","targetName","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,GAAG,EAAE,UAAN;AAAkBC,EAAAA,IAAI,EAAE,UAAxB;AAAoCC,EAAAA,KAAK,EAAE;AAA3C,CAAD,EAAwD;AAACF,EAAAA,GAAG,EAAE,QAAN;AAAgBC,EAAAA,IAAI,EAAE,gBAAtB;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAAxD,CAAtB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB;;AAIA,MAAMC,eAAN,SAA8BT,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCU,KADsC,GAC9B;AACNC,MAAAA,cAAc,EAAE,EADV;AAENC,MAAAA,WAAW,EAAE;AAFP,KAD8B;;AAAA,SAMtCC,cANsC,GAMrB,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5B,YAAMC,WAAW,GAAGD,IAAI,CAACT,KAAzB;AACA,YAAMW,UAAU,GAAGF,IAAI,CAACG,IAAxB;AACD,KATqC;AAAA;;AAWtCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKN,cAAzB;AAAyC,MAAA,SAAS,EAAEN,aAApD;AAAmE,MAAA,WAAW,EAAC,cAA/E;AAA8F,MAAA,KAAK,MAAnG;AAAoG,MAAA,SAAS,MAA7G;AAA8G,MAAA,OAAO,EAAEJ,aAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,MAAjB;AAAkB,MAAA,WAAW,EAAC,yBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CADF;AAUD;;AAtBqC;;AAyBxC,eAAeM,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Dropdown } from 'semantic-ui-react'\n\nconst searchOptions = [{key: \"industry\", text: \"Industry\", value: \"industry\"},{key: \"domain\", text: \"Company Domain\", value: \"domain\"}]\n\nconst styleDropdown = {\n  width: '20%'\n}\n\nclass SearchContainer extends Component {\n  state = {\n    selectionParam: \"\",\n    searchParam: \"\"\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value \n    const targetName = data.name\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <Form.Group widths='equal'>\n            <Dropdown onChange={this.handleDropdown} namestyle={styleDropdown} placeholder=\"Search by...\" fluid selection options={searchOptions} />\n            <Form.Input fluid placeholder=\"Industry or Domain Name\"/>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SearchContainer;"]},"metadata":{},"sourceType":"module"}