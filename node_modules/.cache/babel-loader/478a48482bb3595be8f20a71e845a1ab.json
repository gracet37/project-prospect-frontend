{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Confirm, Button, Modal, Form, Header, Popup, Search } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById, addList, clearMessage, clearSearch, updateSearch, sortLists } from \"../actions\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleMetrics = {\n  borderWidth: \"1px\",\n  borderRadius: \"10px\",\n  borderColor: \"rgba(98, 0, 238, 0.2)\",\n  borderStyle: \"solid\",\n  margin: \"0 50px 50px 50px\",\n  padding: \"20px\",\n  height: \"100px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.15)\",\n  verticalAlign: 'middle'\n};\nconst styleImage = {\n  position: \"relative\",\n  top: \"-30px\",\n  opacity: 0.8\n};\nconst styleRow = {\n  top: \"70px\",\n  margin: \"20px\",\n  paddingRight: \"120px\",\n  paddingLeft: \"120px\",\n  marginBottom: \"40px\",\n  position: \"relative\",\n  textAlign: \"left\"\n};\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      modalShow: false,\n      totalLeadCount: 0,\n      totalMeetingsBooked: 0,\n      totalNotContacted: 0,\n      newListName: \"\",\n      showModal: false\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleConfirm = (event, id) => {\n      // let newArray = this.props.lists.filter(list => list.id !== id);\n      this.setState({\n        modalShow: false\n      });\n      this.props.deleteList(id);\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n      this.props.thunkFetchListById(id, this.props.history);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      console.log(this.state);\n      console.log(clickedColumn);\n      const _this$state = this.state,\n            column = _this$state.column,\n            direction = _this$state.direction;\n      const dataArray = this.props.lists;\n\n      const dataSorted = _.sortBy(dataArray, [clickedColumn]);\n\n      console.log(dataSorted);\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          direction: \"ascending\"\n        });\n        this.props.sortLists(_.sortBy(dataArray, [clickedColumn]));\n        return;\n      }\n\n      this.setState({\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n      this.props.sortLists(dataArray.reverse());\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const newListName = this.state.newListName;\n      const capitalizedName = newListName.charAt(0).toUpperCase() + newListName.substring(1);\n      const userId = this.props.auth.user.id;\n      this.closeModal();\n      this.props.clearMessage();\n      this.props.addList(capitalizedName, userId);\n    };\n\n    this.handleClearMessage = () => {\n      this.props.clearMessage();\n    };\n\n    this.handleFilterChange = (event, value) => {\n      this.props.updateSearch(value);\n    };\n  }\n\n  componentDidMount() {\n    this.props.clearSearch();\n    this.props.clearMessage();\n  } // show = dimmer => this.setState({ dimmer, modalShow: true });\n  // handleConfirmModal = () => this.setState({ modalShow: false });\n  // handleCancelModal = () => {\n  //   this.setState({ modalShow: false });\n  // };\n\n\n  renderListBody() {\n    let listArr = this.props.lists;\n\n    if (this.props.search === \"\") {\n      listArr = this.props.lists;\n    } else {\n      listArr = this.props.lists.filter(list => {\n        return list.name.toUpperCase().includes(this.props.search.toUpperCase());\n      });\n    }\n\n    return React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, _.map(listArr, ({\n      id,\n      name,\n      created_at,\n      leads\n    }) => {\n      let dateString = new Date(created_at).toDateString();\n      let leadCount = leads.length; // let dateString = date\n\n      return React.createElement(Table.Row, {\n        textAlign: \"center\",\n        key: uuidv1(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        onClick: () => this.handleRowClick(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, name), React.createElement(Table.Cell, {\n        onClick: () => this.handleRowClick(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, leadCount), React.createElement(Table.Cell, {\n        onClick: () => this.handleRowClick(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, dateString), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        closeIcon: true,\n        size: \"mini\",\n        trigger: React.createElement(Icon, {\n          name: \"trash alternate outline\",\n          name: \"trash alternate outline\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Delete List\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Are you sure you want to delete this list?\")), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          borderRadius: \"30px\",\n          color: \"white\",\n          backgroundColor: \"#6200EE\"\n        },\n        onClick: this.handleCancelModal,\n        basic: true,\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        onClick: event => this.handleConfirm(event, id) // icon=\"checkmark\"\n        // labelPosition=\"right\"\n        ,\n        content: \"Yes\",\n        style: {\n          borderRadius: \"30px\",\n          color: \"white\",\n          backgroundColor: \"#03DAC6\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })))));\n    }));\n  }\n\n  renderLeadCount() {\n    if (this.props.lists.length > 0) {\n      let leadCountArray = [];\n      let totalLeads = 0;\n      console.log(this.props.lists);\n      this.props.lists.forEach(list => {\n        let count = list.leads.length;\n        leadCountArray.push(count);\n      });\n      totalLeads = leadCountArray.reduce((total, count) => total + count);\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Total Leads\"), React.createElement(Header, {\n        style: {\n          margin: '0'\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, totalLeads), React.createElement(Image, {\n        style: styleImage,\n        size: \"tiny\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n\n    if (this.props.listWithLeadNotes.length) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Meetings Booked\"), React.createElement(Header, {\n        style: {\n          margin: '0'\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, meetingsBookedCount), React.createElement(Image, {\n        style: styleImage,\n        size: \"tiny\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderNotContacted() {\n    let notContacted = 0;\n\n    if (this.props.listWithLeadNotes.length) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Not Yet Contacted\"), React.createElement(Header, {\n        style: {\n          margin: '0'\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, notContacted), React.createElement(Image, {\n        style: styleImage,\n        size: \"tiny\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          direction = _this$state2.direction;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.renderMetricCards, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: \"equal\",\n      style: styleRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, this.renderLeadCount(), this.renderMeetingsBooked(), this.renderNotContacted()), React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      basic: true,\n      closeIcon: true,\n      onClose: this.closeModal,\n      open: this.state.showModal,\n      style: {\n        width: \"300px\"\n      },\n      trigger: React.createElement(Button, {\n        onClick: () => this.setState({\n          showModal: true\n        }),\n        style: {\n          borderRadius: \"20px\",\n          color: \"white\",\n          backgroundColor: \"#6200EE\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), \" Create New List\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"New List\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"List Name...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"20px\",\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        // margin: \"20px\",\n        borderRadius: \"30px\",\n        margin: '20px',\n        // marginBottom: '10px',\n        color: \"white\",\n        backgroundColor: \"#6200EE\" // position: \"relative\",\n        // float: \"left\"\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Create New List\")))))), React.createElement(Grid.Row, {\n      style: {\n        marginLeft: \"150px\",\n        marginRight: \"150px\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      style: {\n        borderColor: \"rgba(98, 0, 238, 0.2)\",\n        boxShadow: \"0px 1px 36px -16px rgba(0,0,0,0.15)\",\n        borderWidth: '1px',\n        borderRadius: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \" \", React.createElement(Popup, {\n      content: \"Search List Name\",\n      trigger: React.createElement(Search, {\n        style: {\n          margin: \"20px 20px 20px 20px\",\n          borderColor: 'black'\n        } // style={{ margin: \"15px\", position: 'fixed', top: 0 }}\n        ,\n        onSearchChange: _.debounce((event, {\n          value\n        }) => this.handleFilterChange(event, value), 300),\n        noResultsMessage: \"No results found\",\n        showNoResults: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }))), React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"name\" ? direction : null,\n      onClick: this.handleSort(\"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"List Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"leads\" ? direction : null,\n      onClick: this.handleSort(\"leads\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"No. of Leads\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"date\" ? direction : null,\n      onClick: this.handleSort(\"date\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n      style: {\n        width: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Delete List\"))), this.renderListBody())))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes,\n    message: state.message,\n    search: state.search\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     thunkFetchListById: (id, history) => {\n//       dispatch(thunkFetchListById(id, history));\n//     }\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  thunkFetchListById,\n  addList,\n  clearMessage,\n  clearSearch,\n  updateSearch,\n  sortLists\n})(withRouter(Dashboard)); // <Modal\n//   closeOnDimmerClick={this.state.modalShow}\n//   closeIcon\n//   open={this.state.modalShow}\n//   centered\n//   trigger={\n//     <Button\n//       onClick={this.show}\n//       style={{\n//         borderRadius: \"30px\",\n//         color: \"white\",\n//         backgroundColor: \"#6200EE\"\n//       }}\n//     >\n//       <Icon name=\"add\" /> Create New List\n//     </Button>\n//   }\n//   basic\n//   size=\"small\"\n// >\n//   <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n//     <Modal.Header as=\"h2\">Create a New List:</Modal.Header>\n//     <Form.Group>\n//       <Form.Input\n//         placeholder=\"Create new list...\"\n//         onChange={this.handleChange}\n//         name=\"newListName\"\n//       >\n//         <input\n//           style={{ borderRadius: \"30px\", width: \"200px\" }}\n//         ></input>\n//       </Form.Input>\n//       <Button\n//         onClick={this.handleSubmit}\n//         style={{\n//           margin: \"20px\",\n//           borderRadius: \"30px\",\n//           color: \"white\",\n//           backgroundColor: \"#03DAC6\"\n//         }}\n//       >\n//         <Icon name=\"add\" /> Add Lead to List\n//       </Button>\n//     </Form.Group>\n//   </div>\n// </Modal>","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Confirm","Button","Modal","Form","Header","Popup","Search","connect","withRouter","_","Navbar","deleteList","thunkFetchListById","addList","clearMessage","clearSearch","updateSearch","sortLists","uuidv1","require","styleMetrics","borderWidth","borderRadius","borderColor","borderStyle","margin","padding","height","boxShadow","verticalAlign","styleImage","position","top","opacity","styleRow","paddingRight","paddingLeft","marginBottom","textAlign","Dashboard","state","column","data","direction","modalShow","totalLeadCount","totalMeetingsBooked","totalNotContacted","newListName","showModal","closeModal","setState","handleConfirm","event","id","props","handleRowClick","console","log","history","handleSort","clickedColumn","dataArray","lists","dataSorted","sortBy","reverse","handleChange","e","targetValue","target","value","targetName","name","handleSubmit","capitalizedName","charAt","toUpperCase","substring","userId","auth","user","handleClearMessage","handleFilterChange","componentDidMount","renderListBody","listArr","search","filter","list","includes","map","created_at","leads","dateString","Date","toDateString","leadCount","length","color","backgroundColor","handleCancelModal","renderLeadCount","leadCountArray","totalLeads","forEach","count","push","reduce","total","renderMeetingsBooked","meetingsBookedCount","listWithLeadNotes","lead","leadnotes","leadnote","status","renderNotContacted","notContacted","render","renderMetricCards","width","marginLeft","marginRight","debounce","mapStateToProps","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Card,\n  Table,\n  Icon,\n  Confirm,\n  Button,\n  Modal,\n  Form,\n  Header,\n  Popup,\n  Search\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport {\n  deleteList,\n  thunkFetchListById,\n  addList,\n  clearMessage,\n  clearSearch,\n  updateSearch,\n  sortLists\n} from \"../actions\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleMetrics = {\n  borderWidth: \"1px\",\n  borderRadius: \"10px\",\n  borderColor: \"rgba(98, 0, 238, 0.2)\",\n  borderStyle: \"solid\",\n  margin: \"0 50px 50px 50px\",\n  padding: \"20px\",\n  height: \"100px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.15)\",\n  verticalAlign: 'middle'\n};\n\nconst styleImage = {\n  position: \"relative\",\n  top: \"-30px\",\n  opacity: 0.8\n};\n\nconst styleRow = {\n  top: \"70px\",\n  margin: \"20px\",\n  paddingRight: \"120px\",\n  paddingLeft: \"120px\",\n  marginBottom: \"40px\",\n  position: \"relative\",\n  textAlign: \"left\"\n};\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    modalShow: false,\n    totalLeadCount: 0,\n    totalMeetingsBooked: 0,\n    totalNotContacted: 0,\n    newListName: \"\",\n    showModal: false\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  componentDidMount() {\n    this.props.clearSearch();\n    this.props.clearMessage();\n  }\n\n  // show = dimmer => this.setState({ dimmer, modalShow: true });\n  // handleConfirmModal = () => this.setState({ modalShow: false });\n  // handleCancelModal = () => {\n  //   this.setState({ modalShow: false });\n  // };\n\n  handleConfirm = (event, id) => {\n    // let newArray = this.props.lists.filter(list => list.id !== id);\n    this.setState({ modalShow: false });\n    this.props.deleteList(id);\n  };\n\n  handleRowClick = id => {\n    console.log(\"row clicked\", id);\n    this.props.thunkFetchListById(id, this.props.history);\n  };\n\n  handleSort = clickedColumn => () => {\n    console.log(this.state)\n    console.log(clickedColumn)\n    const { column, direction } = this.state;\n    const dataArray = this.props.lists;\n\n    const dataSorted = _.sortBy(dataArray, [clickedColumn])\n    console.log(dataSorted)\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: \"ascending\"\n      });\n      this.props.sortLists(_.sortBy(dataArray, [clickedColumn]))\n      return;\n    }\n\n    this.setState({\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    })\n    this.props.sortLists(dataArray.reverse())\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { newListName } = this.state;\n    const capitalizedName = newListName.charAt(0).toUpperCase() + newListName.substring(1);\n    const userId = this.props.auth.user.id;\n    this.closeModal();\n    this.props.clearMessage();\n    this.props.addList(capitalizedName, userId);\n  };\n\n  handleClearMessage = () => {\n    this.props.clearMessage();\n  };\n\n  renderListBody() {\n    let listArr = this.props.lists;\n    if (this.props.search === \"\") {\n      listArr = this.props.lists;\n    } else {\n      listArr = this.props.lists.filter(list => {\n        return list.name\n          .toUpperCase()\n          .includes(this.props.search.toUpperCase());\n      });\n    }\n    return (\n      <Table.Body>\n        {_.map(listArr, ({ id, name, created_at, leads }) => {\n          let dateString = new Date(created_at).toDateString();\n          let leadCount = leads.length;\n          // let dateString = date\n          return (\n            <Table.Row textAlign=\"center\" key={uuidv1()}>\n              <Table.Cell onClick={() => this.handleRowClick(id)}>\n                {name}\n              </Table.Cell>\n              <Table.Cell onClick={() => this.handleRowClick(id)}>\n                {leadCount}\n              </Table.Cell>\n              <Table.Cell onClick={() => this.handleRowClick(id)}>\n                {dateString}\n              </Table.Cell>\n              <Table.Cell>\n                <Modal\n                  closeIcon\n                  size=\"mini\"\n                  trigger={\n                    <Icon\n                      name={\"trash alternate outline\"}\n                      name=\"trash alternate outline\"\n                      size=\"large\"\n                    />\n                  }\n                >\n                  <Modal.Header>Delete List</Modal.Header>\n                  <Modal.Content>\n                    <p>Are you sure you want to delete this list?</p>\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      style={{\n                        borderRadius: \"30px\",\n                        color: \"white\",\n                        backgroundColor: \"#6200EE\"\n                      }}\n                      onClick={this.handleCancelModal}\n                      basic\n                      color=\"violet\"\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={event => this.handleConfirm(event, id)}\n                      // icon=\"checkmark\"\n                      // labelPosition=\"right\"\n                      content=\"Yes\"\n                      style={{\n                        borderRadius: \"30px\",\n                        color: \"white\",\n                        backgroundColor: \"#03DAC6\"\n                      }}\n                    />\n                  </Modal.Actions>\n                </Modal>\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    );\n  }\n\n  renderLeadCount() {\n    if (this.props.lists.length > 0) {\n      let leadCountArray = [];\n      let totalLeads = 0;\n      console.log(this.props.lists);\n      this.props.lists.forEach(list => {\n        let count = list.leads.length;\n        leadCountArray.push(count);\n      });\n      totalLeads = leadCountArray.reduce((total, count) => total + count);\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h4\">Total Leads</Header>\n          <Header style={{margin: '0'}} as=\"h1\">{totalLeads}</Header>\n          <Image\n            style={styleImage}\n            size=\"tiny\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n    if (this.props.listWithLeadNotes.length) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h4\">Meetings Booked</Header>\n          <Header style={{margin: '0'}} as=\"h1\">{meetingsBookedCount}</Header>\n          <Image\n            style={styleImage}\n            size=\"tiny\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderNotContacted() {\n    let notContacted = 0;\n\n    if (this.props.listWithLeadNotes.length) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h4\">Not Yet Contacted</Header>\n          <Header  style={{margin: '0'}}as=\"h1\">{notContacted}</Header>\n          <Image\n            style={styleImage}\n            size=\"tiny\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  handleFilterChange = (event, value) => {\n    this.props.updateSearch(value);\n  };\n\n  render() {\n    const { column, direction } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        {this.renderMetricCards}\n        {/* METRIC CARDS */}\n        <Grid>\n          <Grid.Row columns=\"equal\" style={styleRow}>\n            {this.renderLeadCount()}\n            {this.renderMeetingsBooked()}\n            {this.renderNotContacted()}\n          </Grid.Row>\n\n          {/* STYLING FOR THE BUTTON */}\n          <Grid.Row columns={1}>\n            <Grid.Column >\n              <Modal\n                basic\n                closeIcon\n                onClose={this.closeModal}\n                open={this.state.showModal}\n                style={{ width: \"300px\" }}\n                trigger={\n                  <Button\n                    onClick={() => this.setState({ showModal: true })}\n                    style={{\n                      borderRadius: \"20px\",\n                      color: \"white\",\n                      backgroundColor: \"#6200EE\"\n                    }}\n                  >\n                    <Icon name=\"add\" /> Create New List\n                  </Button>\n                }\n              >\n                <div style={{ verticalAlign: \"center\", textAlign: \"center\"}}>\n                <Modal.Header as='h2'>New List</Modal.Header>\n                <Modal.Content>\n                  <Form.Input\n                    placeholder=\"List Name...\"\n                    onChange={this.handleChange}\n                    name=\"newListName\"\n                  >\n                    <input\n                      style={{ borderRadius: \"20px\", width: \"200px\" }}\n                    ></input>\n                  </Form.Input>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    onClick={this.handleSubmit}\n                    style={{\n                      // margin: \"20px\",\n                      borderRadius: \"30px\",\n                      margin: '20px',\n                      // marginBottom: '10px',\n                      color: \"white\",\n                      backgroundColor: \"#6200EE\",\n                      // position: \"relative\",\n                      // float: \"left\"\n                    }}\n                  >\n                    Create New List\n                  </Button>\n                </Modal.Actions>\n                </div>\n              </Modal>\n            </Grid.Column>\n          </Grid.Row>\n          {/* TABLE OF CONTENTS */}\n          <Grid.Row\n            style={{\n              marginLeft: \"150px\",\n              marginRight: \"150px\"\n            }}\n            columns={1}\n          >\n            <Grid.Column>\n              <Table sortable selectable celled style={{borderColor: \"rgba(98, 0, 238, 0.2)\", boxShadow: \"0px 1px 36px -16px rgba(0,0,0,0.15)\", borderWidth: '1px', borderRadius: '10px'}}>\n                <Table.Header >\n                  <Table.Row >\n                    {\" \"}\n                    <Popup\n                      content=\"Search List Name\"\n                      trigger={\n                        <Search\n                        style={{margin: \"20px 20px 20px 20px\", borderColor: 'black'}}\n                          // style={{ margin: \"15px\", position: 'fixed', top: 0 }}\n                          onSearchChange={_.debounce(\n                            (event, { value }) =>\n                              this.handleFilterChange(event, value),\n                            300\n                          )}\n                          noResultsMessage=\"No results found\"\n                          showNoResults={false}\n                        />\n                      }\n                    />\n                  </Table.Row>\n                </Table.Header>\n                <Table.Header>\n                  <Table.Row textAlign=\"center\">\n                    <Table.HeaderCell\n                      sorted={column === \"name\" ? direction : null}\n                      onClick={this.handleSort(\"name\")}\n                    >\n                      List Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"leads\" ? direction : null}\n                      onClick={this.handleSort(\"leads\")}\n                    >\n                      No. of Leads\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"date\" ? direction : null}\n                      onClick={this.handleSort(\"date\")}\n                    >\n                      Date Created\n                    </Table.HeaderCell>\n                    <Table.HeaderCell style={{width: '8px'}}>Delete List</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                {this.renderListBody()}\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes,\n    message: state.message,\n    search: state.search\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     thunkFetchListById: (id, history) => {\n//       dispatch(thunkFetchListById(id, history));\n//     }\n//   };\n// };\n\nexport default connect(\n  mapStateToProps,\n  {\n    deleteList,\n    thunkFetchListById,\n    addList,\n    clearMessage,\n    clearSearch,\n    updateSearch,\n    sortLists\n  }\n)(withRouter(Dashboard));\n\n// <Modal\n//   closeOnDimmerClick={this.state.modalShow}\n//   closeIcon\n//   open={this.state.modalShow}\n//   centered\n//   trigger={\n//     <Button\n//       onClick={this.show}\n//       style={{\n//         borderRadius: \"30px\",\n//         color: \"white\",\n//         backgroundColor: \"#6200EE\"\n//       }}\n//     >\n//       <Icon name=\"add\" /> Create New List\n//     </Button>\n//   }\n//   basic\n//   size=\"small\"\n// >\n//   <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n//     <Modal.Header as=\"h2\">Create a New List:</Modal.Header>\n//     <Form.Group>\n//       <Form.Input\n//         placeholder=\"Create new list...\"\n//         onChange={this.handleChange}\n//         name=\"newListName\"\n//       >\n//         <input\n//           style={{ borderRadius: \"30px\", width: \"200px\" }}\n//         ></input>\n//       </Form.Input>\n//       <Button\n//         onClick={this.handleSubmit}\n//         style={{\n//           margin: \"20px\",\n//           borderRadius: \"30px\",\n//           color: \"white\",\n//           backgroundColor: \"#03DAC6\"\n//         }}\n//       >\n//         <Icon name=\"add\" /> Add Lead to List\n//       </Button>\n//     </Form.Group>\n//   </div>\n// </Modal>\n"]},"metadata":{},"sourceType":"module"}