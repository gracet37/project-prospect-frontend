{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchBar.js\";\nimport React, { Component } from \"react\";\nimport { Form, Dropdown, Button } from \"semantic-ui-react\";\nimport { thunkFetchCategories, thunkFetchLeads } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nvar HunterSDK = require(\"hunterio\");\n\nvar KEY = \"7ca084937e5e049696b7bb64c10366c3d077c650\";\nvar hunter = new HunterSDK(KEY); /////////////////////// STYLING /////////////////////////\n\nconst searchOptions = [{\n  key: \"industry\",\n  text: \"Industry\",\n  value: \"industry\"\n}, {\n  key: \"domain\",\n  text: \"Company Domain\",\n  value: \"domain\"\n}];\nconst styleDropdown = {\n  width: \"20%\"\n};\nconst CATEGORY_URL = \"http://localhost:3000/api/v1/categories\";\nconst LEADS_URL = \"http://localhost:3000/api/v1/leads\"; /////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectionParam: \"\",\n      searchParam: \"\",\n      locationParam: \"\",\n      leadsResults: []\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      const targetName = data.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.thunkFetchLeads(this.state.searchParam);\n    };\n  }\n\n  componentDidMount() {// this.fetchCategories()\n    // this.props.thunkFetchCategories()\n    // this.fetchQuery()\n    // this.fetchLeads()\n  }\n\n  // fetchQuery = () => {\n  //   hunter.domainSearch(\n  //     {domain: \"fonterra.com\"},\n  //     function(err, body) {\n  //       if (err) {\n  //         console.log(err);\n  //       } else {\n  //         // Will contain same body as the raw API call\n  //         console.log(body);\n  //       }\n  //     }\n  //   );\n  // };\n  // fetchHunter = () => {\n  //   fetch(\"https://api.hunter.io/v2/domain-search?domain=stripe.com&api_key=7ca084937e5e049696b7bb64c10366c3d077c650\")\n  //   .then(res => res.json())\n  //   .then(console.log)\n  // }\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      name: \"selectionParam\",\n      style: styleDropdown,\n      placeholder: \"Search by...\",\n      fluid: true,\n      selection: true,\n      options: searchOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.selectionParam === \"industry\" ? React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"searchParam\",\n      fluid: true,\n      placeholder: \"Industry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"locationParam\",\n      fluid: true,\n      placeholder: \"Enter city name...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Search\")) : React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"searchParam\",\n      fluid: true,\n      placeholder: \"Enter domain name...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      onClick: () => this.props.thunkFetchLeads,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Search D\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchCategories: () => {\n      dispatch(thunkFetchCategories());\n    },\n    thunkFetchLeads: domainName => {\n      dispatch(thunkFetchLeads(domainName));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchBar.js"],"names":["React","Component","Form","Dropdown","Button","thunkFetchCategories","thunkFetchLeads","connect","HunterSDK","require","KEY","hunter","searchOptions","key","text","value","styleDropdown","width","CATEGORY_URL","LEADS_URL","SearchBar","state","selectionParam","searchParam","locationParam","leadsResults","handleDropdown","e","data","targetValue","targetName","name","setState","handleChange","target","handleSubmit","props","componentDidMount","render","console","log","mapDispatchToProps","dispatch","domainName","mapStateToProps","categories","leads"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Dropdown, Button } from \"semantic-ui-react\";\nimport { thunkFetchCategories, thunkFetchLeads } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nvar HunterSDK = require(\"hunterio\");\n\nvar KEY = \"7ca084937e5e049696b7bb64c10366c3d077c650\";\n\nvar hunter = new HunterSDK(KEY);\n\n/////////////////////// STYLING /////////////////////////\nconst searchOptions = [\n  { key: \"industry\", text: \"Industry\", value: \"industry\" },\n  { key: \"domain\", text: \"Company Domain\", value: \"domain\" }\n];\n\nconst styleDropdown = {\n  width: \"20%\"\n};\n\nconst CATEGORY_URL = \"http://localhost:3000/api/v1/categories\";\nconst LEADS_URL =  \"http://localhost:3000/api/v1/leads\"\n\n/////////////////////// STYLING /////////////////////////\n\nclass SearchBar extends Component {\n  state = {\n    selectionParam: \"\",\n    searchParam: \"\",\n    locationParam: \"\",\n    leadsResults: []\n  };\n\n  componentDidMount() {\n    // this.fetchCategories()\n    // this.props.thunkFetchCategories()\n    // this.fetchQuery()\n    // this.fetchLeads()\n\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    const targetName = data.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    this.props.thunkFetchLeads(this.state.searchParam)\n  };\n\n\n\n  // fetchQuery = () => {\n  //   hunter.domainSearch(\n  //     {domain: \"fonterra.com\"},\n  //     function(err, body) {\n  //       if (err) {\n  //         console.log(err);\n  //       } else {\n  //         // Will contain same body as the raw API call\n  //         console.log(body);\n  //       }\n  //     }\n  //   );\n  // };\n\n  // fetchHunter = () => {\n  //   fetch(\"https://api.hunter.io/v2/domain-search?domain=stripe.com&api_key=7ca084937e5e049696b7bb64c10366c3d077c650\")\n  //   .then(res => res.json())\n  //   .then(console.log)\n  // }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <Form>\n          <Dropdown\n            onChange={this.handleDropdown}\n            name=\"selectionParam\"\n            style={styleDropdown}\n            placeholder=\"Search by...\"\n            fluid\n            selection\n            options={searchOptions}\n          />\n          {this.state.selectionParam === \"industry\" ? (\n            <Form>\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"searchParam\"\n                fluid\n                placeholder=\"Industry\"\n              />\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"locationParam\"\n                fluid\n                placeholder=\"Enter city name...\"\n              />\n              <Button type=\"submit\">Search</Button>\n            </Form>\n          ) : (\n            <Form>\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"searchParam\"\n                fluid\n                placeholder=\"Enter domain name...\"\n              />\n              <Button type=\"submit\" onClick={() => this.props.thunkFetchLeads}>\n                Search D\n              </Button>\n            </Form>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    thunkFetchCategories: () => {\n      dispatch(thunkFetchCategories());\n    },\n    thunkFetchLeads: (domainName) => {\n      dispatch(thunkFetchLeads(domainName))\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    leads: state.leads\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}