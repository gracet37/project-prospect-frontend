{"ast":null,"code":"import _slicedToArray from \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/EnhancedTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Modal, Button, Dropdown, Form, Icon } from \"semantic-ui-react\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'First Name'\n}, {\n  id: 'last_name',\n  numeric: false,\n  disablePadding: false,\n  label: 'Last Name'\n}, {\n  id: 'email',\n  numeric: false,\n  disablePadding: false,\n  label: 'Email'\n}, {\n  id: 'position',\n  numeric: false,\n  disablePadding: false,\n  label: 'Position'\n}, {\n  id: 'company',\n  numeric: false,\n  disablePadding: false,\n  label: 'Company'\n}, {\n  id: 'confidence',\n  numeric: true,\n  disablePadding: false,\n  label: 'Confidence'\n}];\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    style: {\n      fontSize: '12px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      fontSize: '12px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    style: {\n      fontSize: '12px'\n    },\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all leads'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    style: {\n      fontSize: '12px'\n    },\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Search Results\")), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    centered: true,\n    trigger: React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Save Leads\"),\n    basic: true,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, props.listArray.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Select an Existing List:\"), React.createElement(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    onChange: this.handleDropdown,\n    name: \"listId\",\n    style: {\n      width\n    },\n    placeholder: \"Select list...\",\n    fluid: true,\n    disabled: this.state.newListName ? true : false,\n    selection: true,\n    options: props.listArray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Modal.Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Create a New List:\"), React.createElement(Form.Input, {\n    placeholder: \"Create new list...\",\n    onChange: this.handleChange,\n    name: \"newListName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(Modal.Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: this.handleSubmit,\n    basic: true,\n    color: \"blue\",\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), \" Add Lead to List\"))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Create A New List\"), React.createElement(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    placeholder: \"Create new list...\",\n    onChange: this.handleChange,\n    name: \"newListName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: this.handleSubmit,\n    basic: true,\n    color: \"blue\",\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), \" Add Lead to List\"))))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  const listArray = props.listArray;\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('last_name'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(10),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n  if (props.rows) {\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(EnhancedTableToolbar, {\n      listArray: listArray,\n      numSelected: selected.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      size: dense ? 'small' : 'medium',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      classes: classes,\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: handleSelectAllClick,\n      onRequestSort: handleRequestSort,\n      rowCount: props.rows.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, stableSort(props.rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n      const isItemSelected = isSelected(row.name);\n      const labelId = \"enhanced-table-checkbox-\".concat(index);\n      return React.createElement(TableRow, {\n        hover: true,\n        onClick: event => handleClick(event, row.name),\n        role: \"checkbox\",\n        \"aria-checked\": isItemSelected,\n        tabIndex: -1,\n        key: uuidv1(),\n        selected: isItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: isItemSelected,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        component: \"th\",\n        id: labelId,\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, row.name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, row.last_name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, row.position), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, row.company), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, row.confidence));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: props.rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        'aria-label': 'previous page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'next page'\n      },\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n  ;\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/EnhancedTable.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","Modal","Button","Dropdown","Form","Icon","uuidv1","require","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","fontSize","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","listArray","length","handleDropdown","width","state","newListName","handleChange","handleSubmit","useStyles","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","rows","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","value","handleChangeDense","isSelected","emptyRows","Math","min","row","isItemSelected","labelId","last_name","email","company","confidence"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,IALF,QAMO,mBANP;;AAQA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6B;AAC3B,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACV,CAAD,EAAIC,CAAJ,KAAU;AAC5B,UAAMU,KAAK,GAAGN,GAAG,CAACL,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAjB;AACA,QAAIU,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOX,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,GAJD;AAKA,SAAOK,cAAc,CAACC,GAAf,CAAmBC,EAAE,IAAIA,EAAE,CAAC,CAAD,CAA3B,CAAP;AACD;;AAED,SAASI,UAAT,CAAoBD,KAApB,EAA2BT,OAA3B,EAAoC;AAClC,SAAOS,KAAK,KAAK,MAAV,GAAmB,CAACX,CAAD,EAAIC,CAAJ,KAAUF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAjC,GAAmD,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAzE;AACD;;AAED,MAAMW,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,OAAO,EAAE,KAAvB;AAA8BC,EAAAA,cAAc,EAAE,IAA9C;AAAoDC,EAAAA,KAAK,EAAE;AAA3D,CADgB,EAEhB;AAAEH,EAAAA,EAAE,EAAE,WAAN;AAAmBC,EAAAA,OAAO,EAAE,KAA5B;AAAmCC,EAAAA,cAAc,EAAE,KAAnD;AAA0DC,EAAAA,KAAK,EAAE;AAAjE,CAFgB,EAGhB;AAAEH,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,OAAO,EAAE,KAAxB;AAA+BC,EAAAA,cAAc,EAAE,KAA/C;AAAsDC,EAAAA,KAAK,EAAE;AAA7D,CAHgB,EAIhB;AAAEH,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,OAAO,EAAE,KAA3B;AAAkCC,EAAAA,cAAc,EAAE,KAAlD;AAAyDC,EAAAA,KAAK,EAAE;AAAhE,CAJgB,EAKhB;AAAEH,EAAAA,EAAE,EAAE,SAAN;AAAiBC,EAAAA,OAAO,EAAE,KAA1B;AAAiCC,EAAAA,cAAc,EAAE,KAAjD;AAAwDC,EAAAA,KAAK,EAAE;AAA/D,CALgB,EAMhB;AAAEH,EAAAA,EAAE,EAAE,YAAN;AAAoBC,EAAAA,OAAO,EAAE,IAA7B;AAAmCC,EAAAA,cAAc,EAAE,KAAnD;AAA0DC,EAAAA,KAAK,EAAE;AAAjE,CANgB,CAAlB;;AASA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,QACxBC,OADwB,GAC4DD,KAD5D,CACxBC,OADwB;AAAA,QACfC,gBADe,GAC4DF,KAD5D,CACfE,gBADe;AAAA,QACGV,KADH,GAC4DQ,KAD5D,CACGR,KADH;AAAA,QACUT,OADV,GAC4DiB,KAD5D,CACUjB,OADV;AAAA,QACmBoB,WADnB,GAC4DH,KAD5D,CACmBG,WADnB;AAAA,QACgCC,QADhC,GAC4DJ,KAD5D,CACgCI,QADhC;AAAA,QAC0CC,aAD1C,GAC4DL,KAD5D,CAC0CK,aAD1C;;AAEhC,QAAMC,iBAAiB,GAAGC,QAAQ,IAAIC,KAAK,IAAI;AAC7CH,IAAAA,aAAa,CAACG,KAAD,EAAQD,QAAR,CAAb;AACD,GAFD;;AAIA,SACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAC;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAAlB;AAAqC,IAAA,OAAO,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEN,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGC,QADlD;AAEE,IAAA,OAAO,EAAED,WAAW,KAAKC,QAF3B;AAGE,IAAA,QAAQ,EAAEF,gBAHZ;AAIE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASGR,SAAS,CAACN,GAAV,CAAcsB,QAAQ,IACrB,oBAAC,SAAD;AACA,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAQ,EAAC;AAAV,KADP;AAEE,IAAA,GAAG,EAAEC,QAAQ,CAACf,EAFhB;AAGE,IAAA,KAAK,EAAEe,QAAQ,CAACd,OAAT,GAAmB,OAAnB,GAA6B,MAHtC;AAIE,IAAA,OAAO,EAAEc,QAAQ,CAACb,cAAT,GAA0B,MAA1B,GAAmC,SAJ9C;AAKE,IAAA,aAAa,EAAEd,OAAO,KAAK2B,QAAQ,CAACf,EAArB,GAA0BH,KAA1B,GAAkC,KALnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,cAAD;AACE,IAAA,MAAM,EAAET,OAAO,KAAK2B,QAAQ,CAACf,EAD/B;AAEE,IAAA,SAAS,EAAEH,KAFb;AAGE,IAAA,OAAO,EAAEc,iBAAiB,CAACI,QAAQ,CAACf,EAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGe,QAAQ,CAACZ,KALZ,EAMGf,OAAO,KAAK2B,QAAQ,CAACf,EAArB,GACC;AAAM,IAAA,SAAS,EAAEM,OAAO,CAACU,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,KAAK,MAAV,GAAmB,mBAAnB,GAAyC,kBAD5C,CADD,GAIG,IAVN,CAPF,CADD,CATH,CADF,CADF;AAoCD;;AAEDO,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BX,EAAAA,OAAO,EAAEjD,SAAS,CAAC6D,MAAV,CAAiBC,UADE;AAE5BX,EAAAA,WAAW,EAAEnD,SAAS,CAAC+D,MAAV,CAAiBD,UAFF;AAG5BT,EAAAA,aAAa,EAAErD,SAAS,CAACgE,IAAV,CAAeF,UAHF;AAI5BZ,EAAAA,gBAAgB,EAAElD,SAAS,CAACgE,IAAV,CAAeF,UAJL;AAK5BtB,EAAAA,KAAK,EAAExC,SAAS,CAACiE,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,EAAiCH,UALZ;AAM5B/B,EAAAA,OAAO,EAAE/B,SAAS,CAACkE,MAAV,CAAiBJ,UANE;AAO5BV,EAAAA,QAAQ,EAAEpD,SAAS,CAAC+D,MAAV,CAAiBD;AAPC,CAA9B;AAUA,MAAMK,gBAAgB,GAAGhE,UAAU,CAACiE,KAAK,KAAK;AAC5CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEJC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFV,GADsC;AAK5CE,EAAAA,SAAS,EACPL,KAAK,CAACM,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACI;AACEC,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBC,IADjC;AAEEC,IAAAA,eAAe,EAAE7E,OAAO,CAACkE,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBG,KAAzB,EAAgC,IAAhC;AAF1B,GADJ,GAKI;AACEJ,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcO,IAAd,CAAmBC,OAD5B;AAEEH,IAAAA,eAAe,EAAEX,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBM;AAF3C,GAXsC;AAe5CC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GAfoC;AAkB5CC,EAAAA,OAAO,EAAE;AACPV,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcO,IAAd,CAAmBJ;AADnB,GAlBmC;AAqB5CU,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAE;AADD;AArBqC,CAAL,CAAN,CAAnC;;AA0BA,MAAMG,oBAAoB,GAAGxC,KAAK,IAAI;AACpC,QAAMC,OAAO,GAAGkB,gBAAgB,EAAhC;AADoC,QAE5BhB,WAF4B,GAEZH,KAFY,CAE5BG,WAF4B;AAIpC,SACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAElD,IAAI,CAACgD,OAAO,CAACoB,IAAT,EAAe;AAC5B,OAACpB,OAAO,CAACwB,SAAT,GAAqBtB,WAAW,GAAG;AADP,KAAf,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACsC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpC,WAAW,GAAG,CAAd,GACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WADH,cADD,GAKC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,EAAE,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CALF,EAgBE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACmC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAK,IAAA,SAAS,EAAEnC,OAAO,CAACqC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,WAAW,GAAG,CAAd,GACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AACQ,IAAA,QAAQ,MADhB;AAEQ,IAAA,OAAO,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFjB;AAGQ,IAAA,KAAK,MAHb;AAIQ,IAAA,IAAI,EAAC,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMSH,KAAK,CAACyC,SAAN,CAAgBC,MAAhB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,EAAE,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAIE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,KAAKC,cADjB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAE;AAACC,MAAAA;AAAD,KAHT;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,KAAK,MALP;AAME,IAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,WAAX,GAAyB,IAAzB,GAAgC,KAN5C;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,OAAO,EAAE9C,KAAK,CAACyC,SARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,EAAE,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXF,EAcE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,WAAW,EAAC,oBADd;AAEE,IAAA,QAAQ,EAAE,KAAKM,YAFjB;AAGE,IAAA,IAAI,EAAC,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAmBE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,EAAE,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,KAAKC,YADhB;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,sBApBF,CAJF,CADD,GAoCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,EAAE,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,WAAW,EAAC,oBADd;AAEE,IAAA,QAAQ,EAAE,KAAKD,YAFjB;AAGE,IAAA,IAAI,EAAC,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,KAAKC,YADhB;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,sBANF,CAFF,CA1CV,CAFF,CADD,GAmEC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CApEJ,CAjBF,CADF;AA+FD,CAnGD;;AAqGAR,oBAAoB,CAAC5B,SAArB,GAAiC;AAC/BT,EAAAA,WAAW,EAAEnD,SAAS,CAAC+D,MAAV,CAAiBD;AADC,CAAjC;AAIA,MAAMmC,SAAS,GAAG9F,UAAU,CAACiE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJuB,IAAAA,KAAK,EAAE,MADH;AAEJM,IAAAA,SAAS,EAAE9B,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAD+B;AAKrC4B,EAAAA,KAAK,EAAE;AACLP,IAAAA,KAAK,EAAE,MADF;AAELQ,IAAAA,YAAY,EAAEhC,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAL8B;AASrC8B,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAT8B;AAYrCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAZuB;AAerC7C,EAAAA,cAAc,EAAE;AACd8C,IAAAA,MAAM,EAAE,CADM;AAEdC,IAAAA,IAAI,EAAE,eAFQ;AAGdC,IAAAA,MAAM,EAAE,CAHM;AAIdC,IAAAA,MAAM,EAAE,CAAC,CAJK;AAKdC,IAAAA,QAAQ,EAAE,QALI;AAMdC,IAAAA,OAAO,EAAE,CANK;AAOdC,IAAAA,QAAQ,EAAE,UAPI;AAQdC,IAAAA,GAAG,EAAE,EARS;AASdpB,IAAAA,KAAK,EAAE;AATO;AAfqB,CAAL,CAAN,CAA5B;AA4BA,eAAe,SAASqB,aAAT,CAAuBjE,KAAvB,EAA8B;AAC3C,QAAMyC,SAAS,GAAGzC,KAAK,CAACyC,SAAxB;AACA,QAAMxC,OAAO,GAAGgD,SAAS,EAAzB;;AAF2C,0BAGjBlG,KAAK,CAACmH,QAAN,CAAe,KAAf,CAHiB;AAAA;AAAA,QAGpC1E,KAHoC;AAAA,QAG7B2E,QAH6B;;AAAA,2BAIbpH,KAAK,CAACmH,QAAN,CAAe,WAAf,CAJa;AAAA;AAAA,QAIpCnF,OAJoC;AAAA,QAI3BqF,UAJ2B;;AAAA,2BAKXrH,KAAK,CAACmH,QAAN,CAAe,EAAf,CALW;AAAA;AAAA,QAKpCG,QALoC;AAAA,QAK1BC,WAL0B;;AAAA,2BAMnBvH,KAAK,CAACmH,QAAN,CAAe,CAAf,CANmB;AAAA;AAAA,QAMpCK,IANoC;AAAA,QAM9BC,OAN8B;;AAAA,2BAOjBzH,KAAK,CAACmH,QAAN,CAAe,KAAf,CAPiB;AAAA;AAAA,QAOpCO,KAPoC;AAAA,QAO7BC,QAP6B;;AAAA,4BAQL3H,KAAK,CAACmH,QAAN,CAAe,EAAf,CARK;AAAA;AAAA,QAQpCS,WARoC;AAAA,QAQvBC,cARuB;;AAU3C,QAAMC,iBAAiB,GAAG,CAACrE,KAAD,EAAQD,QAAR,KAAqB;AAC7C,UAAMuE,MAAM,GAAG/F,OAAO,KAAKwB,QAAZ,IAAwBf,KAAK,KAAK,MAAjD;AACA2E,IAAAA,QAAQ,CAACW,MAAM,GAAG,KAAH,GAAW,MAAlB,CAAR;AACAV,IAAAA,UAAU,CAAC7D,QAAD,CAAV;AACD,GAJD;;AAMA,QAAMwE,oBAAoB,GAAGvE,KAAK,IAAI;AACpC,QAAIA,KAAK,CAACwE,MAAN,CAAaC,OAAjB,EAA0B;AACxB,YAAMC,YAAY,GAAGlF,KAAK,CAACmF,IAAN,CAAW/F,GAAX,CAAegG,CAAC,IAAIA,CAAC,CAACC,IAAtB,CAArB;AACAf,MAAAA,WAAW,CAACY,YAAD,CAAX;AACA;AACD;;AACDZ,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAMgB,WAAW,GAAG,CAAC9E,KAAD,EAAQ6E,IAAR,KAAiB;AACnC,UAAME,aAAa,GAAGlB,QAAQ,CAACmB,OAAT,CAAiBH,IAAjB,CAAtB;AACA,QAAII,WAAW,GAAG,EAAlB;;AAEA,QAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBrB,QAAnB,EAA6BgB,IAA7B,CAAd;AACD,KAFD,MAEO,IAAIE,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBrB,QAAQ,CAACsB,KAAT,CAAe,CAAf,CAAnB,CAAd;AACD,KAFM,MAEA,IAAIJ,aAAa,KAAKlB,QAAQ,CAAC3B,MAAT,GAAkB,CAAxC,EAA2C;AAChD+C,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBrB,QAAQ,CAACsB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACD,KAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACZrB,QAAQ,CAACsB,KAAT,CAAe,CAAf,EAAkBJ,aAAlB,CADY,EAEZlB,QAAQ,CAACsB,KAAT,CAAeJ,aAAa,GAAG,CAA/B,CAFY,CAAd;AAID;;AAEDjB,IAAAA,WAAW,CAACmB,WAAD,CAAX;AACD,GAlBD;;AAoBA,QAAMG,gBAAgB,GAAG,CAACpF,KAAD,EAAQqF,OAAR,KAAoB;AAC3CrB,IAAAA,OAAO,CAACqB,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAGtF,KAAK,IAAI;AACvCoE,IAAAA,cAAc,CAAC,CAACpE,KAAK,CAACwE,MAAN,CAAae,KAAf,CAAd;AACAvB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMwB,iBAAiB,GAAGxF,KAAK,IAAI;AACjCkE,IAAAA,QAAQ,CAAClE,KAAK,CAACwE,MAAN,CAAaC,OAAd,CAAR;AACD,GAFD;;AAIA,QAAMgB,UAAU,GAAGZ,IAAI,IAAIhB,QAAQ,CAACmB,OAAT,CAAiBH,IAAjB,MAA2B,CAAC,CAAvD;;AAEA,QAAMa,SAAS,GAAGvB,WAAW,GAAGwB,IAAI,CAACC,GAAL,CAASzB,WAAT,EAAsB3E,KAAK,CAACmF,IAAN,CAAWzC,MAAX,GAAoB6B,IAAI,GAAGI,WAAjD,CAAhC;;AACA,MAAI3E,KAAK,CAACmF,IAAV,EAAgB;AAChB,WACE;AAAK,MAAA,SAAS,EAAElF,OAAO,CAACoB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEpB,OAAO,CAACkD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAsB,MAAA,SAAS,EAAEV,SAAjC;AAA4C,MAAA,WAAW,EAAE4B,QAAQ,CAAC3B,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAEzC,OAAO,CAACsD,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEtD,OAAO,CAACoD,KADrB;AAEE,yBAAgB,YAFlB;AAGE,MAAA,IAAI,EAAEoB,KAAK,GAAG,OAAH,GAAa,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,iBAAD;AACE,MAAA,OAAO,EAAExE,OADX;AAEE,MAAA,WAAW,EAAEoE,QAAQ,CAAC3B,MAFxB;AAGE,MAAA,KAAK,EAAElD,KAHT;AAIE,MAAA,OAAO,EAAET,OAJX;AAKE,MAAA,gBAAgB,EAAEgG,oBALpB;AAME,MAAA,aAAa,EAAEF,iBANjB;AAOE,MAAA,QAAQ,EAAE7E,KAAK,CAACmF,IAAN,CAAWzC,MAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1D,UAAU,CAACgB,KAAK,CAACmF,IAAP,EAAa1F,UAAU,CAACD,KAAD,EAAQT,OAAR,CAAvB,CAAV,CACE4G,KADF,CACQpB,IAAI,GAAGI,WADf,EAC4BJ,IAAI,GAAGI,WAAP,GAAqBA,WADjD,EAEEvF,GAFF,CAEM,CAACiH,GAAD,EAAM/G,KAAN,KAAgB;AACnB,YAAMgH,cAAc,GAAGL,UAAU,CAACI,GAAG,CAAChB,IAAL,CAAjC;AACA,YAAMkB,OAAO,qCAA8BjH,KAA9B,CAAb;AAEA,aACE,oBAAC,QAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,OAAO,EAAEkB,KAAK,IAAI8E,WAAW,CAAC9E,KAAD,EAAQ6F,GAAG,CAAChB,IAAZ,CAF/B;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,wBAAciB,cAJhB;AAKE,QAAA,QAAQ,EAAE,CAAC,CALb;AAME,QAAA,GAAG,EAAE5H,MAAM,EANb;AAOE,QAAA,QAAQ,EAAE4H,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEA,cADX;AAEE,QAAA,UAAU,EAAE;AAAE,6BAAmBC;AAArB,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAeE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,EAAE,EAAEA,OAA9B;AAAuC,QAAA,KAAK,EAAC,KAA7C;AAAmD,QAAA,OAAO,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,GAAG,CAAChB,IADP,CAfF,EAkBE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BgB,GAAG,CAACG,SAA9B,CAlBF,EAmBE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BH,GAAG,CAACI,KAA9B,CAnBF,EAoBE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BJ,GAAG,CAACtC,QAA9B,CApBF,EAqBE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BsC,GAAG,CAACK,OAA9B,CArBF,EAsBE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BL,GAAG,CAACM,UAA9B,CAtBF,CADF;AA0BD,KAhCF,CADH,EAkCGT,SAAS,GAAG,CAAZ,IACC,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEvC,QAAAA,MAAM,EAAE,KAAKuC;AAAf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnCJ,CAdF,CADF,CAFF,EA2DE,oBAAC,eAAD;AACE,MAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,KAAK,EAAElG,KAAK,CAACmF,IAAN,CAAWzC,MAHpB;AAIE,MAAA,WAAW,EAAEiC,WAJf;AAKE,MAAA,IAAI,EAAEJ,IALR;AAME,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OANvB;AASE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OATvB;AAYE,MAAA,YAAY,EAAEqB,gBAZhB;AAaE,MAAA,mBAAmB,EAAEE,uBAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,CADF,CADF;AA+EC,GAhFD,MAgFO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAAA;AACF","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {\n  Modal,\n  Button,\n  Dropdown,\n  Form,\n  Icon\n} from \"semantic-ui-react\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'First Name' },\n  { id: 'last_name', numeric: false, disablePadding: false, label: 'Last Name' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'position', numeric: false, disablePadding: false, label: 'Position' },\n  { id: 'company', numeric: false, disablePadding: false, label: 'Company' },\n  { id: 'confidence', numeric: true, disablePadding: false, label: 'Confidence' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead style={{fontSize:'12px'}}>\n      <TableRow style={{fontSize:'12px'}}>\n        <TableCell style={{fontSize:'12px'}} padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all leads' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n          style={{fontSize:'12px'}}\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Search Results\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            {/* <IconButton aria-label=\"delete\"> */}\n            <Modal\n                    centered\n                    trigger={<Button>Save Leads</Button>}\n                    basic\n                    size=\"small\"\n                  >\n                    {props.listArray.length ? (\n                      <div>\n                        <Modal.Header as=\"h2\">\n                          Select an Existing List:\n                        </Modal.Header>\n                        <Modal.Actions>\n                          <Dropdown\n                            onChange={this.handleDropdown}\n                            name=\"listId\"\n                            style={{width}}\n                            placeholder=\"Select list...\"\n                            fluid\n                            disabled={this.state.newListName ? true : false}\n                            selection\n                            options={props.listArray}\n                          />\n                          <Modal.Header as=\"h2\">\n                            Create a New List:\n                          </Modal.Header>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Modal.Header as=\"h2\"></Modal.Header>\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    ) : (\n                      <div>\n                        <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                        <Modal.Actions>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    )}\n                  </Modal>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const listArray = props.listArray\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('last_name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n  if (props.rows) {\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar listArray={listArray} numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.rows.length}\n            />\n            <TableBody>\n              {stableSort(props.rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={uuidv1()}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.last_name}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.position}</TableCell>\n                      <TableCell align=\"right\">{row.company}</TableCell>\n                      <TableCell align=\"right\">{row.confidence}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={props.rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n  </div> \n  )\n  } else {\n    return <div>Loading</div>\n  };\n}\n"]},"metadata":{},"sourceType":"module"}