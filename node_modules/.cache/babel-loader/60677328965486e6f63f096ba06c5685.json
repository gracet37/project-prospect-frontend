{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SizePerPageDropdownWithAdapter = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pageResolver2 = require('./page-resolver');\n\nvar _pageResolver3 = _interopRequireDefault(_pageResolver2);\n\nvar _sizePerPageDropdown = require('./size-per-page-dropdown');\n\nvar _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/prop-types: 0 */\n\n\nvar sizePerPageDropdownAdapter = function sizePerPageDropdownAdapter(WrappedComponent) {\n  return function (_pageResolver) {\n    _inherits(SizePerPageDropdownAdapter, _pageResolver);\n\n    function SizePerPageDropdownAdapter(props) {\n      _classCallCheck(this, SizePerPageDropdownAdapter);\n\n      var _this = _possibleConstructorReturn(this, (SizePerPageDropdownAdapter.__proto__ || Object.getPrototypeOf(SizePerPageDropdownAdapter)).call(this, props));\n\n      _this.closeDropDown = _this.closeDropDown.bind(_this);\n      _this.toggleDropDown = _this.toggleDropDown.bind(_this);\n      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);\n      _this.state = {\n        dropdownOpen: false\n      };\n      return _this;\n    }\n\n    _createClass(SizePerPageDropdownAdapter, [{\n      key: 'toggleDropDown',\n      value: function toggleDropDown() {\n        var dropdownOpen = !this.state.dropdownOpen;\n        this.setState(function () {\n          return {\n            dropdownOpen: dropdownOpen\n          };\n        });\n      }\n    }, {\n      key: 'closeDropDown',\n      value: function closeDropDown() {\n        this.setState(function () {\n          return {\n            dropdownOpen: false\n          };\n        });\n      }\n    }, {\n      key: 'handleChangeSizePerPage',\n      value: function handleChangeSizePerPage(sizePerPage) {\n        this.props.onSizePerPageChange(sizePerPage);\n        this.closeDropDown();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            sizePerPageList = _props.sizePerPageList,\n            currSizePerPage = _props.currSizePerPage,\n            hideSizePerPage = _props.hideSizePerPage,\n            sizePerPageRenderer = _props.sizePerPageRenderer,\n            sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer;\n        var open = this.state.dropdownOpen;\n\n        if (sizePerPageList.length > 1 && !hideSizePerPage) {\n          if (sizePerPageRenderer) {\n            return sizePerPageRenderer({\n              options: this.calculateSizePerPageStatus(),\n              currSizePerPage: '' + currSizePerPage,\n              onSizePerPageChange: this.handleChangeSizePerPage\n            });\n          }\n\n          return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {\n            currSizePerPage: '' + currSizePerPage,\n            options: this.calculateSizePerPageStatus(),\n            optionRenderer: sizePerPageOptionRenderer,\n            onSizePerPageChange: this.handleChangeSizePerPage,\n            onClick: this.toggleDropDown,\n            onBlur: this.closeDropDown,\n            open: open\n          }));\n        }\n\n        return null;\n      }\n    }]);\n\n    return SizePerPageDropdownAdapter;\n  }((0, _pageResolver3.default)(_react.Component));\n};\n\nvar SizePerPageDropdownWithAdapter = exports.SizePerPageDropdownWithAdapter = sizePerPageDropdownAdapter(_sizePerPageDropdown2.default);\nexports.default = sizePerPageDropdownAdapter;","map":null,"metadata":{},"sourceType":"script"}