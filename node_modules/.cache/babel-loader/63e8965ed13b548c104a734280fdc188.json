{"ast":null,"code":"// General functions that are used throughout the app\nimport { UPDATE_SEARCH, CLEAR_MESSAGE, FETCH_ERROR } from './types'; // const uuidv1 = require(\"uuid/v1\");\n\nexport function fetchError(error) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_ERROR,\n      error\n    });\n  };\n}\nexport function clearMessage() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  };\n}\nexport function updateSearch(search) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_SEARCH,\n      search\n    });\n  };\n}\nexport function clearSearch() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_SEARCH\n    });\n  };\n} // ! Fetch categories (Not in use)\n// export function thunkFetchCategories() {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_CATEGORIES });\n//     fetch(\"https://frozen-shore-20550.herokuapp.com/api/v1/categories\")\n//       .then(res => res.json())\n//       .then(data => {\n//         dispatch({ type: FETCH_CATEGORIES, categories: data });\n//       });\n//   };\n// }\n//! FETCHES ONE LEADNOTE (DONT THINK I NEED THIS ANYMORE)\n// export function thunkFetchLeadNote(user_id, lead_id) {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_LEADNOTE });\n//     fetch(\"https://frozen-shore-20550.herokuapp.com/leadnotes/show\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": 'application/json',\n//         \"Accept\": 'application/json'\n//       },\n//       body: JSON.stringify({\n//         user_id: user_id,\n//         lead_id: lead_id\n//       })\n//     })\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(\"leadnote\", data)\n//       // dispatch({ type: FETCH_LEADNOTE, leadnote: data});\n//       // history.push('/leads')\n//     })\n//   }\n// }\n// ! FETCHES ALL LEADNOTES\n// export function thunkFetchLeadNotes(user_id) {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_LEADNOTES });\n//     fetch(`https://frozen-shore-20550.herokuapp.com/leadnotes/${user_id}`)\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(\"leadnotes\", data)\n//       dispatch({ type: FETCH_LEADNOTES, leadnotes: data});\n//       // history.push('/leads')\n//     })\n//   }\n// }\n/////////////////// FETCHING LEADLIST /////////////////////////\n// export function thunkFetchListById(id, history) {\n//   return function(dispatch) {\n//     // dispatch({ type: START_FETCH_LISTS });\n//     fetch(`https://frozen-shore-20550.herokuapp.com/api/v1/lists/show/${id}`)\n//       .then(res => res.json())\n//       .then(data => {\n//         console.log(data.leads)\n//         dispatch({ type: FETCH_LIST_BY_ID, listlead: data.leads, listid: data.id});\n//         history.push('/leads')\n//       });\n//   };\n// }","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/actions/index.js"],"names":["UPDATE_SEARCH","CLEAR_MESSAGE","FETCH_ERROR","fetchError","error","dispatch","type","clearMessage","updateSearch","search","clearSearch","CLEAR_SEARCH"],"mappings":"AAAA;AAEA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,QAA0D,SAA1D,C,CACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAO,UAASC,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAR;AAAqBE,MAAAA;AAArB,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASG,YAAT,GAAwB;AAC7B,SAAO,UAASF,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASO,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,SAAO,UAASJ,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,aAAP;AAAsBS,MAAAA;AAAtB,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,UAASL,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEK;AAAP,KAAD,CAAR;AACD,GAFD;AAGD,C,CAKD;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// General functions that are used throughout the app\n\nimport { UPDATE_SEARCH, CLEAR_MESSAGE, FETCH_ERROR } from './types'\n// const uuidv1 = require(\"uuid/v1\");\nexport function fetchError(error) {\n  return function(dispatch) {\n    dispatch({ type: FETCH_ERROR, error });\n  };\n}\n\nexport function clearMessage() {\n  return function(dispatch) {\n    dispatch({ type: CLEAR_MESSAGE });\n  };\n}\n\nexport function updateSearch(search) {\n  return function(dispatch) {\n    dispatch({type: UPDATE_SEARCH, search })\n  }\n}\n\nexport function clearSearch() {\n  return function(dispatch) {\n    dispatch({type: CLEAR_SEARCH})\n  }\n}\n\n\n\n\n// ! Fetch categories (Not in use)\n\n// export function thunkFetchCategories() {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_CATEGORIES });\n\n//     fetch(\"https://frozen-shore-20550.herokuapp.com/api/v1/categories\")\n//       .then(res => res.json())\n//       .then(data => {\n//         dispatch({ type: FETCH_CATEGORIES, categories: data });\n//       });\n//   };\n// }\n\n//! FETCHES ONE LEADNOTE (DONT THINK I NEED THIS ANYMORE)\n// export function thunkFetchLeadNote(user_id, lead_id) {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_LEADNOTE });\n\n//     fetch(\"https://frozen-shore-20550.herokuapp.com/leadnotes/show\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": 'application/json',\n//         \"Accept\": 'application/json'\n//       },\n//       body: JSON.stringify({\n//         user_id: user_id,\n//         lead_id: lead_id\n//       })\n//     })\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(\"leadnote\", data)\n//       // dispatch({ type: FETCH_LEADNOTE, leadnote: data});\n//       // history.push('/leads')\n//     })\n//   }\n// }\n\n// ! FETCHES ALL LEADNOTES\n\n// export function thunkFetchLeadNotes(user_id) {\n//   return function(dispatch) {\n//     dispatch({ type: START_FETCH_LEADNOTES });\n\n//     fetch(`https://frozen-shore-20550.herokuapp.com/leadnotes/${user_id}`)\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(\"leadnotes\", data)\n//       dispatch({ type: FETCH_LEADNOTES, leadnotes: data});\n//       // history.push('/leads')\n//     })\n//   }\n// }\n\n/////////////////// FETCHING LEADLIST /////////////////////////\n\n// export function thunkFetchListById(id, history) {\n//   return function(dispatch) {\n//     // dispatch({ type: START_FETCH_LISTS });\n\n//     fetch(`https://frozen-shore-20550.herokuapp.com/api/v1/lists/show/${id}`)\n//       .then(res => res.json())\n//       .then(data => {\n//         console.log(data.leads)\n//         dispatch({ type: FETCH_LIST_BY_ID, listlead: data.leads, listid: data.id});\n//         history.push('/leads')\n//       });\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}