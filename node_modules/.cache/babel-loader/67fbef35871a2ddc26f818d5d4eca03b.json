{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js\";\nimport React, { Component } from \"react\";\nimport { Table, Menu, Form, Icon, Modal, Header, Button, Dropdown, Input, Checkbox } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: []\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleLeadChange = lead => {\n      this.setState({\n        leadSelection: lead\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadSelection = _this$state.leadSelection,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      const userId = this.props.auth.id;\n      this.props.addLead(leadSelection, company, website, listId, newListName, userId); // this.props.addList(this.state.listId)\n    };\n\n    this.handleLeadClick = (lead, checked) => {\n      console.log(lead);\n      console.log(checked);\n\n      if (checked) {\n        this.setState({\n          leadsArray: [...this.state.leadsArray, lead]\n        });\n      } else {\n        const newArray = this.state.leadsArray.filter(l => l.value !== lead.value);\n        this.setState({\n          leadsArray: newArray\n        });\n      }\n    };\n\n    this.handleTest = () => {\n      console.log(\"TEST\");\n    };\n  }\n\n  componentDidMount() {\n    const array = this.props.leads[0];\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    console.log(\"state\", this.state);\n    console.log(\"list props\", this.props.lists[0]);\n    let listArray = [];\n    let lists = this.props.lists[0];\n    Object.keys(lists).forEach(function (i) {\n      listArray.push({\n        key: lists[i].id,\n        text: lists[i].name,\n        value: lists[i].id\n      });\n    }); // console.log(\"searchoptions\", searchOptions)\n\n    console.log(\"list array\", listArray);\n    const dataArray = this.props.leads[0];\n    console.log(dataArray);\n    const tableRow = dataArray.emails.map(lead => {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, lead.first_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, lead.last_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, lead.value), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, lead.position), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, dataArray.organization), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, lead.confidence), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onClick: (event, {\n          checked\n        }) => this.handleLeadClick(lead, checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Table, {\n      singleLine: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.leadsArray.length > 0 ? React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.leadsArray.length, \" leads selected\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      centered: true,\n      trigger: React.createElement(Button, {\n        onClick: this.handleLeadChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Save Leads\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, Object.keys(lists).length > 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      name: \"listId\",\n      style: styleDropdown,\n      placeholder: \"Select list...\",\n      fluid: true,\n      disabled: this.state.newListName ? true : false,\n      selection: true,\n      options: listArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), \" Add Lead to List\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Create A New List\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), \" Add Lead to List\")))))) : null, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Confidence\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Save Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, tableRow), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      floated: \"right\",\n      pagination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      as: \"a\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"chevron left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"1\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"2\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"3\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"4\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"chevron right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addList: listName => {\n      dispatch(addList(listName));\n    },\n    addLead: (leadObj, company, website, listId) => {\n      dispatch(addLead(leadObj, company, website, listId));\n    }\n  };\n}; // Connect this component to all returns for the company search\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js"],"names":["React","Component","Table","Menu","Form","Icon","Modal","Header","Button","Dropdown","Input","Checkbox","connect","addList","addLead","Navbar","uuidv1","require","styleDropdown","width","SearchResults","state","listId","leadSelection","company","website","newListName","leadsArray","handleDropdown","e","data","targetValue","value","setState","handleChange","target","targetName","name","handleLeadChange","lead","handleSubmit","userId","props","auth","id","handleLeadClick","checked","console","log","newArray","filter","l","handleTest","componentDidMount","array","leads","organization","domain","render","lists","listArray","Object","keys","forEach","i","push","key","text","dataArray","tableRow","emails","map","first_name","last_name","position","confidence","event","length","mapStateToProps","mapDispatchToProps","dispatch","listName","leadObj"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Table,\n  Menu,\n  Form,\n  Icon,\n  Modal,\n  Header,\n  Button,\n  Dropdown,\n  Input,\n  Checkbox\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: []\n  };\n\n  componentDidMount() {\n    const array = this.props.leads[0];\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleLeadChange = lead => {\n    this.setState({ leadSelection: lead });\n  };\n\n  handleSubmit = () => {\n    const { leadSelection, company, website, listId, newListName } = this.state;\n    const userId = this.props.auth.id;\n    this.props.addLead(\n      leadSelection,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n    // this.props.addList(this.state.listId)\n  };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n  handleTest = () => {\n    console.log(\"TEST\");\n  };\n\n  render() {\n    console.log(\"state\", this.state);\n    console.log(\"list props\", this.props.lists[0]);\n    let listArray = [];\n    let lists = this.props.lists[0];\n    Object.keys(lists).forEach(function(i) {\n      listArray.push({\n        key: lists[i].id,\n        text: lists[i].name,\n        value: lists[i].id\n      });\n    });\n    // console.log(\"searchoptions\", searchOptions)\n    console.log(\"list array\", listArray);\n    const dataArray = this.props.leads[0];\n    console.log(dataArray);\n    const tableRow = dataArray.emails.map(lead => {\n      return (\n        <Table.Row>\n          <Table.Cell>{lead.first_name}</Table.Cell>\n          <Table.Cell>{lead.last_name}</Table.Cell>\n          <Table.Cell>{lead.value}</Table.Cell>\n          <Table.Cell>{lead.position}</Table.Cell>\n          <Table.Cell>{dataArray.organization}</Table.Cell>\n          <Table.Cell>{lead.confidence}</Table.Cell>\n          <Table.Cell>\n            <Checkbox\n              onClick={(event, { checked }) =>\n                this.handleLeadClick(lead, checked)\n              }\n            />\n          </Table.Cell>\n          {/* <Table.Cell>\n            <Modal\n              centered\n              trigger={\n                <Button onClick={() => this.handleLeadChange(lead)}>Add</Button>\n              }\n              basic\n              size=\"small\"\n            >\n              {Object.keys(lists).length > 1 ? (\n                <div>\n                  <Modal.Header as='h2'>Select an Existing List:</Modal.Header>\n                  <Modal.Actions>\n                    <Dropdown\n                      onChange={this.handleDropdown}\n                      name=\"listId\"\n                      style={styleDropdown}\n                      placeholder=\"Select list...\"\n                      fluid\n                      selection\n                      options={listArray}\n                    />\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    />\n                    <Button\n                      onClick={this.handleSubmit}\n                      basic\n                      color=\"red\"\n                      inverted\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Button>\n                  </Modal.Actions>{\" \"}\n                </div>\n              ) : (\n                <div>\n                  <Modal.Header as='h2'>\n                    You have no existing lists. \n                    Create a new list:\n                  </Modal.Header>\n                  <Modal.Actions>\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    />\n                    <Button\n                      onClick={this.handleSubmit}\n                      basic\n                      color=\"red\"\n                      inverted\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              )}\n            </Modal>\n          </Table.Cell> */}\n        </Table.Row>\n      );\n    });\n    return (\n      <div>\n        <Navbar />\n        <Table singleLine>\n          <Table.Header>\n            {this.state.leadsArray.length > 0 ? (\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"6\">\n                  {this.state.leadsArray.length} leads selected\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <Modal\n                    centered\n                    trigger={\n                      <Button onClick={this.handleLeadChange}>\n                        Save Leads\n                      </Button>\n                    }\n                    basic\n                    size=\"small\"\n                  >\n                    {Object.keys(lists).length > 1 ? (\n                      <div>\n                        <Modal.Header as=\"h2\">\n                          Select an Existing List:\n                        </Modal.Header>\n                        <Modal.Actions>\n                          <Dropdown\n                            onChange={this.handleDropdown}\n                            name=\"listId\"\n                            style={styleDropdown}\n                            placeholder=\"Select list...\"\n                            fluid\n                            disabled={this.state.newListName ? true : false}\n                            selection\n                            options={listArray}\n                          />\n                          <Modal.Header as=\"h2\">\n                            Select an Existing List:\n                          </Modal.Header>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Modal.Header as=\"h2\">\n                          </Modal.Header>\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    ) : (\n                      <div>\n                        <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                        <Modal.Actions>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    )}\n                  </Modal>\n                </Table.HeaderCell>\n              </Table.Row>\n            ) : null}\n            <Table.Row>\n              <Table.HeaderCell>First Name</Table.HeaderCell>\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell>Position</Table.HeaderCell>\n              <Table.HeaderCell>Company</Table.HeaderCell>\n              <Table.HeaderCell>Confidence</Table.HeaderCell>\n              <Table.HeaderCell>Save Lead</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{tableRow}</Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addList: listName => {\n      dispatch(addList(listName));\n    },\n    addLead: (leadObj, company, website, listId) => {\n      dispatch(addLead(leadObj, company, website, listId));\n    }\n  };\n};\n\n// Connect this component to all returns for the company search\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchResults);\n"]},"metadata":{},"sourceType":"module"}