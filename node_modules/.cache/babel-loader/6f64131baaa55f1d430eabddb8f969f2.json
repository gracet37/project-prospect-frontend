{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Button, Pagination, Header, Modal, Form } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport { deleteList, deleteListLead, addLeadNote } from \"../actions\";\nconst statusArray = [{\n  key: \"10\",\n  text: \"Meeting booked\",\n  value: \"Meeting booked\"\n}, {\n  key: \"25\",\n  text: \"Met with decision maker\",\n  value: \"Met with decision maker\"\n}, {\n  key: \"50\",\n  text: \"Proposal sent\",\n  value: \"Proposal sent\"\n}, {\n  key: \"90\",\n  text: \"Verbal confirmation\",\n  value: \"Verbal confirmation\"\n}, {\n  key: \"100\",\n  text: \"Sale closed\",\n  value: \"Sale closed\"\n}, {\n  key: \"notfit\",\n  text: \"Not fit for business\",\n  value: \"Not fit for business\"\n}, {\n  key: \"incorrect\",\n  text: \"Incorrect contact\",\n  value: \"Incorrect contact\"\n}, {\n  key: \"contact\",\n  text: \"Contact at later date\",\n  value: \"Contact at later date\"\n}];\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      activePage: 1,\n      statusInput: \"\",\n      nextStepsInput: \"\",\n      commentsInput: \"\"\n    };\n\n    this.formattedListArray = () => {\n      // let listArray = this.props.listlead[0];\n      let listArray = this.props.listleads.leads; // let leadNotesArray = this.props.leadnotes\n      // let leadnoteArray= lead.leadnotes\n      // let lastLeadnote = leadnoteArray.slice(-1)[0]\n\n      if (listArray) {\n        // console.log(\"LISTARRAY??\", listArray)\n        let array = listArray.map(lead => {\n          // const oneLead = lead.lead\n          let last = null;\n\n          if (lead.leadnotes.length) {\n            last = lead.leadnotes[lead.leadnotes.length - 1];\n          }\n\n          console.log(\"LAST\", last);\n\n          if (lead.leadnotes.length > 0) {\n            let date = new Date(last.created_at);\n            let dateString = date.toDateString();\n            return {\n              id: lead.lead.id,\n              first_name: lead.lead.first_name,\n              last_name: lead.lead.last_name,\n              position: lead.lead.position,\n              company: lead.lead.company,\n              status: last.status,\n              next_steps: last.next_steps,\n              comments: last.comments,\n              comments_date: dateString,\n              last_date_contacted: lead.lead.contacted_date,\n              email: lead.lead.email,\n              phone_number: lead.lead.phone_number\n            };\n          } else {\n            return {\n              id: lead.lead.id,\n              first_name: lead.lead.first_name,\n              last_name: lead.lead.last_name,\n              position: lead.lead.position,\n              company: lead.lead.company,\n              status: null,\n              next_steps: null,\n              comments: null,\n              comments_date: null,\n              last_date_contacted: lead.lead.contacted_date,\n              email: lead.lead.email,\n              phone_number: lead.lead.phone_number\n            };\n          }\n        });\n        console.log(\"LISTARRAY\", listArray);\n        this.setState({\n          data: array\n        });\n      }\n    };\n\n    this.handleDeleteClick = (event, lead_id) => {\n      event.preventDefault();\n      let newArray = this.state.data.filter(data => data.id !== lead_id);\n      this.setState({\n        data: newArray\n      });\n      this.props.deleteListLead(this.props.listleads.list.id, lead_id); // debugger\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        statusInput: targetValue\n      });\n    };\n\n    this.handleAddLeadNote = leadId => {\n      console.log(leadId);\n      const _this$state2 = this.state,\n            statusInput = _this$state2.statusInput,\n            nextStepsInput = _this$state2.nextStepsInput,\n            commentsInput = _this$state2.commentsInput;\n      this.props.addLeadNote(statusInput, nextStepsInput, this.props.auth.user.id, leadId, commentsInput);\n    };\n  }\n\n  componentDidMount() {\n    this.formattedListArray();\n  }\n\n  // handleFetchClick = (id) => {\n  //   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n  // }\n  render() {\n    console.log(\"LEADLIST\", this.state);\n    const _this$state3 = this.state,\n          column = _this$state3.column,\n          data = _this$state3.data,\n          direction = _this$state3.direction,\n          activePage = _this$state3.activePage;\n    const leadnotesArray = this.props.leadnotes;\n    let dataSlice;\n\n    if (data) {\n      if (activePage === 1) {\n        dataSlice = data.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = data.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = data.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = data.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = data.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = data.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = data.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = data.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = data.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = data.slice(90, 99);\n      } else {\n        dataSlice = [];\n      } // return dataSlice\n\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      style: {\n        backgroundImage: \"url(\".concat(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\", \")\")\n      },\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\"\n      },\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"XXXXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Open Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Another METRIC\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))))), this.props.listleads.leads ? React.createElement(Grid.Row, {\n      style: {\n        margin: \"40px\",\n        minHeight: \"450px\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"first_name\" ? direction : null,\n      onClick: this.handleSort(\"first_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_name\" ? direction : null,\n      onClick: this.handleSort(\"last_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"position\" ? direction : null,\n      onClick: this.handleSort(\"position\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"company\" ? direction : null,\n      onClick: this.handleSort(\"company\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"status\" ? direction : null,\n      onClick: this.handleSort(\"status\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"next_steps\" ? direction : null,\n      onClick: this.handleSort(\"next_steps\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_date_contacted\" ? direction : null,\n      onClick: this.handleSort(\"last_date_contacted\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Last Date Contacted\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Edit Lead\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Delete Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, _.map(dataSlice, ({\n      id,\n      first_name,\n      last_name,\n      position,\n      company,\n      status,\n      next_steps,\n      last_date_contacted,\n      phone_number,\n      email,\n      comments,\n      comments_date\n    }) => React.createElement(Table.Row, {\n      key: id // onClick={() => this.handleRowClick(id)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, first_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, last_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, position), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, company), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, status), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, next_steps), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, comments_date), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        name: \"edit outline\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, first_name, \" \", last_name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), \" \", position ? position + \",\" : null, \" \", company), React.createElement(Modal.Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, phone_number ? \"Phone:\" + phone_number : null, \" \", \"Email: \", email, React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        name: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Send an email to \", first_name), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(MailForm, {\n      email: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      // fluid\n      onChange: this.handleDropdown,\n      name: \"statusInput\",\n      label: \"Status\",\n      options: statusArray,\n      placeholder: status ? status : \"Select status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"nextStepsInput\",\n      label: \"Next Steps\",\n      placeholder: next_steps ? next_steps : \"Next steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"commentsInput\",\n      control: \"textarea\",\n      rows: \"3\",\n      label: \"Notes\",\n      value: comments ? comments_date + comments : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.handleAddLeadNote(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Save\"))))), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"trash alternate outline\",\n      onClick: event => this.handleDeleteClick(event, id),\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }))))), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      boundaryRange: 0,\n      defaultActivePage: 1,\n      ellipsisItem: \"...\",\n      firstItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      lastItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      prevItem: {\n        content: React.createElement(Icon, {\n          name: \"angle left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      nextItem: {\n        content: React.createElement(Icon, {\n          name: \"angle right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      siblingRange: 1,\n      totalPages: 10,\n      onPageChange: (event, {\n        activePage\n      }) => this.handlePageChange(activePage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }))))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"You do not have any leads saved under this list.\"), React.createElement(Button, {\n      as: Link,\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Go to Search\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  deleteListLead,\n  addLeadNote\n})(Dashboard);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Button","Pagination","Header","Modal","Form","Link","connect","_","Navbar","MailForm","deleteList","deleteListLead","addLeadNote","statusArray","key","text","value","Dashboard","state","column","data","direction","activePage","statusInput","nextStepsInput","commentsInput","formattedListArray","listArray","props","listleads","leads","array","map","lead","last","leadnotes","length","console","log","date","Date","created_at","dateString","toDateString","id","first_name","last_name","position","company","status","next_steps","comments","comments_date","last_date_contacted","contacted_date","email","phone_number","setState","handleDeleteClick","event","lead_id","preventDefault","newArray","filter","list","handleSort","clickedColumn","sortBy","reverse","handlePageChange","handleChange","e","targetValue","target","targetName","name","handleDropdown","handleAddLeadNote","leadId","auth","user","componentDidMount","render","leadnotesArray","dataSlice","slice","backgroundImage","marginTop","marginLeft","margin","minHeight","content","icon","mapStateToProps","lists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Card,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  Header,\n  Modal,\n  Form\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport { deleteList, deleteListLead, addLeadNote } from \"../actions\";\n\nconst statusArray = [\n  { key: \"10\", text: \"Meeting booked\", value: \"Meeting booked\" },\n  {\n    key: \"25\",\n    text: \"Met with decision maker\",\n    value: \"Met with decision maker\"\n  },\n  { key: \"50\", text: \"Proposal sent\", value: \"Proposal sent\" },\n  { key: \"90\", text: \"Verbal confirmation\", value: \"Verbal confirmation\" },\n  { key: \"100\", text: \"Sale closed\", value: \"Sale closed\" },\n  {\n    key: \"notfit\",\n    text: \"Not fit for business\",\n    value: \"Not fit for business\"\n  },\n  { key: \"incorrect\", text: \"Incorrect contact\", value: \"Incorrect contact\" },\n  {\n    key: \"contact\",\n    text: \"Contact at later date\",\n    value: \"Contact at later date\"\n  }\n];\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    activePage: 1,\n    statusInput: \"\",\n    nextStepsInput: \"\",\n    commentsInput: \"\"\n  };\n\n  componentDidMount() {\n    this.formattedListArray();\n  }\n\n  formattedListArray = () => {\n    // let listArray = this.props.listlead[0];\n    let listArray = this.props.listleads.leads;\n    // let leadNotesArray = this.props.leadnotes\n    // let leadnoteArray= lead.leadnotes\n    // let lastLeadnote = leadnoteArray.slice(-1)[0]\n    if (listArray) {\n      // console.log(\"LISTARRAY??\", listArray)\n      let array = listArray.map(lead => {\n        // const oneLead = lead.lead\n        let last = null;\n        if (lead.leadnotes.length) {\n          last = lead.leadnotes[lead.leadnotes.length - 1];\n        }\n        console.log(\"LAST\", last);\n        if (lead.leadnotes.length > 0) {\n          let date = new Date(last.created_at);\n          let dateString = date.toDateString();\n          return {\n            id: lead.lead.id,\n            first_name: lead.lead.first_name,\n            last_name: lead.lead.last_name,\n            position: lead.lead.position,\n            company: lead.lead.company,\n            status: last.status,\n            next_steps: last.next_steps,\n            comments: last.comments,\n            comments_date: dateString,\n            last_date_contacted: lead.lead.contacted_date,\n            email: lead.lead.email,\n            phone_number: lead.lead.phone_number\n          };\n        } else {\n          return {\n            id: lead.lead.id,\n            first_name: lead.lead.first_name,\n            last_name: lead.lead.last_name,\n            position: lead.lead.position,\n            company: lead.lead.company,\n            status: null,\n            next_steps: null,\n            comments: null,\n            comments_date: null,\n            last_date_contacted: lead.lead.contacted_date,\n            email: lead.lead.email,\n            phone_number: lead.lead.phone_number\n          };\n        }\n      });\n      console.log(\"LISTARRAY\", listArray);\n      this.setState({ data: array });\n    }\n  };\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault();\n    let newArray = this.state.data.filter(data => data.id !== lead_id);\n    this.setState({ data: newArray });\n    this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n    // debugger\n  };\n\n  // handleRowClick = id => {\n  //   console.log(\"row clicked\", id);\n  // };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ statusInput: targetValue });\n  };\n\n  handleAddLeadNote = leadId => {\n    console.log(leadId);\n    const { statusInput, nextStepsInput, commentsInput } = this.state;\n    this.props.addLeadNote(\n      statusInput,\n      nextStepsInput,\n      this.props.auth.user.id,\n      leadId,\n      commentsInput\n    );\n  };\n\n  // handleFetchClick = (id) => {\n  //   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n  // }\n\n  render() {\n    console.log(\"LEADLIST\", this.state);\n    const { column, data, direction, activePage } = this.state;\n    const leadnotesArray = this.props.leadnotes;\n\n    let dataSlice;\n    if (data) {\n      if (activePage === 1) {\n        dataSlice = data.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = data.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = data.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = data.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = data.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = data.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = data.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = data.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = data.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = data.slice(90, 99);\n      } else {\n        dataSlice = [];\n      }\n      // return dataSlice\n    }\n\n    return (\n      <div>\n        <Navbar />\n        <Grid\n          style={{\n            backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/71093458_463527317706998_6857018496128122880_n.png?_nc_cat=101&_nc_oc=AQl2gDIEaIvqJ9nlneGMjfaDHtgfbFjLjkXKrF1ATz_lG8I8Qq2SYVjDCYwbysjSCwM&_nc_ht=scontent-ort2-2.xx&oh=644556da3c91d328452fcb67714c1c7d&oe=5E3A8CD8\"})`\n          }}\n          divided=\"vertically\"\n        >\n          <Grid.Row\n            style={{ marginTop: \"40px\", marginLeft: \"70px\" }}\n            columns={3}\n          >\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>XXXXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Open Leads</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Another METRIC</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n          {this.props.listleads.leads ? (\n            <Grid.Row\n              style={{ margin: \"40px\", minHeight: \"450px\" }}\n              columns={1}\n            >\n              <Grid.Column>\n                <Table sortable selectable celled fixed>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell\n                        sorted={column === \"first_name\" ? direction : null}\n                        onClick={this.handleSort(\"first_name\")}\n                      >\n                        First Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"last_name\" ? direction : null}\n                        onClick={this.handleSort(\"last_name\")}\n                      >\n                        Last Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"position\" ? direction : null}\n                        onClick={this.handleSort(\"position\")}\n                      >\n                        Position\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"company\" ? direction : null}\n                        onClick={this.handleSort(\"company\")}\n                      >\n                        Company\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"next_steps\" ? direction : null}\n                        onClick={this.handleSort(\"next_steps\")}\n                      >\n                        Next Steps\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={\n                          column === \"last_date_contacted\" ? direction : null\n                        }\n                        onClick={this.handleSort(\"last_date_contacted\")}\n                      >\n                        Last Date Contacted\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Edit Lead</Table.HeaderCell>\n                      <Table.HeaderCell>Delete Lead</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {_.map(\n                      dataSlice,\n                      ({\n                        id,\n                        first_name,\n                        last_name,\n                        position,\n                        company,\n                        status,\n                        next_steps,\n                        last_date_contacted,\n                        phone_number,\n                        email,\n                        comments,\n                        comments_date\n                      }) => (\n                        <Table.Row\n                          key={id}\n                          // onClick={() => this.handleRowClick(id)}\n                        >\n                          <Table.Cell>{first_name}</Table.Cell>\n                          <Table.Cell>{last_name}</Table.Cell>\n                          <Table.Cell>{position}</Table.Cell>\n                          <Table.Cell>{company}</Table.Cell>\n                          <Table.Cell>{status}</Table.Cell>\n                          <Table.Cell>{next_steps}</Table.Cell>\n                          <Table.Cell>{comments_date}</Table.Cell>\n                          <Table.Cell>\n                            {/* {leadnotesArray.find(lead => )} */}\n                            <Modal\n                              trigger={\n                                <Icon name={\"edit outline\"} size=\"large\" />\n                              }\n                            >\n                              <Modal.Header as=\"h2\">\n                                {first_name} {last_name} <br />{\" \"}\n                                {position ? position + \",\" : null} {company}\n                              </Modal.Header>\n                              <Modal.Header as=\"h3\">\n                                {phone_number ? \"Phone:\" + phone_number : null}{\" \"}\n                                Email: {email}\n                                {/* <Icon name={\"envelope\"}></Icon> */}\n                                <Modal\n                                  trigger={<Icon name={\"envelope\"}></Icon>}\n                                >\n                                  <Modal.Header>Send an email to {first_name}</Modal.Header>\n                                    <Modal.Content>\n                                    <MailForm email={email} />\n                                  </Modal.Content>\n                                </Modal>\n                              </Modal.Header>\n                              {/* <Modal.Header as='h3'>{position}, {company}</Modal.Header> */}\n\n                              <Modal.Content>\n                                <Form>\n                                  <Form.Group>\n                                    <Form.Select\n                                      // fluid\n                                      onChange={this.handleDropdown}\n                                      name=\"statusInput\"\n                                      label=\"Status\"\n                                      options={statusArray}\n                                      placeholder={\n                                        status ? status : \"Select status\"\n                                      }\n                                    />\n                                    {/* <Form.Header>Next Steps</Form.Header> */}\n                                    <Form.Input\n                                      onChange={this.handleChange}\n                                      name=\"nextStepsInput\"\n                                      label=\"Next Steps\"\n                                      placeholder={\n                                        next_steps ? next_steps : \"Next steps\"\n                                      }\n                                    ></Form.Input>\n                                  </Form.Group>\n                                  <Form.Input\n                                    onChange={this.handleChange}\n                                    name=\"commentsInput\"\n                                    control=\"textarea\"\n                                    rows=\"3\"\n                                    label=\"Notes\"\n                                    value={\n                                      comments ? comments_date + comments : null\n                                    }\n                                  />\n                                  <Button\n                                    onClick={() => this.handleAddLeadNote(id)}\n                                  >\n                                    Save\n                                  </Button>\n                                  {/* <Form.Description></Form.Description> */}\n                                </Form>\n                              </Modal.Content>\n                            </Modal>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Icon\n                              name={\"trash alternate outline\"}\n                              onClick={event =>\n                                this.handleDeleteClick(event, id)\n                              }\n                              size=\"large\"\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    )}\n                  </Table.Body>\n                  <Table.Footer>\n                    <Table.Row>\n                      <Table.HeaderCell colSpan=\"3\">\n                        <Pagination\n                          boundaryRange={0}\n                          defaultActivePage={1}\n                          ellipsisItem={\"...\"}\n                          firstItem={{\n                            content: <Icon name=\"angle double left\" />,\n                            icon: true\n                          }}\n                          lastItem={{\n                            content: <Icon name=\"angle double right\" />,\n                            icon: true\n                          }}\n                          prevItem={{\n                            content: <Icon name=\"angle left\" />,\n                            icon: true\n                          }}\n                          nextItem={{\n                            content: <Icon name=\"angle right\" />,\n                            icon: true\n                          }}\n                          siblingRange={1}\n                          totalPages={10}\n                          onPageChange={(event, { activePage }) =>\n                            this.handlePageChange(activePage)\n                          }\n                        />\n                        {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Footer>\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          ) : (\n            <div>\n              <Header>You do not have any leads saved under this list.</Header>\n              <Button as={Link} to=\"/search\">\n                Go to Search\n              </Button>\n            </div>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, deleteListLead, addLeadNote }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}