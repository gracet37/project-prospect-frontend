{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _bootstrap = require('./bootstrap');\n\nvar _sizePerPageOption = require('./size-per-page-option');\n\nvar _sizePerPageOption2 = _interopRequireDefault(_sizePerPageOption);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar sizePerPageDefaultClass = 'react-bs-table-sizePerPage-dropdown';\n\nvar SizePerPageDropDown = function SizePerPageDropDown(props) {\n  var open = props.open,\n      hidden = props.hidden,\n      onClick = props.onClick,\n      onBlur = props.onBlur,\n      options = props.options,\n      className = props.className,\n      variation = props.variation,\n      btnContextual = props.btnContextual,\n      optionRenderer = props.optionRenderer,\n      currSizePerPage = props.currSizePerPage,\n      onSizePerPageChange = props.onSizePerPageChange;\n  var dropDownStyle = {\n    visibility: hidden ? 'hidden' : 'visible'\n  };\n  var openClass = open ? 'open show' : '';\n  var dropdownClasses = (0, _classnames2.default)(openClass, sizePerPageDefaultClass, variation, className);\n  return _react2.default.createElement(_bootstrap.BootstrapContext.Consumer, null, function (_ref) {\n    var bootstrap4 = _ref.bootstrap4;\n    return _react2.default.createElement('span', {\n      style: dropDownStyle,\n      className: dropdownClasses\n    }, _react2.default.createElement('button', {\n      id: 'pageDropDown',\n      className: 'btn ' + btnContextual + ' dropdown-toggle',\n      'data-toggle': 'dropdown',\n      'aria-expanded': open,\n      onClick: onClick,\n      onBlur: onBlur\n    }, currSizePerPage, ' ', bootstrap4 ? null : _react2.default.createElement('span', null, _react2.default.createElement('span', {\n      className: 'caret'\n    }))), _react2.default.createElement('ul', {\n      className: 'dropdown-menu ' + openClass,\n      role: 'menu',\n      'aria-labelledby': 'pageDropDown'\n    }, options.map(function (option) {\n      if (optionRenderer) {\n        return optionRenderer(_extends({}, option, {\n          onSizePerPageChange: onSizePerPageChange\n        }));\n      }\n\n      return _react2.default.createElement(_sizePerPageOption2.default, _extends({}, option, {\n        key: option.text,\n        bootstrap4: bootstrap4,\n        onSizePerPageChange: onSizePerPageChange\n      }));\n    })));\n  });\n};\n\nSizePerPageDropDown.propTypes = {\n  currSizePerPage: _propTypes2.default.string.isRequired,\n  options: _propTypes2.default.array.isRequired,\n  onClick: _propTypes2.default.func.isRequired,\n  onBlur: _propTypes2.default.func.isRequired,\n  onSizePerPageChange: _propTypes2.default.func.isRequired,\n  open: _propTypes2.default.bool,\n  hidden: _propTypes2.default.bool,\n  btnContextual: _propTypes2.default.string,\n  variation: _propTypes2.default.oneOf(['dropdown', 'dropup']),\n  className: _propTypes2.default.string,\n  optionRenderer: _propTypes2.default.func\n};\nSizePerPageDropDown.defaultProps = {\n  open: false,\n  hidden: false,\n  btnContextual: 'btn-default btn-secondary',\n  variation: 'dropdown',\n  className: '',\n  optionRenderer: null\n};\nexports.default = SizePerPageDropDown;","map":null,"metadata":{},"sourceType":"script"}