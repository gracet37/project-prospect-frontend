{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/UserProfile.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Header, Image, Segment, Container, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { currentUser } from '../actions';\nimport { bindActionCreators } from \"redux\";\nimport * as actions from '../actions';\nconnect(store => {\n  return {\n    auth: store.auth\n  };\n}, dispatch => {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n});\nexport default class UserProfile extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      loading: false,\n      success: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.actions.loadUser(() => {\n      this.setState({\n        loading: true\n      });\n    }, () => {\n      this.setState({\n        success: true,\n        loading: false\n      });\n    }, () => {\n      this.setState({\n        success: false,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    let condRender = null;\n\n    if (this.state.loading) {\n      condRender = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" LOADING \");\n    } else if (this.state.success == true) {\n      condRender = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" \", React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Header, {\n        style: {\n          position: \"fixed\",\n          top: \"80px\",\n          left: \"50px\"\n        },\n        as: \"h3\",\n        content: \"Text Container\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        doubling: true,\n        stackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Image, {\n        circular: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" \")))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 3,\n        doubling: true,\n        stackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Content\")), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Content\")), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Content\")))))));\n    } else if (!this.state.success) {\n      condRender = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" ERROR \");\n    }\n\n    return condRender;\n  }\n\n} //   }\n//   render() {\n//     console.log(this.props.auth)\n//     // const {img_url, first_name, last_name, email} = this.props.auth.user\n//     const isLoading = this.state.isLoading\n//     if (isLoading) {\n//       return (\n//         <div>Loading...</div>\n//         )\n//       } else {\n//         console.log(this.props.auth.user.img_url)\n//     return (\n//       <div>\n//         <Navbar />\n//         <Header\n//           style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n//           as=\"h3\"\n//           content=\"Text Container\"\n//           textAlign=\"center\"\n//         >\n//           <Grid columns={2}>\n//             <Grid.Column>\n//               <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>\n//                     <Image circular  />\n//                   </Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Header> </Header>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Grid columns={3} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//           </Grid>\n//         </Header>\n//       </div>\n//     );\n//     }\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     auth: state.auth\n//   };\n// };","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/UserProfile.js"],"names":["React","Component","Navbar","Header","Image","Segment","Container","Grid","connect","withRouter","currentUser","bindActionCreators","actions","store","auth","dispatch","UserProfile","constructor","props","state","loading","success","componentWillMount","loadUser","setState","render","condRender","position","top","left"],"mappings":"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AC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAJF,EAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAPF,CADF,CAbF,CANF,CADW,CAAb;AAmCF,KApCM,MAoCA,IAAI,CAAC,KAAKV,KAAL,CAAWE,OAAhB,EAAyB;AAC7BK,MAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAb;AACF;;AAEL,WACCA,UADD;AAGG;;AA9D+C,C,CAmEnD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Header, Image, Segment, Container, Grid} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {currentUser} from '../actions'\nimport { bindActionCreators } from \"redux\";\nimport * as actions from '../actions';\n\nconnect((store) => {\n\treturn {\n\t\tauth: store.auth,\n\t};\n},\n(dispatch) => {\n\treturn {\n\t\tactions: bindActionCreators(actions, dispatch)\n\t}\n})\n\nexport default class UserProfile extends Component {\nconstructor(props) {\n  super() \n  this.state = {\n    loading: false, \n    success: null\n  }\n}\n\n\n  componentWillMount() {\n    this.props.actions.loadUser(() => {this.setState({loading: true})}, () => {this.setState({success: true, loading: false})}, () => {this.setState({success: false, loading: false})});\n  }\n\n  render() {\n    \tlet condRender = null;\n    \n    \tif (this.state.loading) {\n      \t\tcondRender = <div> LOADING </div>;\n    \t} else if (this.state.success == true) {\n      \t\tcondRender = <div> <Navbar />\n          <Header\n            style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n            as=\"h3\"\n            content=\"Text Container\"\n            textAlign=\"center\"\n          >\n            <Grid columns={2}>\n              <Grid.Column>\n                <Grid columns={2} doubling stackable>\n                  <Grid.Column>\n                    <Segment>\n                      <Image circular  />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Header> </Header>\n                  </Grid.Column>\n                </Grid>\n              </Grid.Column>\n              <Grid.Column>\n                <Grid columns={3} doubling stackable>\n                  <Grid.Column>\n                    <Segment>Content</Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment>Content</Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment>Content</Segment>\n                  </Grid.Column>\n                </Grid>\n              </Grid.Column>\n            </Grid>\n          </Header></div>;\n    \t} else if (!this.state.success) {\n      \t\tcondRender = <div> ERROR </div>;\n    \t}\n    \n\treturn (\n\t\tcondRender\n\t)\n   }\n}\n\n\n\n//   }\n  \n//   render() {\n//     console.log(this.props.auth)\n//     // const {img_url, first_name, last_name, email} = this.props.auth.user\n//     const isLoading = this.state.isLoading\n//     if (isLoading) {\n//       return (\n//         <div>Loading...</div>\n//         )\n//       } else {\n//         console.log(this.props.auth.user.img_url)\n//     return (\n//       <div>\n//         <Navbar />\n//         <Header\n//           style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n//           as=\"h3\"\n//           content=\"Text Container\"\n//           textAlign=\"center\"\n//         >\n//           <Grid columns={2}>\n//             <Grid.Column>\n//               <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>\n//                     <Image circular  />\n//                   </Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Header> </Header>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Grid columns={3} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//           </Grid>\n//         </Header>\n//       </div>\n//     );\n//     }\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     auth: state.auth\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}