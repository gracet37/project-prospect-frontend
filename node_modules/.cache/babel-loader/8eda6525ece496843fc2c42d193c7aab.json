{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Table, Icon, Button, Pagination, Header, Modal, Form, Search, Segment, Label, Popup, Sticky, Visibility, Dropdown } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport { deleteList, deleteListLead, addLeadNote, updateSearch, sortLists, sortLeadLists } from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport FilterLeads from \"./FilterLeads\";\nimport { GridList } from \"@material-ui/core\";\nconst filterOptions = [{\n  key: \"name\",\n  text: \"First Name\",\n  value: \"first_name\"\n}, {\n  key: \"last_name\",\n  text: \"Last Name\",\n  value: \"last_name\"\n}, {\n  key: \"position\",\n  text: \"Position\",\n  value: \"position\"\n}];\nconst styleMetrics = {\n  borderWidth: \"2px\",\n  // marginRight: '30px',\n  borderRadius: \"10px\",\n  borderColor: \"#CECFD0\",\n  borderStyle: \"solid\",\n  margin: \"20px\",\n  padding: \"20px\",\n  // width: \"10px\",\n  height: \"150px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.68)\" // padding: \"20px\"\n\n};\nconst styleImage = {\n  position: \"relative\",\n  top: \"-40px\",\n  opacity: 0.8\n};\nconst styleButton = {\n  borderRadius: \"30px\",\n  color: \"white\",\n  backgroundColor: \"#6200EE\",\n  padding: \"14px\",\n  paddingRight: \"20px\",\n  paddingLeft: \"20px\"\n};\nconst statusArray = [{\n  key: \"10\",\n  text: \"Meeting booked\",\n  value: \"Meeting booked\"\n}, {\n  key: \"25\",\n  text: \"Met with decision maker\",\n  value: \"Met with decision maker\"\n}, {\n  key: \"50\",\n  text: \"Proposal sent\",\n  value: \"Proposal sent\"\n}, {\n  key: \"90\",\n  text: \"Verbal confirmation\",\n  value: \"Verbal confirmation\"\n}, {\n  key: \"100\",\n  text: \"Sale closed\",\n  value: \"Sale closed\"\n}, {\n  key: \"notfit\",\n  text: \"Not fit for business\",\n  value: \"Not fit for business\"\n}, {\n  key: \"incorrect\",\n  text: \"Incorrect contact\",\n  value: \"Incorrect contact\"\n}, {\n  key: \"contact\",\n  text: \"Contact at later date\",\n  value: \"Contact at later date\"\n}]; // ! Search bar\n\nconst resultRenderer = ({\n  first_name\n}) => React.createElement(Label, {\n  content: first_name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  position: PropTypes.string\n};\n\nclass LeadList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      activePage: 1,\n      statusInput: \"\",\n      nextStepsInput: \"\",\n      commentsInput: \"\",\n      selectedLead: {},\n      // totalLeadCount: 0,\n      // totalMeetingsBooked: 0,\n      // totalNotContacted: 0,\n      filter: \"\",\n      searchSelection: \"\",\n      showModal: false,\n      selectedLeadNotes: {},\n      dateString: \"\"\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleDeleteClick = (event, lead_id) => {\n      event.preventDefault(); // let newArray = this.state.data.filter(data => data.id !== lead_id);\n      // this.setState({ data: newArray });\n\n      this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      console.log(this.state);\n      console.log(clickedColumn);\n      const _this$state = this.state,\n            column = _this$state.column,\n            direction = _this$state.direction;\n      const dataArray = this.props.listleads.leads;\n\n      const dataSorted = _.sortBy(dataArray, [clickedColumn]);\n\n      console.log(dataSorted);\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          // data: _.sortBy(dataArray, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        this.props.sortLeadLists(_.sortBy(dataArray, [clickedColumn]));\n        return;\n      }\n\n      this.setState({\n        // data: dataArray.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n      this.props.sortLeadLists(dataArray.reverse());\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      console.log(e);\n      const targetValue = data.value;\n      this.setState({\n        statusInput: targetValue\n      });\n    };\n\n    this.handleSearchDropdown = (e, data) => {\n      console.log(e);\n      const targetValue = data.value;\n      this.setState({\n        searchSelection: targetValue\n      });\n    };\n\n    this.handleAddLeadNote = leadId => {\n      // debugger;\n      this.closeModal();\n      const _this$state2 = this.state,\n            statusInput = _this$state2.statusInput,\n            nextStepsInput = _this$state2.nextStepsInput,\n            commentsInput = _this$state2.commentsInput;\n      this.props.addLeadNote(statusInput, nextStepsInput, this.props.auth.user.id, leadId, commentsInput);\n    };\n\n    this.handleFilterChange = (event, value) => {\n      this.props.updateSearch(value);\n    };\n  }\n\n  renderLeadCount() {\n    if (this.props.listleads) {\n      let totalLeads = 0;\n      totalLeads = this.props.listleads.leads.length;\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Total Leads\"), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, totalLeads), React.createElement(Image, {\n        style: styleImage,\n        size: \"small\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Meetings Booked\"), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, meetingsBookedCount), React.createElement(Image, {\n        size: \"small\",\n        floated: \"right\",\n        style: styleImage,\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderNotContacted() {\n    let notContacted = 0;\n\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Not Yet Contacted\"), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, notContacted), React.createElement(Image, {\n        size: \"small\",\n        floated: \"right\",\n        style: styleImage,\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderTableBody() {\n    // Set original list array to the full array in store\n    const searchSelection = this.state.searchSelection;\n    let listArr = this.props.listleads.leads;\n\n    if (this.props.search === \"\") {\n      listArr = this.props.listleads.leads;\n    } else {\n      listArr = this.props.listleads.leads.filter(lead => {\n        if (searchSelection === \"first_name\") {\n          return lead.lead.first_name.toUpperCase().includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"last_name\") {\n          return lead.lead.last_name.toUpperCase().includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"position\") {\n          return lead.lead.position.toUpperCase().includes(this.props.search.toUpperCase());\n        }\n      });\n    }\n\n    return React.createElement(Table.Body, {\n      onScroll: () => console.log(\"scroll\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, _.map(listArr, ({\n      lead,\n      leadnotes\n    }) => {\n      let last = null;\n      let dateString;\n\n      if (leadnotes.length) {\n        last = leadnotes[leadnotes.length - 1];\n      }\n\n      if (last) {\n        dateString = new Date(last.created_at).toDateString();\n      }\n\n      return React.createElement(Table.Row, {\n        textAlign: \"center\",\n        key: lead.id // onClick={() => this.handleRowClick(id)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, lead.first_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, lead.last_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, lead.position), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, lead.company), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, last ? last.status : null), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, last ? last.next_steps : null), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, last ? dateString : null), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        onClick: () => this.setState({\n          showModal: true,\n          selectedLead: lead,\n          selectedLeadNotes: last,\n          dateString: dateString\n        }),\n        name: \"edit outline\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      })), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"trash alternate outline\",\n        onClick: event => this.handleDeleteClick(event, lead.id),\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      })));\n    }));\n  }\n\n  renderModal() {\n    const _this$state3 = this.state,\n          selectedLead = _this$state3.selectedLead,\n          selectedLeadNotes = _this$state3.selectedLeadNotes,\n          dateString = _this$state3.dateString;\n    const lead = selectedLead;\n    const last = selectedLeadNotes; // const dateString = dateString;\n\n    return React.createElement(Modal, {\n      closeIcon: true,\n      onClose: this.closeModal,\n      open: this.state.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, selectedLead.first_name + \" \" + selectedLead.last_name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), \" \", lead.position ? lead.position + \",\" : null, \" \", lead.company), React.createElement(Modal.Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Email: \", lead.email, React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        size: \"large\",\n        style: {\n          color: \"#03DAC6\",\n          float: 'right'\n        },\n        name: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Send an email to \", lead.first_name), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(MailForm, {\n      email: lead.email,\n      myEmail: this.props.auth.user.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      // fluid\n      onChange: this.handleDropdown,\n      name: \"statusInput\",\n      label: \"Status\",\n      options: statusArray,\n      placeholder: last ? last.status : \"Select status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"nextStepsInput\",\n      label: \"Next Steps\",\n      placeholder: last ? last.next_steps : \"Next steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    })), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"commentsInput\",\n      control: \"textarea\",\n      rows: \"3\",\n      label: \"Notes\",\n      placeholder: last ? dateString + last.comments : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        borderRadius: \"50px\",\n        backgroundColor: \"#03DAC6\",\n        color: \"white\"\n      },\n      onClick: () => this.handleAddLeadNote(lead.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"Save\"))));\n  } // ! /////////////////////////////////////////////////////////// RENDER START ///////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    const _this$state4 = this.state,\n          column = _this$state4.column,\n          data = _this$state4.data,\n          direction = _this$state4.direction,\n          activePage = _this$state4.activePage,\n          filter = _this$state4.filter,\n          open = _this$state4.open,\n          closeOnEscape = _this$state4.closeOnEscape,\n          closeOnDimmerClick = _this$state4.closeOnDimmerClick;\n    const leadnotesArray = this.props.leadnotes;\n    console.log(this.state); // console.log(this.state);\n    // let renderData;\n    // let dataSlice;\n    // if (filter) {\n    //   renderData = this.filteredLeads();\n    // } else {\n    //   renderData = data;\n    // }\n    // console.log(renderData)\n    // if (renderData) {\n    //   renderData.slice((activePage * 10) - 10, (activePage * 10) - 1)\n    //   if (activePage === 1) {\n    //     dataSlice = renderData.slice(0, 9);\n    //   } else if (activePage === 2) {\n    //     dataSlice = renderData.slice(10, 19);\n    //   } else if (activePage === 3) {\n    //     dataSlice = renderData.slice(20, 29);\n    //   } else if (activePage === 4) {\n    //     dataSlice = renderData.slice(30, 39);\n    //   } else if (activePage === 5) {\n    //     dataSlice = renderData.slice(40, 49);\n    //   } else if (activePage === 6) {\n    //     dataSlice = renderData.slice(50, 59);\n    //   } else if (activePage === 7) {\n    //     dataSlice = renderData.slice(60, 69);\n    //   } else if (activePage === 8) {\n    //     dataSlice = renderData.slice(70, 79);\n    //   } else if (activePage === 9) {\n    //     dataSlice = renderData.slice(80, 89);\n    //   } else if (activePage === 10) {\n    //     dataSlice = renderData.slice(90, 99);\n    //   } else {\n    //     dataSlice = [];\n    //   }\n    //   // return dataSlice\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        backgroundImage: \"url(\".concat(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\", \")\"),\n        minHeight: \"1000px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"HI\"))), React.createElement(Grid.Row, {\n      columns: 3,\n      style: {// top: \"70px\",\n        // margin: \"10px\",\n        // marginTop: '10px',\n        // paddingRight: \"120px\",\n        // paddingLeft: \"120px\",\n        // // marginBottom: \"10px\",\n        // // position: \"fixed\",\n        // textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, this.renderLeadCount(), this.renderMeetingsBooked(), this.renderNotContacted()), React.createElement(Grid.Row, {\n      columns: 1,\n      style: {\n        margin: \"1px\",\n        // position: \"fixed\",\n        top: \"50px\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: \"/dashboard\",\n      style: styleButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow alternate circle left outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }), \" Back to Dashboard\"))), this.props.listleads.leads.length ? React.createElement(Grid.Row, {\n      style: {\n        // margin: \"20px\",\n        // marginRight: \"60px\",\n        // marginLeft: \"60px\",\n        // minHeight: \"450px\"\n        // margin: \"20px\",\n        // marginRight: \"60px\",\n        // marginLeft: \"60px\"\n        // position: 'absolute',\n        // top: '430px',\n        // marginLeft: \"150px\",\n        // marginRight: \"150px\"\n        width: \"400px\",\n        margin: \"60px\",\n        height: \"500px\",\n        // marginTop: '20px',\n        display: \"inline-block\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"Search leads by\", \" \", React.createElement(Dropdown, {\n      inline: true,\n      onChange: this.handleSearchDropdown,\n      name: \"searchSelection\",\n      options: filterOptions,\n      defaultValue: filterOptions[0].text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    })), React.createElement(Search // style={{ margin: \"15px\", position: 'fixed', top: 0 }}\n    , {\n      onSearchChange: _.debounce((event, {\n        value\n      }) => this.handleFilterChange(event, value), 300),\n      noResultsMessage: \"No results found\",\n      showNoResults: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }))), React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      style: {\n        position: \"sticky\"\n      },\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"first_name\" ? direction : null,\n      onClick: this.handleSort(\"first_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_name\" ? direction : null,\n      onClick: this.handleSort(\"last_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"position\" ? direction : null,\n      onClick: this.handleSort(\"position\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"company\" ? direction : null,\n      onClick: this.handleSort(\"company\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"status\" ? direction : null,\n      onClick: this.handleSort(\"status\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"next_steps\" ? direction : null,\n      onClick: this.handleSort(\"next_steps\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_date_contacted\" ? direction : null,\n      onClick: this.handleSort(\"last_date_contacted\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, \"Last Date Contacted\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"Edit Lead\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, \"Delete Lead\"))), this.renderModal(), this.renderTableBody()))) : React.createElement(Grid.Row, {\n      style: {\n        margin: \"20px\",\n        position: \"fixed\",\n        top: \"400px\",\n        display: \"inline-block\",\n        left: \"-30px\"\n      },\n      column: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, \"Oops! You do not have any leads saved under this list.\"), React.createElement(Button, {\n      as: Link,\n      to: \"/\",\n      style: {\n        borderRadius: \"30px\",\n        color: \"#43425D\",\n        backgroundColor: \"#FFF176\",\n        padding: \"14px\",\n        paddingRight: \"20px\",\n        paddingLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow alternate circle left outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }), \" Search For Leads\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes,\n    search: state.search\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  deleteListLead,\n  addLeadNote,\n  updateSearch,\n  sortLists,\n  sortLeadLists\n})(LeadList); // handleFetchClick = (id) => {\n//   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n// }\n// countTotalLeads = () => {\n//   if (this.props.listleads) {\n//     let totalLeads;\n//     // console.log(this.props.lists);\n//     totalLeads = this.props.listleads.leads.length;\n//     this.setState({ totalLeadCount: totalLeads });\n//   } else {\n//     return null;\n//   }\n// };\n// countMeetingsBooked = () => {\n//   let meetingsBookedCount = 0;\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       lead.leadnotes.forEach(leadnote => {\n//         if (leadnote.status === \"Meeting booked\") {\n//           meetingsBookedCount += 1;\n//         }\n//       });\n//     });\n//     this.setState({ totalMeetingsBooked: meetingsBookedCount });\n//   } else {\n//     return null;\n//   }\n// };\n// countNotContacted = () => {\n//   let notContacted = 0;\n//   // let testArray = []\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       if (lead.leadnotes.length < 1) {\n//         notContacted += 1;\n//       }\n//     });\n//     this.setState({ totalNotContacted: notContacted });\n//   } else {\n//     return null;\n//   }\n// };\n// id,\n// first_name,\n// last_name,\n// position,\n// company,\n// status,\n// next_steps,\n// last_date_contacted,\n// phone_number,\n// email,\n// comments,\n// comments_date\n\n{\n  /* <Table.Footer>\n                    {data.length > 10 ? (\n                      <Table.Row>\n                        <Table.HeaderCell colSpan=\"3\">\n                          <Pagination\n                            boundaryRange={0}\n                            defaultActivePage={1}\n                            ellipsisItem={\"...\"}\n                            firstItem={{\n                              content: <Icon name=\"angle double left\" />,\n                              icon: true\n                            }}\n                            lastItem={{\n                              content: <Icon name=\"angle double right\" />,\n                              icon: true\n                            }}\n                            prevItem={{\n                              content: <Icon name=\"angle left\" />,\n                              icon: true\n                            }}\n                            nextItem={{\n                              content: <Icon name=\"angle right\" />,\n                              icon: true\n                            }}\n                            siblingRange={1}\n                            totalPages={10}\n                            onPageChange={(event, { activePage }) =>\n                              this.handlePageChange(activePage)\n                            }\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    ) : null}\n                  </Table.Footer> */\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Table","Icon","Button","Pagination","Header","Modal","Form","Search","Segment","Label","Popup","Sticky","Visibility","Dropdown","Link","connect","_","Navbar","MailForm","deleteList","deleteListLead","addLeadNote","updateSearch","sortLists","sortLeadLists","PropTypes","FilterLeads","GridList","filterOptions","key","text","value","styleMetrics","borderWidth","borderRadius","borderColor","borderStyle","margin","padding","height","boxShadow","styleImage","position","top","opacity","styleButton","color","backgroundColor","paddingRight","paddingLeft","statusArray","resultRenderer","first_name","propTypes","string","last_name","LeadList","state","column","data","direction","activePage","statusInput","nextStepsInput","commentsInput","selectedLead","filter","searchSelection","showModal","selectedLeadNotes","dateString","closeModal","setState","handleDeleteClick","event","lead_id","preventDefault","props","listleads","list","id","handleSort","clickedColumn","console","log","dataArray","leads","dataSorted","sortBy","reverse","handlePageChange","handleChange","e","targetValue","target","targetName","name","handleDropdown","handleSearchDropdown","handleAddLeadNote","leadId","auth","user","handleFilterChange","renderLeadCount","totalLeads","length","renderMeetingsBooked","meetingsBookedCount","forEach","lead","leadnotes","leadnote","status","renderNotContacted","notContacted","renderTableBody","listArr","search","toUpperCase","includes","map","last","Date","created_at","toDateString","company","next_steps","renderModal","email","float","comments","render","open","closeOnEscape","closeOnDimmerClick","leadnotesArray","backgroundImage","minHeight","display","width","debounce","left","mapStateToProps","lists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  Header,\n  Modal,\n  Form,\n  Search,\n  Segment,\n  Label,\n  Popup,\n  Sticky,\n  Visibility,\n  Dropdown\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport {\n  deleteList,\n  deleteListLead,\n  addLeadNote,\n  updateSearch,\n  sortLists,\n  sortLeadLists\n} from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport FilterLeads from \"./FilterLeads\";\nimport { GridList } from \"@material-ui/core\";\n\nconst filterOptions = [\n  {\n    key: \"name\",\n    text: \"First Name\",\n    value: \"first_name\"\n  },\n  {\n    key: \"last_name\",\n    text: \"Last Name\",\n    value: \"last_name\"\n  },\n  {\n    key: \"position\",\n    text: \"Position\",\n    value: \"position\"\n  }\n];\n\nconst styleMetrics = {\n  borderWidth: \"2px\",\n  // marginRight: '30px',\n  borderRadius: \"10px\",\n  borderColor: \"#CECFD0\",\n  borderStyle: \"solid\",\n  margin: \"20px\",\n  padding: \"20px\",\n  // width: \"10px\",\n  height: \"150px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.68)\"\n  // padding: \"20px\"\n};\n\nconst styleImage = {\n  position: \"relative\",\n  top: \"-40px\",\n  opacity: 0.8\n};\n\nconst styleButton = {\n  borderRadius: \"30px\",\n  color: \"white\",\n  backgroundColor: \"#6200EE\",\n  padding: \"14px\",\n  paddingRight: \"20px\",\n  paddingLeft: \"20px\"\n};\n\nconst statusArray = [\n  { key: \"10\", text: \"Meeting booked\", value: \"Meeting booked\" },\n  {\n    key: \"25\",\n    text: \"Met with decision maker\",\n    value: \"Met with decision maker\"\n  },\n  { key: \"50\", text: \"Proposal sent\", value: \"Proposal sent\" },\n  { key: \"90\", text: \"Verbal confirmation\", value: \"Verbal confirmation\" },\n  { key: \"100\", text: \"Sale closed\", value: \"Sale closed\" },\n  {\n    key: \"notfit\",\n    text: \"Not fit for business\",\n    value: \"Not fit for business\"\n  },\n  { key: \"incorrect\", text: \"Incorrect contact\", value: \"Incorrect contact\" },\n  {\n    key: \"contact\",\n    text: \"Contact at later date\",\n    value: \"Contact at later date\"\n  }\n];\n\n// ! Search bar\n\nconst resultRenderer = ({ first_name }) => <Label content={first_name} />;\n\nresultRenderer.propTypes = {\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  position: PropTypes.string\n};\n\nclass LeadList extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    activePage: 1,\n    statusInput: \"\",\n    nextStepsInput: \"\",\n    commentsInput: \"\",\n    selectedLead: {},\n    // totalLeadCount: 0,\n    // totalMeetingsBooked: 0,\n    // totalNotContacted: 0,\n    filter: \"\",\n    searchSelection: \"\",\n    showModal: false,\n    selectedLeadNotes: {},\n    dateString: \"\"\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  // ! ////////////////////////////////////// CLASS COMPONENT FUNCTIONS ////////////////////////////////////////////////////////////\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault();\n    // let newArray = this.state.data.filter(data => data.id !== lead_id);\n    // this.setState({ data: newArray });\n    this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n  };\n\n  handleSort = clickedColumn => () => {\n    console.log(this.state)\n    console.log(clickedColumn)\n    const { column, direction } = this.state;\n    const dataArray = this.props.listleads.leads;\n\n    const dataSorted = _.sortBy(dataArray, [clickedColumn])\n    console.log(dataSorted)\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        // data: _.sortBy(dataArray, [clickedColumn]),\n        direction: \"ascending\"\n      });\n      this.props.sortLeadLists(_.sortBy(dataArray, [clickedColumn]))\n      return;\n    }\n\n    this.setState({\n      // data: dataArray.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    })\n    this.props.sortLeadLists(dataArray.reverse())\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleDropdown = (e, data) => {\n    console.log(e);\n    const targetValue = data.value;\n    this.setState({ statusInput: targetValue });\n  };\n\n  handleSearchDropdown = (e, data) => {\n    console.log(e);\n    const targetValue = data.value;\n    this.setState({ searchSelection: targetValue });\n  };\n\n  handleAddLeadNote = leadId => {\n    // debugger;\n    this.closeModal();\n    const { statusInput, nextStepsInput, commentsInput } = this.state;\n    this.props.addLeadNote(\n      statusInput,\n      nextStepsInput,\n      this.props.auth.user.id,\n      leadId,\n      commentsInput\n    );\n  };\n\n  // ? Search Bar code\n\n  handleFilterChange = (event, value) => {\n    this.props.updateSearch(value);\n  };\n\n  renderLeadCount() {\n    if (this.props.listleads) {\n      let totalLeads = 0;\n      totalLeads = this.props.listleads.leads.length;\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h2\">Total Leads</Header>\n          <Header as=\"h2\">{totalLeads}</Header>\n          <Image\n            style={styleImage}\n            size=\"small\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h2\">Meetings Booked</Header>\n          <Header as=\"h2\">{meetingsBookedCount}</Header>\n          <Image\n            size=\"small\"\n            floated=\"right\"\n            style={styleImage}\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderNotContacted() {\n    let notContacted = 0;\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h2\">Not Yet Contacted</Header>\n          <Header as=\"h2\">{notContacted}</Header>\n          <Image\n            size=\"small\"\n            floated=\"right\"\n            style={styleImage}\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderTableBody() {\n    // Set original list array to the full array in store\n    const searchSelection = this.state.searchSelection;\n    let listArr = this.props.listleads.leads;\n    if (this.props.search === \"\") {\n      listArr = this.props.listleads.leads;\n    } else {\n      listArr = this.props.listleads.leads.filter(lead => {\n        if (searchSelection === \"first_name\") {\n          return lead.lead.first_name\n            .toUpperCase()\n            .includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"last_name\") {\n          return lead.lead.last_name\n            .toUpperCase()\n            .includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"position\") {\n          return lead.lead.position\n            .toUpperCase()\n            .includes(this.props.search.toUpperCase());\n        }\n      });\n    }\n\n    return (\n      <Table.Body onScroll={() => console.log(\"scroll\")}>\n        {_.map(listArr, ({ lead, leadnotes }) => {\n          let last = null;\n          let dateString;\n          if (leadnotes.length) {\n            last = leadnotes[leadnotes.length - 1];\n          }\n          if (last) {\n            dateString = new Date(last.created_at).toDateString();\n          }\n          return (\n            <Table.Row\n              textAlign=\"center\"\n              key={lead.id}\n              // onClick={() => this.handleRowClick(id)}\n            >\n              <Table.Cell>{lead.first_name}</Table.Cell>\n              <Table.Cell>{lead.last_name}</Table.Cell>\n              <Table.Cell>{lead.position}</Table.Cell>\n              <Table.Cell>{lead.company}</Table.Cell>\n              <Table.Cell>{last ? last.status : null}</Table.Cell>\n              <Table.Cell>{last ? last.next_steps : null}</Table.Cell>\n              <Table.Cell>{last ? dateString : null}</Table.Cell>\n              <Table.Cell>\n                {\" \"}\n                <Icon\n                  onClick={() =>\n                    this.setState({ showModal: true, selectedLead: lead, selectedLeadNotes: last, dateString: dateString})\n                  }\n                  name={\"edit outline\"}\n                  size=\"large\"\n                />\n              </Table.Cell>\n              <Table.Cell>\n                <Icon\n                  name={\"trash alternate outline\"}\n                  onClick={event => this.handleDeleteClick(event, lead.id)}\n                  size=\"large\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    );\n  }\n  renderModal() {\n    const {selectedLead, selectedLeadNotes, dateString} = this.state\n    const lead = selectedLead;\n    const last = selectedLeadNotes;\n    // const dateString = dateString;\n    return (\n      <Modal closeIcon onClose={this.closeModal} open={this.state.showModal}>\n        <Modal.Header as=\"h1\">\n          {selectedLead.first_name +\n            \" \" +\n            selectedLead.last_name}{\" \"}\n          <br /> {lead.position ? lead.position + \",\" : null} {lead.company}\n        </Modal.Header>\n        <Modal.Header as=\"h3\">\n          Email: {lead.email}\n          {/* <Icon name={\"envelope\"}></Icon> */}\n          <Modal\n            trigger={\n              <Icon size='large' style={{ color: \"#03DAC6\", float: 'right' }} name={\"envelope\"}></Icon>\n            }\n          >\n            <Modal.Header>Send an email to {lead.first_name}</Modal.Header>\n            <Modal.Content>\n              <MailForm\n                email={lead.email}\n                myEmail={this.props.auth.user.email}\n              />\n            </Modal.Content>\n          </Modal>\n        </Modal.Header>\n        {/* <Modal.Header as='h3'>{position}, {company}</Modal.Header> */}\n\n        <Modal.Content>\n          <Form>\n            <Form.Group>\n              <Form.Select\n                // fluid\n                onChange={this.handleDropdown}\n                name=\"statusInput\"\n                label=\"Status\"\n                options={statusArray}\n                placeholder={last ? last.status : \"Select status\"}\n              />\n              {/* <Form.Header>Next Steps</Form.Header> */}\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"nextStepsInput\"\n                label=\"Next Steps\"\n                placeholder={last ? last.next_steps : \"Next steps\"}\n              ></Form.Input>\n            </Form.Group>\n            <Form.Input\n              onChange={this.handleChange}\n              name=\"commentsInput\"\n              control=\"textarea\"\n              rows=\"3\"\n              label=\"Notes\"\n              placeholder={last ? dateString + last.comments : null}\n            />\n            <Button\n              style={{\n                borderRadius: \"50px\",\n                backgroundColor: \"#03DAC6\",\n                color: \"white\"\n              }}\n              onClick={() => this.handleAddLeadNote(lead.id)}\n            >\n              Save\n            </Button>\n            {/* <Form.Description></Form.Description> */}\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n  // ! /////////////////////////////////////////////////////////// RENDER START ///////////////////////////////////////////////////////////////////////////////\n\n  render() {\n    const {\n      column,\n      data,\n      direction,\n      activePage,\n      filter,\n      open,\n      closeOnEscape,\n      closeOnDimmerClick\n    } = this.state;\n    const leadnotesArray = this.props.leadnotes;\n    console.log(this.state);\n    // console.log(this.state);\n    // let renderData;\n    // let dataSlice;\n    // if (filter) {\n    //   renderData = this.filteredLeads();\n    // } else {\n    //   renderData = data;\n    // }\n\n    // console.log(renderData)\n    // if (renderData) {\n    //   renderData.slice((activePage * 10) - 10, (activePage * 10) - 1)\n    //   if (activePage === 1) {\n    //     dataSlice = renderData.slice(0, 9);\n    //   } else if (activePage === 2) {\n    //     dataSlice = renderData.slice(10, 19);\n    //   } else if (activePage === 3) {\n    //     dataSlice = renderData.slice(20, 29);\n    //   } else if (activePage === 4) {\n    //     dataSlice = renderData.slice(30, 39);\n    //   } else if (activePage === 5) {\n    //     dataSlice = renderData.slice(40, 49);\n    //   } else if (activePage === 6) {\n    //     dataSlice = renderData.slice(50, 59);\n    //   } else if (activePage === 7) {\n    //     dataSlice = renderData.slice(60, 69);\n    //   } else if (activePage === 8) {\n    //     dataSlice = renderData.slice(70, 79);\n    //   } else if (activePage === 9) {\n    //     dataSlice = renderData.slice(80, 89);\n    //   } else if (activePage === 10) {\n    //     dataSlice = renderData.slice(90, 99);\n    //   } else {\n    //     dataSlice = [];\n    //   }\n    //   // return dataSlice\n    // }\n\n    return (\n      <div>\n        <Grid\n          style={{\n            backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\"})`,\n            minHeight: \"1000px\"\n          }}\n        >\n          <Grid.Row columns={1}>\n            <Grid.Column>\n              <Navbar />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row columns={1}>\n            <Grid.Column>\n              <Header as=\"h1\">HI</Header>\n            </Grid.Column>\n          </Grid.Row>\n          {/* METRIC CARDS */}\n          <Grid.Row\n            columns={3}\n            style={\n              {\n                // top: \"70px\",\n                // margin: \"10px\",\n                // marginTop: '10px',\n                // paddingRight: \"120px\",\n                // paddingLeft: \"120px\",\n                // // marginBottom: \"10px\",\n                // // position: \"fixed\",\n                // textAlign: \"left\"\n              }\n            }\n          >\n            {this.renderLeadCount()}\n            {this.renderMeetingsBooked()}\n            {this.renderNotContacted()}\n          </Grid.Row>\n\n          {/*  BACK TO DASHBOARD BUTTON  */}\n          <Grid.Row\n            columns={1}\n            style={{\n              margin: \"1px\",\n              // position: \"fixed\",\n              top: \"50px\",\n              display: \"inline-block\"\n            }}\n          >\n            <Grid.Column style={{ margin: \"20px\" }}>\n              <Button as={Link} to=\"/dashboard\" style={styleButton}>\n                <Icon name=\"arrow alternate circle left outline\" /> Back to\n                Dashboard\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n\n          {this.props.listleads.leads.length ? (\n            <Grid.Row\n              style={{\n                // margin: \"20px\",\n                // marginRight: \"60px\",\n                // marginLeft: \"60px\",\n                // minHeight: \"450px\"\n                // margin: \"20px\",\n                // marginRight: \"60px\",\n                // marginLeft: \"60px\"\n                // position: 'absolute',\n                // top: '430px',\n                // marginLeft: \"150px\",\n                // marginRight: \"150px\"\n                width: \"400px\",\n                margin: \"60px\",\n                height: \"500px\",\n                // marginTop: '20px',\n                display: \"inline-block\"\n              }}\n              columns={1}\n            >\n              {/* TABLE OF CONTENTS */}\n              <Grid.Column>\n                <Table sortable selectable celled fixed>\n                  <Table.Header>\n                    <Table.Row>\n                      <span>\n                        Search leads by{\" \"}\n                        <Dropdown\n                          inline\n                          onChange={this.handleSearchDropdown}\n                          name=\"searchSelection\"\n                          options={filterOptions}\n                          defaultValue={filterOptions[0].text}\n                        />\n                      </span>\n                      <Search\n                        // style={{ margin: \"15px\", position: 'fixed', top: 0 }}\n                        onSearchChange={_.debounce(\n                          (event, { value }) =>\n                            this.handleFilterChange(event, value),\n                          300\n                        )}\n                        noResultsMessage=\"No results found\"\n                        showNoResults={false}\n                      />\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Header>\n                    <Table.Row\n                      style={{ position: \"sticky\" }}\n                      textAlign=\"center\"\n                    >\n                      <Table.HeaderCell\n                        sorted={column === \"first_name\" ? direction : null}\n                        onClick={this.handleSort(\"first_name\")}\n                      >\n                        First Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"last_name\" ? direction : null}\n                        onClick={this.handleSort(\"last_name\")}\n                      >\n                        Last Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"position\" ? direction : null}\n                        onClick={this.handleSort(\"position\")}\n                      >\n                        Position\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"company\" ? direction : null}\n                        onClick={this.handleSort(\"company\")}\n                      >\n                        Company\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"next_steps\" ? direction : null}\n                        onClick={this.handleSort(\"next_steps\")}\n                      >\n                        Next Steps\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={\n                          column === \"last_date_contacted\" ? direction : null\n                        }\n                        onClick={this.handleSort(\"last_date_contacted\")}\n                      >\n                        Last Date Contacted\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Edit Lead</Table.HeaderCell>\n                      <Table.HeaderCell>Delete Lead</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  {this.renderModal()}\n                  {this.renderTableBody()}\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          ) : (\n            <Grid.Row\n              style={{\n                margin: \"20px\",\n                position: \"fixed\",\n                top: \"400px\",\n                display: \"inline-block\",\n                left: \"-30px\"\n              }}\n              column={1}\n            >\n              <Grid.Column>\n                <Header>\n                  Oops! You do not have any leads saved under this list.\n                </Header>\n\n                <Button\n                  as={Link}\n                  to=\"/\"\n                  style={{\n                    borderRadius: \"30px\",\n                    color: \"#43425D\",\n                    backgroundColor: \"#FFF176\",\n                    padding: \"14px\",\n                    paddingRight: \"20px\",\n                    paddingLeft: \"20px\"\n                  }}\n                >\n                  <Icon name=\"arrow alternate circle left outline\" /> Search For\n                  Leads\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes,\n    search: state.search\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, deleteListLead, addLeadNote, updateSearch, sortLists, sortLeadLists }\n)(LeadList);\n\n// handleFetchClick = (id) => {\n//   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n// }\n\n// countTotalLeads = () => {\n//   if (this.props.listleads) {\n//     let totalLeads;\n//     // console.log(this.props.lists);\n//     totalLeads = this.props.listleads.leads.length;\n//     this.setState({ totalLeadCount: totalLeads });\n//   } else {\n//     return null;\n//   }\n// };\n\n// countMeetingsBooked = () => {\n//   let meetingsBookedCount = 0;\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       lead.leadnotes.forEach(leadnote => {\n//         if (leadnote.status === \"Meeting booked\") {\n//           meetingsBookedCount += 1;\n//         }\n//       });\n//     });\n//     this.setState({ totalMeetingsBooked: meetingsBookedCount });\n//   } else {\n//     return null;\n//   }\n// };\n\n// countNotContacted = () => {\n//   let notContacted = 0;\n//   // let testArray = []\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       if (lead.leadnotes.length < 1) {\n//         notContacted += 1;\n//       }\n//     });\n//     this.setState({ totalNotContacted: notContacted });\n//   } else {\n//     return null;\n//   }\n// };\n\n// id,\n// first_name,\n// last_name,\n// position,\n// company,\n// status,\n// next_steps,\n// last_date_contacted,\n// phone_number,\n// email,\n// comments,\n// comments_date\n\n{\n  /* <Table.Footer>\n                    {data.length > 10 ? (\n                      <Table.Row>\n                        <Table.HeaderCell colSpan=\"3\">\n                          <Pagination\n                            boundaryRange={0}\n                            defaultActivePage={1}\n                            ellipsisItem={\"...\"}\n                            firstItem={{\n                              content: <Icon name=\"angle double left\" />,\n                              icon: true\n                            }}\n                            lastItem={{\n                              content: <Icon name=\"angle double right\" />,\n                              icon: true\n                            }}\n                            prevItem={{\n                              content: <Icon name=\"angle left\" />,\n                              icon: true\n                            }}\n                            nextItem={{\n                              content: <Icon name=\"angle right\" />,\n                              icon: true\n                            }}\n                            siblingRange={1}\n                            totalPages={10}\n                            onPageChange={(event, { activePage }) =>\n                              this.handlePageChange(activePage)\n                            }\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    ) : null}\n                  </Table.Footer> */\n}\n"]},"metadata":{},"sourceType":"module"}