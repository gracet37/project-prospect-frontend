{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Confirm, Button, Modal, Form, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport { deleteList, thunkFetchListById, addList, clearMessage } from \"../actions\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleMetrics = {\n  borderWidth: \"2px\",\n  // marginRight: '30px',\n  borderRadius: \"10px\",\n  borderColor: \"#CECFD0\",\n  borderStyle: \"solid\",\n  margin: \"20px\",\n  padding: \"20px\",\n  // width: \"10px\",\n  height: \"150px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.68)\" // padding: \"20px\"\n\n};\nconst styleImage = {\n  position: \"relative\",\n  top: \"-40px\",\n  opacity: 0.8\n};\nconst styleRow = {\n  top: \"70px\",\n  margin: \"20px\",\n  paddingRight: \"120px\",\n  paddingLeft: \"120px\",\n  marginBottom: \"40px\",\n  position: \"relative\",\n  textAlign: \"left\"\n};\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      modalShow: false,\n      totalLeadCount: 0,\n      totalMeetingsBooked: 0,\n      totalNotContacted: 0,\n      newListName: \"\"\n    };\n\n    this.show = dimmer => this.setState({\n      dimmer,\n      modalShow: true\n    });\n\n    this.handleConfirmModal = () => this.setState({\n      modalShow: false\n    });\n\n    this.handleCancelModal = () => {\n      this.setState({\n        modalShow: false\n      }); // let newArray = this.state.data.filter(data => data.id !== id);\n      // this.setState({ data: newArray });\n      // this.props.deleteList(id);\n    };\n\n    this.handleConfirm = (event, id) => {\n      // let newArray = this.props.lists.filter(list => list.id !== id);\n      this.setState({\n        modalShow: false\n      });\n      this.props.deleteList(id);\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n      this.props.thunkFetchListById(id, this.props.history);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            direction = _this$state.direction;\n      const data = this.props.lists;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: this.props.lists.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const newListName = this.state.newListName;\n      const userId = this.props.auth.user.id;\n      this.handleCancelModal();\n      this.props.clearMessage();\n      this.props.addList(newListName, userId);\n    };\n\n    this.handleClearMessage = () => {\n      this.props.clearMessage();\n    };\n  }\n\n  componentDidMount() {\n    // this.formattedListArray();\n    // this.countTotalLeads();\n    this.countMeetingsBooked();\n    this.countNotContacted();\n  }\n\n  renderListBody() {\n    console.log(\"asfd\", this.props.lists);\n    return React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, _.map(this.props.lists, ({\n      id,\n      name,\n      created_at,\n      leads\n    }) => {\n      let dateString = new Date(created_at).toDateString();\n      let leadCount = leads.length; // let dateString = date\n\n      return React.createElement(Table.Row, {\n        textAlign: \"center\",\n        key: uuidv1(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        onClick: () => this.handleRowClick(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, name), React.createElement(Table.Cell, {\n        onClick: () => this.handleRowClick(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, leadCount), React.createElement(Table.Cell, {\n        onClick: () => this.handleRowClick(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, dateString), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        closeIcon: true,\n        size: \"mini\",\n        trigger: React.createElement(Icon, {\n          name: \"trash alternate outline\",\n          name: \"trash alternate outline\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Delete List\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Are you sure you want to delete this list?\")), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          borderRadius: \"30px\",\n          color: \"white\",\n          backgroundColor: \"#6200EE\"\n        },\n        onClick: this.handleCancelModal,\n        basic: true,\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        onClick: event => this.handleConfirm(event, id) // icon=\"checkmark\"\n        // labelPosition=\"right\"\n        ,\n        content: \"Yes\",\n        style: {\n          borderRadius: \"30px\",\n          color: \"white\",\n          backgroundColor: \"#03DAC6\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })))));\n    }));\n  }\n\n  renderLeadCount() {\n    if (this.props.lists.length > 0) {\n      let leadCountArray = [];\n      let totalLeads;\n      console.log(this.props.lists);\n      this.props.lists.forEach(list => {\n        let count = list.leads.length;\n        leadCountArray.push(count);\n      });\n      totalLeads = leadCountArray.reduce((total, count) => total + count);\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Total Leads\"), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, totalLeads), React.createElement(Image, {\n        style: styleImage,\n        size: \"small\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n\n    if (this.props.listWithLeadNotes.length) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Meetings Booked\"), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, meetingsBookedCount), React.createElement(Image, {\n        style: styleImage,\n        size: \"small\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  handleNotContacted() {}\n\n  render() {\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction,\n          totalLeadCount = _this$state2.totalLeadCount,\n          totalMeetingsBooked = _this$state2.totalMeetingsBooked,\n          totalNotContacted = _this$state2.totalNotContacted; // console.log(this.props.lists)\n\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.renderMetricCards, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: \"equal\",\n      style: styleRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, this.renderLeadCount(), this.renderMeetingsBooked(), React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Not Yet Contacted\"), React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, totalNotContacted), React.createElement(Image, {\n      style: styleImage,\n      size: \"small\",\n      floated: \"right\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      closeOnDimmerClick: this.state.modalShow // closeIcon\n      ,\n      open: this.state.modalShow,\n      centered: true,\n      trigger: React.createElement(Button, {\n        onClick: this.show,\n        style: {\n          borderRadius: \"30px\",\n          color: \"white\",\n          backgroundColor: \"#6200EE\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), \" Create New List\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Create a New List:\"), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"30px\",\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleSubmit // basic\n      // color=\"violet\"\n      // inverted\n      ,\n      style: {\n        margin: \"20px\",\n        borderRadius: \"30px\",\n        color: \"white\",\n        backgroundColor: \"#03DAC6\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), \" Add Lead to List\")))))), React.createElement(Grid.Row, {\n      style: {\n        marginLeft: \"150px\",\n        marginRight: \"150px\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"name\" ? direction : null,\n      onClick: this.handleSort(\"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"List Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"leads\" ? direction : null,\n      onClick: this.handleSort(\"leads\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"No. of Leads\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"date\" ? direction : null,\n      onClick: this.handleSort(\"date\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Delete List\"))), this.renderListBody())))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes,\n    message: state.message\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     thunkFetchListById: (id, history) => {\n//       dispatch(thunkFetchListById(id, history));\n//     }\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  thunkFetchListById,\n  addList,\n  clearMessage\n})(withRouter(Dashboard));","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/Dashboard.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Confirm","Button","Modal","Form","Header","connect","withRouter","_","Navbar","deleteList","thunkFetchListById","addList","clearMessage","uuidv1","require","styleMetrics","borderWidth","borderRadius","borderColor","borderStyle","margin","padding","height","boxShadow","styleImage","position","top","opacity","styleRow","paddingRight","paddingLeft","marginBottom","textAlign","Dashboard","state","column","data","direction","modalShow","totalLeadCount","totalMeetingsBooked","totalNotContacted","newListName","show","dimmer","setState","handleConfirmModal","handleCancelModal","handleConfirm","event","id","props","handleRowClick","console","log","history","handleSort","clickedColumn","lists","sortBy","reverse","handleChange","e","targetValue","target","value","targetName","name","handleSubmit","userId","auth","user","handleClearMessage","componentDidMount","countMeetingsBooked","countNotContacted","renderListBody","map","created_at","leads","dateString","Date","toDateString","leadCount","length","color","backgroundColor","renderLeadCount","leadCountArray","totalLeads","forEach","list","count","push","reduce","total","renderMeetingsBooked","meetingsBookedCount","listWithLeadNotes","lead","leadnotes","leadnote","status","handleNotContacted","render","renderMetricCards","verticalAlign","width","marginLeft","marginRight","mapStateToProps","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Card,\n  Table,\n  Icon,\n  Confirm,\n  Button,\n  Modal,\n  Form,\n  Header\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport {\n  deleteList,\n  thunkFetchListById,\n  addList,\n  clearMessage\n} from \"../actions\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleMetrics = {\n  borderWidth: \"2px\",\n  // marginRight: '30px',\n  borderRadius: \"10px\",\n  borderColor: \"#CECFD0\",\n  borderStyle: \"solid\",\n  margin: \"20px\",\n  padding: \"20px\",\n  // width: \"10px\",\n  height: \"150px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.68)\"\n  // padding: \"20px\"\n};\n\nconst styleImage = {\n  position: \"relative\",\n  top: \"-40px\",\n  opacity: 0.8\n};\n\nconst styleRow = {\n  top: \"70px\",\n  margin: \"20px\",\n  paddingRight: \"120px\",\n  paddingLeft: \"120px\",\n  marginBottom: \"40px\",\n  position: \"relative\",\n  textAlign: \"left\"\n};\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    modalShow: false,\n    totalLeadCount: 0,\n    totalMeetingsBooked: 0,\n    totalNotContacted: 0,\n    newListName: \"\"\n  };\n\n  componentDidMount() {\n    // this.formattedListArray();\n    // this.countTotalLeads();\n    this.countMeetingsBooked();\n    this.countNotContacted();\n  }\n\n  show = dimmer => this.setState({ dimmer, modalShow: true });\n  handleConfirmModal = () => this.setState({ modalShow: false });\n  handleCancelModal = () => {\n    this.setState({ modalShow: false });\n    // let newArray = this.state.data.filter(data => data.id !== id);\n    // this.setState({ data: newArray });\n    // this.props.deleteList(id);\n  };\n\n\n\n  handleConfirm = (event, id) => {\n    // let newArray = this.props.lists.filter(list => list.id !== id);\n    this.setState({ modalShow: false });\n    this.props.deleteList(id);\n  };\n\n  handleRowClick = id => {\n    console.log(\"row clicked\", id);\n    this.props.thunkFetchListById(id, this.props.history);\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, direction } = this.state;\n    const data = this.props.lists;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: this.props.lists.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { newListName } = this.state;\n    const userId = this.props.auth.user.id;\n    this.handleCancelModal();\n    this.props.clearMessage();\n    this.props.addList(newListName, userId);\n  };\n\n  handleClearMessage = () => {\n    this.props.clearMessage();\n  };\n\n  renderListBody() {\n    console.log(\"asfd\", this.props.lists);\n    return (\n      <Table.Body>\n        {_.map(this.props.lists, ({ id, name, created_at, leads }) => {\n          let dateString = new Date(created_at).toDateString();\n          let leadCount = leads.length;\n          // let dateString = date\n          return (\n            <Table.Row textAlign=\"center\" key={uuidv1()}>\n              <Table.Cell onClick={() => this.handleRowClick(id)}>\n                {name}\n              </Table.Cell>\n              <Table.Cell onClick={() => this.handleRowClick(id)}>\n                {leadCount}\n              </Table.Cell>\n              <Table.Cell onClick={() => this.handleRowClick(id)}>\n                {dateString}\n              </Table.Cell>\n              <Table.Cell>\n                <Modal\n                  closeIcon\n                  size=\"mini\"\n                  trigger={\n                    <Icon\n                      name={\"trash alternate outline\"}\n                      name=\"trash alternate outline\"\n                      size=\"large\"\n                    />\n                  }\n                >\n                  <Modal.Header>Delete List</Modal.Header>\n                  <Modal.Content>\n                    <p>Are you sure you want to delete this list?</p>\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      style={{\n                        borderRadius: \"30px\",\n                        color: \"white\",\n                        backgroundColor: \"#6200EE\"\n                      }}\n                      onClick={this.handleCancelModal}\n                      basic\n                      color=\"violet\"\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={event => this.handleConfirm(event, id)}\n                      // icon=\"checkmark\"\n                      // labelPosition=\"right\"\n                      content=\"Yes\"\n                      style={{\n                        borderRadius: \"30px\",\n                        color: \"white\",\n                        backgroundColor: \"#03DAC6\"\n                      }}\n                    />\n                  </Modal.Actions>\n                </Modal>\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    );\n  }\n\n  renderLeadCount() {\n    if (this.props.lists.length > 0) {\n      let leadCountArray = [];\n      let totalLeads;\n      console.log(this.props.lists);\n      this.props.lists.forEach(list => {\n        let count = list.leads.length;\n        leadCountArray.push(count);\n      });\n      totalLeads = leadCountArray.reduce((total, count) => total + count);\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h2\">Total Leads</Header>\n          <Header as=\"h2\">{totalLeads}</Header>\n          <Image\n            style={styleImage}\n            size=\"small\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n    if (this.props.listWithLeadNotes.length) {\n      this.props.listWithLeadNotes.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h2\">Meetings Booked</Header>\n          <Header as=\"h2\">{meetingsBookedCount}</Header>\n          <Image\n            style={styleImage}\n            size=\"small\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  handleNotContacted() {\n\n  }\n\n  render() {\n    const {\n      column,\n      data,\n      direction,\n      totalLeadCount,\n      totalMeetingsBooked,\n      totalNotContacted\n    } = this.state;\n    // console.log(this.props.lists)\n    console.log(this.state);\n    return (\n      <div>\n        {this.renderMetricCards}\n        {/* METRIC CARDS */}\n        <Grid>\n          <Grid.Row columns=\"equal\" style={styleRow}>\n            {this.renderLeadCount()}\n            {this.renderMeetingsBooked()}\n\n            <Grid.Column style={styleMetrics}>\n              <Header as=\"h2\">Not Yet Contacted</Header>\n              <Header as=\"h2\">{totalNotContacted}</Header>\n              <Image\n                style={styleImage}\n                size=\"small\"\n                floated=\"right\"\n                src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n\n          {/* STYLING FOR THE BUTTON */}\n          <Grid.Row columns={1}>\n            <Grid.Column style={{ margin: \"20px\" }}>\n              <Modal\n                closeOnDimmerClick={this.state.modalShow}\n                // closeIcon\n                open={this.state.modalShow}\n                centered\n                trigger={\n                  <Button\n                    onClick={this.show}\n                    style={{\n                      borderRadius: \"30px\",\n                      color: \"white\",\n                      backgroundColor: \"#6200EE\"\n                    }}\n                  >\n                    <Icon name=\"add\" /> Create New List\n                  </Button>\n                }\n                basic\n                size=\"small\"\n              >\n                <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n                  {/* {this.props.message ? (\n                    <Modal.Header style={{ color: \"#71EFE0\" }} as=\"h2\">\n                      {this.props.message}\n                    </Modal.Header>\n                  ) : null} */}\n                  <Modal.Header as=\"h2\">Create a New List:</Modal.Header>\n                  <Form.Group>\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    >\n                      <input\n                        style={{ borderRadius: \"30px\", width: \"200px\" }}\n                      ></input>\n                    </Form.Input>\n                    <Button\n                      onClick={this.handleSubmit}\n                      // basic\n                      // color=\"violet\"\n                      // inverted\n                      style={{\n                        margin: \"20px\",\n                        borderRadius: \"30px\",\n                        color: \"white\",\n                        backgroundColor: \"#03DAC6\"\n                      }}\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Button>\n                  </Form.Group>\n                </div>\n              </Modal>\n            </Grid.Column>\n          </Grid.Row>\n          {/* TABLE OF CONTENTS */}\n          <Grid.Row\n            style={{\n              marginLeft: \"150px\",\n              marginRight: \"150px\"\n            }}\n            columns={1}\n          >\n            <Grid.Column>\n              <Table sortable selectable celled>\n                <Table.Header>\n                  <Table.Row textAlign=\"center\">\n                    <Table.HeaderCell\n                      sorted={column === \"name\" ? direction : null}\n                      onClick={this.handleSort(\"name\")}\n                    >\n                      List Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"leads\" ? direction : null}\n                      onClick={this.handleSort(\"leads\")}\n                    >\n                      No. of Leads\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"date\" ? direction : null}\n                      onClick={this.handleSort(\"date\")}\n                    >\n                      Date Created\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>Delete List</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                {this.renderListBody()}\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    lists: state.lists,\n    listWithLeadNotes: state.listWithLeadNotes,\n    message: state.message\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     thunkFetchListById: (id, history) => {\n//       dispatch(thunkFetchListById(id, history));\n//     }\n//   };\n// };\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, thunkFetchListById, addList, clearMessage }\n)(withRouter(Dashboard));\n"]},"metadata":{},"sourceType":"module"}