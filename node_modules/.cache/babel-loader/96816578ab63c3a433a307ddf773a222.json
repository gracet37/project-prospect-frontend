{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getByCurrPage = exports.alignPage = undefined;\n\nvar _const = require('./const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getNormalizedPage = function getNormalizedPage(page, pageStartIndex) {\n  var offset = Math.abs(1 - pageStartIndex);\n  return page + offset;\n};\n\nvar endIndex = function endIndex(page, sizePerPage, pageStartIndex) {\n  return getNormalizedPage(page, pageStartIndex) * sizePerPage - 1;\n};\n\nvar startIndex = function startIndex(end, sizePerPage) {\n  return end - (sizePerPage - 1);\n};\n\nvar alignPage = exports.alignPage = function alignPage(dataSize, prevDataSize, page, sizePerPage, pageStartIndex) {\n  if (prevDataSize < dataSize) return page;\n  if (page < pageStartIndex) return pageStartIndex;\n  if (dataSize <= 0) return pageStartIndex;\n\n  if (page >= Math.floor(dataSize / sizePerPage) + pageStartIndex && pageStartIndex === 1) {\n    return Math.ceil(dataSize / sizePerPage);\n  }\n\n  if (page >= Math.floor(dataSize / sizePerPage) && pageStartIndex === 0) {\n    var newPage = Math.ceil(dataSize / sizePerPage);\n    return newPage - Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);\n  }\n\n  return page;\n};\n\nvar getByCurrPage = exports.getByCurrPage = function getByCurrPage(data, page, sizePerPage, pageStartIndex) {\n  var dataSize = data.length;\n  if (!dataSize) return [];\n  var end = endIndex(page, sizePerPage, pageStartIndex);\n  var start = startIndex(end, sizePerPage);\n  var result = [];\n\n  for (var i = start; i <= end; i += 1) {\n    result.push(data[i]);\n    if (i + 1 === dataSize) break;\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"script"}