{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport Navbar from \"./Navbar\";\nimport { deleteList } from '../actions';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: null,\n      direction: null\n    };\n\n    this.formattedListArray = () => {\n      let array = this.props.listlead.map(lead => {\n        return {\n          id: lead.id,\n          first_name: lead.first_name,\n          last_name: lead.last_name,\n          position: lead.position,\n          company: lead.company,\n          status: null,\n          next_steps: null,\n          last_date_contacted: lead.contacted_date\n        };\n      });\n      this.setState({\n        data: array\n      });\n    };\n\n    this.handleDeleteClick = (event, id) => {\n      event.preventDefault();\n      console.log(id);\n      this.props.deleteList(id);\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.formattedListArray();\n  } // formatListArray = (listArray) => {\n  //     console.log(\"list array\", listArray)\n  //     let filteredArray = [];\n  //     // let lists = this.props.lists[0];\n  //     Object.keys(listArray).forEach(function(i) {\n  //       let date = new Date(listArray[i].created_at)\n  //       let dateString = date.toDateString()\n  //       filteredArray.push({\n  //         id: listArray[i].id,\n  //         name: listArray[i].name,\n  //         created: dateString\n  //       });\n  //     });\n  //     // this.setState({data: listArray})}\n  //     return filteredArray\n  // }\n  //   formattedListArray = () => {\n  //     // if (this.props.lists.length) {\n  //     let array = []\n  //     this.props.listlead.forEach(list => {\n  //       let date = new Date(list.created_at)\n  //       let dateString = date.toDateString()\n  //       array.push({\n  //         id: list.id,\n  //         name: list.name,\n  //         date: dateString\n  //       })\n  //     })\n  //     this.setState({data: array})\n  //     // return array\n  // }\n\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction;\n    console.log(this.props.lists);\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"XXXXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Open Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Another METRIC\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))))), React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"first_name\" ? direction : null,\n      onClick: this.handleSort(\"first_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"List Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_name\" ? direction : null,\n      onClick: this.handleSort(\"last_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Meetings Booked\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"position\" ? direction : null,\n      onClick: this.handleSort(\"position\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"company\" ? direction : null,\n      onClick: this.handleSort(\"company\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"status\" ? direction : null,\n      onClick: this.handleSort(\"status\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Delete List\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"next_steps\" ? direction : null,\n      onClick: this.handleSort(\"next_steps\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Delete List\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_date_contacted\" ? direction : null,\n      onClick: this.handleSort(\"last_date_contacted\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Delete List\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, _.map(data, ({\n      id,\n      first_name,\n      last_name,\n      position,\n      company,\n      status,\n      next_steps\n    }) => React.createElement(Table.Row, {\n      key: id,\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, date), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'trash alternate outline',\n      onClick: event => this.handleDeleteClick(event, id),\n      name: \"trash alternate outline\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listlead: state.listlead\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: id => {\n      dispatch(deleteList(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Button","connect","_","Navbar","deleteList","Dashboard","state","column","data","direction","formattedListArray","array","props","listlead","map","lead","id","first_name","last_name","position","company","status","next_steps","last_date_contacted","contacted_date","setState","handleDeleteClick","event","preventDefault","console","log","handleRowClick","handleSort","clickedColumn","sortBy","reverse","componentDidMount","render","lists","height","name","date","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash'\nimport Navbar from \"./Navbar\";\nimport { deleteList } from '../actions'\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS \n  state = {\n    column: null,\n    data: null,\n    direction: null\n  };\n\n  componentDidMount() {\n   this.formattedListArray()\n  }\n\n  // formatListArray = (listArray) => {\n  //     console.log(\"list array\", listArray)\n  //     let filteredArray = [];\n  //     // let lists = this.props.lists[0];\n  //     Object.keys(listArray).forEach(function(i) {\n  //       let date = new Date(listArray[i].created_at)\n  //       let dateString = date.toDateString()\n  //       filteredArray.push({\n  //         id: listArray[i].id,\n  //         name: listArray[i].name,\n  //         created: dateString\n  //       });\n  //     });\n  //     // this.setState({data: listArray})}\n  //     return filteredArray\n  // }\n\n//   formattedListArray = () => {\n//     // if (this.props.lists.length) {\n//     let array = []\n//     this.props.listlead.forEach(list => {\n//       let date = new Date(list.created_at)\n//       let dateString = date.toDateString()\n//       array.push({\n//         id: list.id,\n//         name: list.name,\n//         date: dateString\n//       })\n//     })\n//     this.setState({data: array})\n//     // return array\n// }\n\nformattedListArray = () => {\n  let array = this.props.listlead.map(lead => {\n    return {\n      id: lead.id,\n      first_name: lead.first_name,\n      last_name: lead.last_name, \n      position: lead.position, \n      company: lead.company,\n      status: null, \n      next_steps: null, \n      last_date_contacted: lead.contacted_date\n    }\n  })\n  this.setState({data: array})\n}\n\n  handleDeleteClick = (event, id) => {\n    event.preventDefault()\n    console.log(id)\n    this.props.deleteList(id)\n  }\n\n  handleRowClick = (id) => {\n    console.log(\"row clicked\", id)\n  }\n  \n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const { column, data, direction } = this.state;\n    console.log(this.props.lists)\n    console.log(this.state)\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Navbar />\n        <Grid divided=\"vertically\">\n          <Grid.Row columns={3}>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>XXXXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Open Leads</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Another METRIC</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row columns={1}>\n            <Grid.Column>\n              <Table sortable selectable celled fixed>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell\n                      sorted={column === \"first_name\" ? direction : null}\n                      onClick={this.handleSort(\"first_name\")}\n                    >\n                      List Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"last_name\" ? direction : null}\n                      onClick={this.handleSort(\"last_name\")}\n                    >\n                      Meetings Booked\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"position\" ? direction : null}\n                      onClick={this.handleSort(\"position\")}\n                    >\n                      Total Leads\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"company\" ? direction : null}\n                      onClick={this.handleSort(\"company\")}\n                    >\n                      Date Created\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"status\" ? direction : null}\n                      onClick={this.handleSort(\"status\")}\n                    >\n                      Delete List\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"next_steps\" ? direction : null}\n                      onClick={this.handleSort(\"next_steps\")}\n                    >\n                      Delete List\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"last_date_contacted\" ? direction : null}\n                      onClick={this.handleSort(\"last_date_contacted\")}\n                    >\n                      Delete List\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {_.map(data, ({ id, first_name, last_name, position, company, status, next_steps, }) => (\n                    <Table.Row key={id} onClick={() => this.handleRowClick(id)}>\n                      <Table.Cell>{name}</Table.Cell>\n                      <Table.Cell></Table.Cell>\n                      <Table.Cell></Table.Cell>\n                      <Table.Cell>{date}</Table.Cell>\n                      <Table.Cell><Icon name={'trash alternate outline'} onClick={(event) => this.handleDeleteClick(event, id)} name='trash alternate outline' size='large' /></Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listlead: state.listlead\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: (id) => {\n      dispatch(deleteList(id))\n    }\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}