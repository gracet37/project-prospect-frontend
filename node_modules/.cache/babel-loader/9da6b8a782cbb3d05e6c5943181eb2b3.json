{"ast":null,"code":"import _slicedToArray from \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { connect } from 'react-redux';\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nclass DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: [],\n      rows: [],\n      isLoading: true\n    };\n\n    this.createData = (first_name, last_name, email, position, company, confidence) => {\n      return {\n        first_name,\n        last_name,\n        email,\n        position,\n        company,\n        confidence\n      };\n    };\n\n    this.createRowData = () => {\n      let array = [];\n      this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence);\n        array.push(newRow);\n      });\n      this.setState({\n        rows: array\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadsArray = _this$state.leadsArray,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.auth.user.id;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId);\n    };\n\n    this.handleLeadClick = (lead, checked) => {\n      console.log(lead);\n      console.log(checked);\n\n      if (checked) {\n        this.props.listWithLeadNotes.forEach(l => {\n          console.log(\"what is l\", l);\n\n          if (l.lead.email !== lead.value) {\n            this.setState({\n              leadsArray: [...this.state.leadsArray, lead]\n            });\n          } else {\n            return null;\n          }\n        });\n      } else {\n        const newArray = this.state.leadsArray.filter(l => l.value !== lead.value);\n        this.setState({\n          leadsArray: newArray\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData();\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(EnhancedTable, {\n      rows: this.state.rows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(addLead(leadsArray, company, website, listId, newListName, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable);\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: 'first_name',\n  numeric: false,\n  disablePadding: true,\n  label: 'First Name'\n}, {\n  id: 'last_name',\n  numeric: true,\n  disablePadding: false,\n  label: 'Last Name'\n}, {\n  id: 'email',\n  numeric: true,\n  disablePadding: false,\n  label: 'Email'\n}, {\n  id: 'position',\n  numeric: true,\n  disablePadding: false,\n  label: 'Position'\n}, {\n  id: 'company',\n  numeric: true,\n  disablePadding: false,\n  label: 'Company'\n}, {\n  id: 'confidence',\n  numeric: true,\n  disablePadding: false,\n  label: 'Confidence'\n}];\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Nutrition\")), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction EnhancedTable(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('confidence'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(5),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.first_name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, first_name) => {\n    const selectedIndex = selected.indexOf(first_name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, first_name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = first_name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n  if (props.rows) {\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(EnhancedTableToolbar, {\n      numSelected: selected.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      size: dense ? 'small' : 'medium',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      classes: classes,\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: handleSelectAllClick,\n      onRequestSort: handleRequestSort,\n      rowCount: props.rows.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, stableSort(props.rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n      const isItemSelected = isSelected(row.first_name);\n      const labelId = \"enhanced-table-checkbox-\".concat(index);\n      return React.createElement(TableRow, {\n        hover: true,\n        onClick: event => handleClick(event, row.first_name),\n        role: \"checkbox\",\n        \"aria-checked\": isItemSelected,\n        tabIndex: -1,\n        key: row.first_name,\n        selected: isItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: isItemSelected,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        component: \"th\",\n        id: labelId,\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, row.first_name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, row.last_name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, row.position), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, row.company), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, row.confidence));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: props.rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        'aria-label': 'previous page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'next page'\n      },\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    })), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: dense,\n        onChange: handleChangeDense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }),\n      label: \"Dense padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n  ;\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTest.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","connect","addList","addLead","Navbar","DataTable","Component","state","listId","leadSelection","company","website","newListName","leadsArray","rows","isLoading","createData","first_name","last_name","email","position","confidence","createRowData","array","props","leads","emails","forEach","lead","newRow","value","organization","push","setState","handleDropdown","e","data","targetValue","handleChange","target","targetName","name","handleSubmit","console","log","userId","auth","user","id","handleLeadClick","checked","listWithLeadNotes","l","newArray","filter","componentDidMount","domain","render","mapStateToProps","lists","mapDispatchToProps","dispatch","desc","a","b","orderBy","stableSort","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","numeric","disablePadding","label","EnhancedTableHead","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","top","EnhancedTable","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","handleChangeDense","isSelected","emptyRows","Math","min","row","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {connect} from 'react-redux';\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\n\nclass DataTable extends React.Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [],\n    rows: [],\n    isLoading: true\n  }  \n  \n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData()\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  createData = (first_name, last_name, email, position, company, confidence) => {\n    return { first_name, last_name, email, position, company, confidence};\n  }\n\n  createRowData = () => {\n    let array = []\n    this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence)\n        array.push(newRow)\n    })\n    this.setState({rows: array})\n    this.setState({isLoading: false})\n  }\n  \n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n  };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.props.listWithLeadNotes.forEach(l => {\n        console.log(\"what is l\", l)\n        if (l.lead.email !== lead.value) {\n          this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n        } else {\n          return (\n            null\n          )\n        }\n      })\n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n  render() {\n    console.log(this.state)\n    if (this.state.isLoading) {\n      return <div>Loading</div>\n    }\n    return (\n      <div>\n        <EnhancedTable rows={this.state.rows}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(\n        addLead(leadsArray, company, website, listId, newListName, userId)\n      );\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable)\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: 'first_name', numeric: false, disablePadding: true, label: 'First Name' },\n  { id: 'last_name', numeric: true, disablePadding: false, label: 'Last Name' },\n  { id: 'email', numeric: true, disablePadding: false, label: 'Email' },\n  { id: 'position', numeric: true, disablePadding: false, label: 'Position' },\n  { id: 'company', numeric: true, disablePadding: false, label: 'Company' },\n  { id: 'confidence', numeric: true, disablePadding: false, label: 'Confidence' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('confidence');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.first_name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, first_name) => {\n    const selectedIndex = selected.indexOf(first_name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, first_name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = first_name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n  if (props.rows) {\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.rows.length}\n            />\n            <TableBody>\n              {stableSort(props.rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.first_name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.first_name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.first_name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.last_name}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.position}</TableCell>\n                      <TableCell align=\"right\">{row.company}</TableCell>\n                      <TableCell align=\"right\">{row.confidence}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={props.rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n  </div> \n  )\n  } else {\n    return <div>Loading</div>\n  };\n}\n"]},"metadata":{},"sourceType":"module"}