{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/UserProfile.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Header, Image, Segment, Container, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { currentUser, loadUser } from \"../actions\";\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super();\n\n    this.handleDeleteClick = () => {};\n\n    this.state = {\n      loading: false,\n      success: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.loadUser(() => {\n      this.setState({\n        loading: true\n      });\n    }, () => {\n      this.setState({\n        success: true,\n        loading: false\n      });\n    }, () => {\n      this.setState({\n        success: false,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    let condRender = null;\n\n    if (this.state.loading) {\n      condRender = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" LOADING \");\n    } else if (this.state.success == true) {\n      condRender = React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          backgroundImage: \"url(\".concat(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\", \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" \", React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Container, {\n        style: {\n          display: \"inline-block\",\n          minHeight: \"830px\",\n          width: \"50%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          positon: \"absolute\",\n          top: \"90px\",\n          verticalAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 1,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          display: \"inline-block\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        style: {\n          paddingRight: \"100px\",\n          paddingLeft: \"100px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" \", this.props.auth.user.first_name, \" \", this.props.auth.user.last_name), React.createElement(Image, {\n        style: {\n          display: \"inline-block\",\n          textAlign: \"center\"\n        },\n        circular: true,\n        src: this.props.auth.user.img_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Grid.Row, {\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"20px\",\n          borderRadius: \"50px\"\n        },\n        as: Link,\n        to: \"/edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Edit Account\")), React.createElement(Grid.Row, {\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", React.createElement(Segment, {\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"20px\"\n        },\n        as: Link,\n        to: \"/leadlists\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"View Lead Lists Account\")), React.createElement(Grid.Row, {\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" \", React.createElement(Segment, {\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"20px\"\n        },\n        onClick: this.handleDeleteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Delete Account\")))))))));\n    } else if (!this.state.success) {\n      condRender = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" ERROR \");\n    }\n\n    return condRender;\n  }\n\n} //   }\n//   render() {\n//     console.log(this.props.auth)\n//     // const {img_url, first_name, last_name, email} = this.props.auth.user\n//     const isLoading = this.state.isLoading\n//     if (isLoading) {\n//       return (\n//         <div>Loading...</div>\n//         )\n//       } else {\n//         console.log(this.props.auth.user.img_url)\n//     return (\n//       <div>\n//         <Navbar />\n//         <Header\n//           style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n//           as=\"h3\"\n//           content=\"Text Container\"\n//           textAlign=\"center\"\n//         >\n//           <Grid columns={2}>\n//             <Grid.Column>\n//               <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>\n//                     <Image circular  />\n//                   </Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Header> </Header>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Grid columns={3} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//           </Grid>\n//         </Header>\n//       </div>\n//     );\n//     }\n//   }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadUser\n})(UserProfile);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/UserProfile.js"],"names":["React","Component","Navbar","Header","Image","Segment","Container","Grid","connect","withRouter","Link","currentUser","loadUser","UserProfile","constructor","props","handleDeleteClick","state","loading","success","componentWillMount","setState","render","condRender","textAlign","backgroundImage","display","minHeight","width","positon","top","verticalAlign","paddingRight","paddingLeft","auth","user","first_name","last_name","img_url","marginBottom","marginTop","borderRadius","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Header, Image, Segment, Container, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { currentUser, loadUser } from \"../actions\";\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      loading: false,\n      success: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.loadUser(\n      () => {\n        this.setState({ loading: true });\n      },\n      () => {\n        this.setState({ success: true, loading: false });\n      },\n      () => {\n        this.setState({ success: false, loading: false });\n      }\n    );\n  }\n\n  handleDeleteClick = () => {};\n\n  render() {\n    let condRender = null;\n\n    if (this.state.loading) {\n      condRender = <div> LOADING </div>;\n    } else if (this.state.success == true) {\n      condRender = (\n        <div\n          style={{\n            textAlign: \"center\",\n            backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\"})`\n          }}\n        >\n          {\" \"}\n          <Navbar />\n          {/* <Header\n            style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n            as=\"h3\"\n            content=\"Text Container\"\n            textAlign=\"center\"\n          > */}\n          <Container\n            style={{\n              display: \"inline-block\",\n              minHeight: \"830px\",\n              width: \"50%\"\n            }}\n          >\n            <Grid>\n              <Grid.Column\n                style={{\n                  positon: \"absolute\",\n                  top: \"90px\",\n                  verticalAlign: \"center\"\n                }}\n              >\n                <Grid.Row columns={1} centered>\n                  <Grid.Column\n                    style={{ display: \"inline-block\", textAlign: \"center\" }}\n                  >\n                    <Segment\n                      style={{ paddingRight: \"100px\", paddingLeft: \"100px\" }}\n                    >\n                      <Header as=\"h1\">\n                        {\" \"}\n                        {this.props.auth.user.first_name}{\" \"}\n                        {this.props.auth.user.last_name}\n                      </Header>\n                      <Image\n                        style={{ display: \"inline-block\", textAlign: \"center\" }}\n                        circular\n                        src={this.props.auth.user.img_url}\n                      />\n                      {/* <Segment style={{ position: 'absolute', margin: '20px', marginBottom: \"20px\", marginTop: \"20px\" }} as={Link} to='/edit'>Edit Account</Segment>\n                    <Segment style={{ position: 'absolute', margin: '20px', marginBottom: \"20px\", marginTop: \"20px\" }} as={Link} to='/leadlists'>View Lead Lists</Segment> */}\n                      <Grid.Row\n                        style={{ marginBottom: \"20px\", marginTop: \"20px\" }}\n                      >\n                        <Segment\n                          style={{\n                            marginBottom: \"20px\",\n                            marginTop: \"20px\",\n                            borderRadius: \"50px\"\n                          }}\n                          as={Link}\n                          to=\"/edit\"\n                        >\n                          Edit Account\n                        </Segment>\n                      </Grid.Row>\n                      <Grid.Row\n                        style={{ marginBottom: \"20px\", marginTop: \"20px\" }}\n                      >\n                        {\" \"}\n                        <Segment\n                          style={{ marginBottom: \"20px\", marginTop: \"20px\" }}\n                          as={Link}\n                          to=\"/leadlists\"\n                        >\n                          View Lead Lists Account\n                        </Segment>\n                      </Grid.Row>\n                      <Grid.Row\n                        style={{ marginBottom: \"20px\", marginTop: \"20px\" }}\n                      >\n                        {\" \"}\n                        <Segment\n                          style={{ marginBottom: \"20px\", marginTop: \"20px\" }}\n                          onClick={this.handleDeleteClick}\n                        >\n                          Delete Account\n                        </Segment>\n                      </Grid.Row>\n                      {/* <Segment style={{ marginBottom: \"20px\", marginTop: \"20px\" }} as={Link} to='/edit'>Edit Account</Segment> */}\n                    </Segment>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid.Column>\n              {/* <Grid.Column style={{ positon: \"absolute\", left: \"150px\" }}>\n                <Grid.Row columns={3} doubling>\n                  <Grid.Column style={{ marginBottom: \"20px\" }}>\n                    <Segment>Edit Account</Segment>\n                  </Grid.Column>\n                  <Grid.Column style={{ marginBottom: \"20px\" }}>\n                    <Segment>View Lead Lists</Segment>\n                  </Grid.Column>\n                  <Grid.Column style={{ marginBottom: \"20px\" }}>\n                    <Segment>Delete Account</Segment>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid.Column> */}\n            </Grid>\n          </Container>\n        </div>\n      );\n    } else if (!this.state.success) {\n      condRender = <div> ERROR </div>;\n    }\n\n    return condRender;\n  }\n}\n\n//   }\n\n//   render() {\n//     console.log(this.props.auth)\n//     // const {img_url, first_name, last_name, email} = this.props.auth.user\n//     const isLoading = this.state.isLoading\n//     if (isLoading) {\n//       return (\n//         <div>Loading...</div>\n//         )\n//       } else {\n//         console.log(this.props.auth.user.img_url)\n//     return (\n//       <div>\n//         <Navbar />\n//         <Header\n//           style={{ position: \"fixed\", top: \"80px\", left: \"50px\" }}\n//           as=\"h3\"\n//           content=\"Text Container\"\n//           textAlign=\"center\"\n//         >\n//           <Grid columns={2}>\n//             <Grid.Column>\n//               <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>\n//                     <Image circular  />\n//                   </Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Header> </Header>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Grid columns={3} doubling stackable>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                   <Segment>Content</Segment>\n//                 </Grid.Column>\n//               </Grid>\n//             </Grid.Column>\n//           </Grid>\n//         </Header>\n//       </div>\n//     );\n//     }\n//   }\n// }\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { loadUser }\n)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}