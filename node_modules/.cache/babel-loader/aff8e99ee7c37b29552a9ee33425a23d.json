{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Table, Icon, Button, Pagination, Header, Modal, Form, Search, Segment, Label, Popup } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport { deleteList, deleteListLead, addLeadNote } from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport FilterLeads from \"./FilterLeads\";\nconst styleMetrics = {\n  borderWidth: \"2px\",\n  // marginRight: '30px',\n  borderRadius: \"10px\",\n  borderColor: \"#CECFD0\",\n  borderStyle: \"solid\",\n  margin: \"20px\",\n  padding: \"20px\",\n  // width: \"10px\",\n  height: \"150px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.68)\" // padding: \"20px\"\n\n};\nconst statusArray = [{\n  key: \"10\",\n  text: \"Meeting booked\",\n  value: \"Meeting booked\"\n}, {\n  key: \"25\",\n  text: \"Met with decision maker\",\n  value: \"Met with decision maker\"\n}, {\n  key: \"50\",\n  text: \"Proposal sent\",\n  value: \"Proposal sent\"\n}, {\n  key: \"90\",\n  text: \"Verbal confirmation\",\n  value: \"Verbal confirmation\"\n}, {\n  key: \"100\",\n  text: \"Sale closed\",\n  value: \"Sale closed\"\n}, {\n  key: \"notfit\",\n  text: \"Not fit for business\",\n  value: \"Not fit for business\"\n}, {\n  key: \"incorrect\",\n  text: \"Incorrect contact\",\n  value: \"Incorrect contact\"\n}, {\n  key: \"contact\",\n  text: \"Contact at later date\",\n  value: \"Contact at later date\"\n}]; // ! Search bar\n\nconst resultRenderer = ({\n  first_name\n}) => React.createElement(Label, {\n  content: first_name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  position: PropTypes.string\n};\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      activePage: 1,\n      statusInput: \"\",\n      nextStepsInput: \"\",\n      commentsInput: \"\",\n      totalLeadCount: 0,\n      totalMeetingsBooked: 0,\n      totalNotContacted: 0,\n      filter: \"\"\n    };\n\n    this.formattedListArray = () => {\n      let listArray = this.props.listleads.leads;\n\n      if (listArray) {\n        let array = listArray.map(lead => {\n          let last = null;\n\n          if (lead.leadnotes.length) {\n            last = lead.leadnotes[lead.leadnotes.length - 1];\n          }\n\n          if (lead.leadnotes.length > 0) {\n            let date = new Date(last.created_at);\n            let dateString = date.toDateString();\n            return {\n              id: lead.lead.id,\n              first_name: lead.lead.first_name,\n              last_name: lead.lead.last_name,\n              position: lead.lead.position,\n              company: lead.lead.company,\n              status: last.status,\n              next_steps: last.next_steps,\n              comments: last.comments,\n              comments_date: dateString,\n              last_date_contacted: lead.lead.contacted_date,\n              email: lead.lead.email,\n              phone_number: lead.lead.phone_number\n            };\n          } else {\n            return {\n              id: lead.lead.id,\n              first_name: lead.lead.first_name,\n              last_name: lead.lead.last_name,\n              position: lead.lead.position,\n              company: lead.lead.company,\n              status: null,\n              next_steps: null,\n              comments: null,\n              comments_date: null,\n              last_date_contacted: lead.lead.contacted_date,\n              email: lead.lead.email,\n              phone_number: lead.lead.phone_number\n            };\n          }\n        });\n        this.setState({\n          data: array\n        });\n      }\n    };\n\n    this.handleDeleteClick = (event, lead_id) => {\n      event.preventDefault();\n      let newArray = this.state.data.filter(data => data.id !== lead_id);\n      this.setState({\n        data: newArray\n      });\n      this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n      this.countTotalLeads();\n      this.countNotContacted();\n      this.countMeetingsBooked(); // debugger\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        statusInput: targetValue\n      });\n    };\n\n    this.handleAddLeadNote = leadId => {\n      const _this$state2 = this.state,\n            statusInput = _this$state2.statusInput,\n            nextStepsInput = _this$state2.nextStepsInput,\n            commentsInput = _this$state2.commentsInput;\n      this.props.addLeadNote(statusInput, nextStepsInput, this.props.auth.user.id, leadId, commentsInput);\n    };\n\n    this.countTotalLeads = () => {\n      if (this.props.listleads) {\n        let totalLeads; // console.log(this.props.lists);\n\n        totalLeads = this.props.listleads.leads.length;\n        this.setState({\n          totalLeadCount: totalLeads\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.countMeetingsBooked = () => {\n      let meetingsBookedCount = 0;\n\n      if (this.props.listleads) {\n        this.props.listleads.leads.forEach(lead => {\n          lead.leadnotes.forEach(leadnote => {\n            if (leadnote.status === \"Meeting booked\") {\n              meetingsBookedCount += 1;\n            }\n          });\n        });\n        this.setState({\n          totalMeetingsBooked: meetingsBookedCount\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.countNotContacted = () => {\n      let notContacted = 0; // let testArray = []\n\n      if (this.props.listleads) {\n        this.props.listleads.leads.forEach(lead => {\n          if (lead.leadnotes.length < 1) {\n            notContacted += 1;\n          }\n        });\n        this.setState({\n          totalNotContacted: notContacted\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.filteredLeads = () => {\n      return this.state.data.filter(lead => lead.first_name.toUpperCase().includes(this.state.filter.toUpperCase()));\n    };\n  }\n\n  // ! ////////////////////////////////////// CLASS COMPONENT FUNCTIONS ////////////////////////////////////////////////////////////\n  componentDidMount() {\n    this.formattedListArray();\n    this.countTotalLeads();\n    this.countNotContacted();\n    this.countMeetingsBooked();\n  }\n\n  // ! /////////////////////////////////////////////////////////// RENDER START ///////////////////////////////////////////////////////////////////////////////\n  render() {\n    const _this$state3 = this.state,\n          column = _this$state3.column,\n          data = _this$state3.data,\n          direction = _this$state3.direction,\n          activePage = _this$state3.activePage,\n          totalLeadCount = _this$state3.totalLeadCount,\n          totalMeetingsBooked = _this$state3.totalMeetingsBooked,\n          totalNotContacted = _this$state3.totalNotContacted,\n          filter = _this$state3.filter;\n    const leadnotesArray = this.props.leadnotes;\n    console.log(this.state);\n    let renderData;\n    let dataSlice;\n\n    if (filter) {\n      renderData = this.filteredLeads();\n    } else {\n      renderData = data;\n    } // console.log(renderData)\n\n\n    if (renderData) {\n      if (activePage === 1) {\n        dataSlice = renderData.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = renderData.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = renderData.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = renderData.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = renderData.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = renderData.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = renderData.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = renderData.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = renderData.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = renderData.slice(90, 99);\n      } else {\n        dataSlice = [];\n      } // return dataSlice\n\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      style: {\n        backgroundImage: \"url(\".concat(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\", \")\")\n      },\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: \"equal\",\n      style: {\n        position: 'fixed',\n        top: \"70px\",\n        paddingRight: \"70px\",\n        paddingLeft: \"70px\",\n        paddingBottom: \"35px\",\n        position: \"relative\",\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, totalLeadCount), React.createElement(Image, {\n      size: \"small\",\n      floated: \"right\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Meetings Booked\"), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, totalMeetingsBooked), React.createElement(Image, {\n      size: \"small\",\n      floated: \"right\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      style: styleMetrics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Not Yet Contacted\"), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, totalNotContacted), React.createElement(Image, {\n      size: \"small\",\n      floated: \"right\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }))), this.props.listleads.leads ? React.createElement(Grid.Row, {\n      style: {\n        margin: \"40px\",\n        minHeight: \"450px\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      content: \"Find Someone\",\n      trigger: React.createElement(Search, {\n        style: {\n          margin: \"15px\"\n        },\n        onSearchChange: _.debounce((event, {\n          value\n        }) => this.handleChange(event, value), 300),\n        noResultsMessage: \"No results found\",\n        showNoResults: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    })), React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"first_name\" ? direction : null,\n      onClick: this.handleSort(\"first_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_name\" ? direction : null,\n      onClick: this.handleSort(\"last_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"position\" ? direction : null,\n      onClick: this.handleSort(\"position\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"company\" ? direction : null,\n      onClick: this.handleSort(\"company\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"status\" ? direction : null,\n      onClick: this.handleSort(\"status\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"next_steps\" ? direction : null,\n      onClick: this.handleSort(\"next_steps\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_date_contacted\" ? direction : null,\n      onClick: this.handleSort(\"last_date_contacted\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Last Date Contacted\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Edit Lead\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Delete Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, _.map(dataSlice, ({\n      id,\n      first_name,\n      last_name,\n      position,\n      company,\n      status,\n      next_steps,\n      last_date_contacted,\n      phone_number,\n      email,\n      comments,\n      comments_date\n    }) => React.createElement(Table.Row, {\n      textAlign: \"center\",\n      key: id // onClick={() => this.handleRowClick(id)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, first_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, last_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, position), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, company), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, status), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, next_steps), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, comments_date), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        name: \"edit outline\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, first_name, \" \", last_name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), \" \", position ? position + \",\" : null, \" \", company), React.createElement(Modal.Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, phone_number ? \"Phone:\" + phone_number : null, \" \", \"Email: \", email, React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        name: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"Send an email to \", first_name), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(MailForm, {\n      email: email,\n      myEmail: this.props.auth.user.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    })))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      // fluid\n      onChange: this.handleDropdown,\n      name: \"statusInput\",\n      label: \"Status\",\n      options: statusArray,\n      placeholder: status ? status : \"Select status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"nextStepsInput\",\n      label: \"Next Steps\",\n      placeholder: next_steps ? next_steps : \"Next steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    })), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"commentsInput\",\n      control: \"textarea\",\n      rows: \"3\",\n      label: \"Notes\",\n      value: comments ? comments_date + comments : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.handleAddLeadNote(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, \"Save\"))))), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"trash alternate outline\",\n      onClick: event => this.handleDeleteClick(event, id),\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }))))), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, data.length > 10 ? React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      boundaryRange: 0,\n      defaultActivePage: 1,\n      ellipsisItem: \"...\",\n      firstItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      lastItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      prevItem: {\n        content: React.createElement(Icon, {\n          name: \"angle left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      nextItem: {\n        content: React.createElement(Icon, {\n          name: \"angle right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      siblingRange: 1,\n      totalPages: 10,\n      onPageChange: (event, {\n        activePage\n      }) => this.handlePageChange(activePage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }))) : null)))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, \"You do not have any leads saved under this list.\"), React.createElement(Button, {\n      as: Link,\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, \"Go to Search\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  deleteListLead,\n  addLeadNote\n})(Dashboard);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Table","Icon","Button","Pagination","Header","Modal","Form","Search","Segment","Label","Popup","Link","connect","_","Navbar","MailForm","deleteList","deleteListLead","addLeadNote","PropTypes","FilterLeads","styleMetrics","borderWidth","borderRadius","borderColor","borderStyle","margin","padding","height","boxShadow","statusArray","key","text","value","resultRenderer","first_name","propTypes","string","last_name","position","Dashboard","state","column","data","direction","activePage","statusInput","nextStepsInput","commentsInput","totalLeadCount","totalMeetingsBooked","totalNotContacted","filter","formattedListArray","listArray","props","listleads","leads","array","map","lead","last","leadnotes","length","date","Date","created_at","dateString","toDateString","id","company","status","next_steps","comments","comments_date","last_date_contacted","contacted_date","email","phone_number","setState","handleDeleteClick","event","lead_id","preventDefault","newArray","list","countTotalLeads","countNotContacted","countMeetingsBooked","handleSort","clickedColumn","sortBy","reverse","handlePageChange","handleChange","e","targetValue","target","targetName","name","handleDropdown","handleAddLeadNote","leadId","auth","user","totalLeads","meetingsBookedCount","forEach","leadnote","notContacted","filteredLeads","toUpperCase","includes","componentDidMount","render","leadnotesArray","console","log","renderData","dataSlice","slice","backgroundImage","top","paddingRight","paddingLeft","paddingBottom","textAlign","minHeight","debounce","content","icon","mapStateToProps","lists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  Header,\n  Modal,\n  Form,\n  Search,\n  Segment,\n  Label,\n  Popup\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport { deleteList, deleteListLead, addLeadNote } from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport FilterLeads from \"./FilterLeads\";\n\nconst styleMetrics = {\n  borderWidth: \"2px\",\n  // marginRight: '30px',\n  borderRadius: \"10px\",\n  borderColor: \"#CECFD0\",\n  borderStyle: \"solid\",\n  margin: \"20px\",\n  padding: \"20px\",\n  // width: \"10px\",\n  height: \"150px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.68)\"\n  // padding: \"20px\"\n};\n\nconst statusArray = [\n  { key: \"10\", text: \"Meeting booked\", value: \"Meeting booked\" },\n  {\n    key: \"25\",\n    text: \"Met with decision maker\",\n    value: \"Met with decision maker\"\n  },\n  { key: \"50\", text: \"Proposal sent\", value: \"Proposal sent\" },\n  { key: \"90\", text: \"Verbal confirmation\", value: \"Verbal confirmation\" },\n  { key: \"100\", text: \"Sale closed\", value: \"Sale closed\" },\n  {\n    key: \"notfit\",\n    text: \"Not fit for business\",\n    value: \"Not fit for business\"\n  },\n  { key: \"incorrect\", text: \"Incorrect contact\", value: \"Incorrect contact\" },\n  {\n    key: \"contact\",\n    text: \"Contact at later date\",\n    value: \"Contact at later date\"\n  }\n];\n\n// ! Search bar\n\nconst resultRenderer = ({ first_name }) => <Label content={first_name} />;\n\nresultRenderer.propTypes = {\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  position: PropTypes.string\n};\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    activePage: 1,\n    statusInput: \"\",\n    nextStepsInput: \"\",\n    commentsInput: \"\",\n    totalLeadCount: 0,\n    totalMeetingsBooked: 0,\n    totalNotContacted: 0,\n    filter: \"\"\n  };\n\n  // ! ////////////////////////////////////// CLASS COMPONENT FUNCTIONS ////////////////////////////////////////////////////////////\n\n  componentDidMount() {\n    this.formattedListArray();\n    this.countTotalLeads();\n    this.countNotContacted();\n    this.countMeetingsBooked();\n  }\n\n  formattedListArray = () => {\n    let listArray = this.props.listleads.leads;\n    if (listArray) {\n      let array = listArray.map(lead => {\n        let last = null;\n        if (lead.leadnotes.length) {\n          last = lead.leadnotes[lead.leadnotes.length - 1];\n        }\n        if (lead.leadnotes.length > 0) {\n          let date = new Date(last.created_at);\n          let dateString = date.toDateString();\n          return {\n            id: lead.lead.id,\n            first_name: lead.lead.first_name,\n            last_name: lead.lead.last_name,\n            position: lead.lead.position,\n            company: lead.lead.company,\n            status: last.status,\n            next_steps: last.next_steps,\n            comments: last.comments,\n            comments_date: dateString,\n            last_date_contacted: lead.lead.contacted_date,\n            email: lead.lead.email,\n            phone_number: lead.lead.phone_number\n          };\n        } else {\n          return {\n            id: lead.lead.id,\n            first_name: lead.lead.first_name,\n            last_name: lead.lead.last_name,\n            position: lead.lead.position,\n            company: lead.lead.company,\n            status: null,\n            next_steps: null,\n            comments: null,\n            comments_date: null,\n            last_date_contacted: lead.lead.contacted_date,\n            email: lead.lead.email,\n            phone_number: lead.lead.phone_number\n          };\n        }\n      });\n      this.setState({ data: array });\n    }\n  };\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault();\n    let newArray = this.state.data.filter(data => data.id !== lead_id);\n    this.setState({ data: newArray });\n    this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n    this.countTotalLeads();\n    this.countNotContacted();\n    this.countMeetingsBooked(); // debugger\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ statusInput: targetValue });\n  };\n\n  handleAddLeadNote = leadId => {\n    const { statusInput, nextStepsInput, commentsInput } = this.state;\n    this.props.addLeadNote(\n      statusInput,\n      nextStepsInput,\n      this.props.auth.user.id,\n      leadId,\n      commentsInput\n    );\n  };\n\n  // handleFetchClick = (id) => {\n  //   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n  // }\n\n  //? Function to count number of leads in this list\n  countTotalLeads = () => {\n    if (this.props.listleads) {\n      let totalLeads;\n      // console.log(this.props.lists);\n      totalLeads = this.props.listleads.leads.length;\n      this.setState({ totalLeadCount: totalLeads });\n    } else {\n      return null;\n    }\n  };\n\n  countMeetingsBooked = () => {\n    let meetingsBookedCount = 0;\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      this.setState({ totalMeetingsBooked: meetingsBookedCount });\n    } else {\n      return null;\n    }\n  };\n\n  countNotContacted = () => {\n    let notContacted = 0;\n    // let testArray = []\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      this.setState({ totalNotContacted: notContacted });\n    } else {\n      return null;\n    }\n  };\n\n  // ? Search Bar code\n\n  handleChange = (event, value) => {\n    this.setState({ filter: value });\n  };\n\n  filteredLeads = () => {\n    return this.state.data.filter(lead =>\n      lead.first_name.toUpperCase().includes(this.state.filter.toUpperCase())\n    );\n  };\n\n  // ! /////////////////////////////////////////////////////////// RENDER START ///////////////////////////////////////////////////////////////////////////////\n\n  render() {\n    const {\n      column,\n      data,\n      direction,\n      activePage,\n      totalLeadCount,\n      totalMeetingsBooked,\n      totalNotContacted,\n      filter\n    } = this.state;\n    const leadnotesArray = this.props.leadnotes;\n    console.log(this.state);\n    let renderData;\n    let dataSlice;\n    if (filter) {\n      renderData = this.filteredLeads();\n    } else {\n      renderData = data;\n    }\n\n    // console.log(renderData)\n    if (renderData) {\n      if (activePage === 1) {\n        dataSlice = renderData.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = renderData.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = renderData.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = renderData.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = renderData.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = renderData.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = renderData.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = renderData.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = renderData.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = renderData.slice(90, 99);\n      } else {\n        dataSlice = [];\n      }\n      // return dataSlice\n    }\n\n    return (\n      <div>\n        <Navbar />\n        <Grid\n          style={{\n            backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\"})`\n          }}\n          divided=\"vertically\"\n        >\n          {/* METRIC CARDS */}\n          <Grid.Row\n            columns=\"equal\"\n            style={{\n              position: 'fixed',\n              top: \"70px\",\n              paddingRight: \"70px\",\n              paddingLeft: \"70px\",\n              paddingBottom: \"35px\",\n              position: \"relative\",\n              textAlign: \"left\"\n            }}\n          >\n            <Grid.Column style={styleMetrics}>\n              <Header as=\"h2\">Total Leads</Header>\n              <Header as=\"h3\">{totalLeadCount}</Header>\n              <Image\n                size=\"small\"\n                floated=\"right\"\n                src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n              />\n            </Grid.Column>\n            <Grid.Column style={styleMetrics}>\n              <Header as=\"h2\">Meetings Booked</Header>\n              <Header as=\"h3\">{totalMeetingsBooked}</Header>\n              <Image\n                size=\"small\"\n                floated=\"right\"\n                src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQkSRgZv9fHBIZ5lFzTKwmraacs6QUA5uRFBuJR4EydKHSVwwZgfGIlTbZ1xT9ZobnU&_nc_ht=scontent-ort2-2.xx&oh=22d18caf4e251af44eb4b5b5807195cc&oe=5DF1636E\"\n              />\n            </Grid.Column>\n            <Grid.Column style={styleMetrics}>\n              <Header as=\"h2\">Not Yet Contacted</Header>\n              <Header as=\"h3\">{totalNotContacted}</Header>\n              <Image\n                size=\"small\"\n                floated=\"right\"\n                src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n          {this.props.listleads.leads ? (\n            <Grid.Row\n              style={{ margin: \"40px\", minHeight: \"450px\" }}\n              columns={1}\n            >\n              {/* TABLE OF CONTENTS */}\n              <Grid.Column>\n                <Table sortable selectable celled fixed>\n                  <Table.Header>\n                    <Popup content=\"Find Someone\" trigger={\n                    <Search\n                      style={{ margin: \"15px\" }}\n                      onSearchChange={_.debounce(\n                        (event, { value }) => this.handleChange(event, value),\n                        300\n                      )}\n                      noResultsMessage=\"No results found\"\n                      showNoResults={false}\n                    />} />\n                  </Table.Header>\n                  <Table.Header>\n                    <Table.Row textAlign=\"center\">\n                      <Table.HeaderCell\n                        sorted={column === \"first_name\" ? direction : null}\n                        onClick={this.handleSort(\"first_name\")}\n                      >\n                        First Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"last_name\" ? direction : null}\n                        onClick={this.handleSort(\"last_name\")}\n                      >\n                        Last Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"position\" ? direction : null}\n                        onClick={this.handleSort(\"position\")}\n                      >\n                        Position\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"company\" ? direction : null}\n                        onClick={this.handleSort(\"company\")}\n                      >\n                        Company\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"next_steps\" ? direction : null}\n                        onClick={this.handleSort(\"next_steps\")}\n                      >\n                        Next Steps\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={\n                          column === \"last_date_contacted\" ? direction : null\n                        }\n                        onClick={this.handleSort(\"last_date_contacted\")}\n                      >\n                        Last Date Contacted\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Edit Lead</Table.HeaderCell>\n                      <Table.HeaderCell>Delete Lead</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {_.map(\n                      dataSlice,\n                      ({\n                        id,\n                        first_name,\n                        last_name,\n                        position,\n                        company,\n                        status,\n                        next_steps,\n                        last_date_contacted,\n                        phone_number,\n                        email,\n                        comments,\n                        comments_date\n                      }) => (\n                        <Table.Row\n                          textAlign=\"center\"\n                          key={id}\n                          // onClick={() => this.handleRowClick(id)}\n                        >\n                          <Table.Cell>{first_name}</Table.Cell>\n                          <Table.Cell>{last_name}</Table.Cell>\n                          <Table.Cell>{position}</Table.Cell>\n                          <Table.Cell>{company}</Table.Cell>\n                          <Table.Cell>{status}</Table.Cell>\n                          <Table.Cell>{next_steps}</Table.Cell>\n                          <Table.Cell>{comments_date}</Table.Cell>\n                          <Table.Cell>\n                            {/* {leadnotesArray.find(lead => )} */}\n                            <Modal\n                              trigger={\n                                <Icon name={\"edit outline\"} size=\"large\" />\n                              }\n                            >\n                              <Modal.Header as=\"h2\">\n                                {first_name} {last_name} <br />{\" \"}\n                                {position ? position + \",\" : null} {company}\n                              </Modal.Header>\n                              <Modal.Header as=\"h3\">\n                                {phone_number ? \"Phone:\" + phone_number : null}{\" \"}\n                                Email: {email}\n                                {/* <Icon name={\"envelope\"}></Icon> */}\n                                <Modal\n                                  trigger={<Icon name={\"envelope\"}></Icon>}\n                                >\n                                  <Modal.Header>\n                                    Send an email to {first_name}\n                                  </Modal.Header>\n                                  <Modal.Content>\n                                    <MailForm\n                                      email={email}\n                                      myEmail={this.props.auth.user.email}\n                                    />\n                                  </Modal.Content>\n                                </Modal>\n                              </Modal.Header>\n                              {/* <Modal.Header as='h3'>{position}, {company}</Modal.Header> */}\n\n                              <Modal.Content>\n                                <Form>\n                                  <Form.Group>\n                                    <Form.Select\n                                      // fluid\n                                      onChange={this.handleDropdown}\n                                      name=\"statusInput\"\n                                      label=\"Status\"\n                                      options={statusArray}\n                                      placeholder={\n                                        status ? status : \"Select status\"\n                                      }\n                                    />\n                                    {/* <Form.Header>Next Steps</Form.Header> */}\n                                    <Form.Input\n                                      onChange={this.handleChange}\n                                      name=\"nextStepsInput\"\n                                      label=\"Next Steps\"\n                                      placeholder={\n                                        next_steps ? next_steps : \"Next steps\"\n                                      }\n                                    ></Form.Input>\n                                  </Form.Group>\n                                  <Form.Input\n                                    onChange={this.handleChange}\n                                    name=\"commentsInput\"\n                                    control=\"textarea\"\n                                    rows=\"3\"\n                                    label=\"Notes\"\n                                    value={\n                                      comments ? comments_date + comments : null\n                                    }\n                                  />\n                                  <Button\n                                    onClick={() => this.handleAddLeadNote(id)}\n                                  >\n                                    Save\n                                  </Button>\n                                  {/* <Form.Description></Form.Description> */}\n                                </Form>\n                              </Modal.Content>\n                            </Modal>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Icon\n                              name={\"trash alternate outline\"}\n                              onClick={event =>\n                                this.handleDeleteClick(event, id)\n                              }\n                              size=\"large\"\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    )}\n                  </Table.Body>\n                  <Table.Footer>\n                    {data.length > 10 ? (\n                      <Table.Row>\n                        <Table.HeaderCell colSpan=\"3\">\n                          <Pagination\n                            boundaryRange={0}\n                            defaultActivePage={1}\n                            ellipsisItem={\"...\"}\n                            firstItem={{\n                              content: <Icon name=\"angle double left\" />,\n                              icon: true\n                            }}\n                            lastItem={{\n                              content: <Icon name=\"angle double right\" />,\n                              icon: true\n                            }}\n                            prevItem={{\n                              content: <Icon name=\"angle left\" />,\n                              icon: true\n                            }}\n                            nextItem={{\n                              content: <Icon name=\"angle right\" />,\n                              icon: true\n                            }}\n                            siblingRange={1}\n                            totalPages={10}\n                            onPageChange={(event, { activePage }) =>\n                              this.handlePageChange(activePage)\n                            }\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    ) : null}\n                  </Table.Footer>\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          ) : (\n            <div>\n              <Header>You do not have any leads saved under this list.</Header>\n              <Button as={Link} to=\"/search\">\n                Go to Search\n              </Button>\n            </div>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, deleteListLead, addLeadNote }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}