{"ast":null,"code":"// import PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n// import React, { Component } from 'react'\n// import {\n//   Button,\n//   Container,\n//   Divider,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   List,\n//   Menu,\n//   Responsive,\n//   Segment,\n//   Sidebar,\n//   Visibility,\n// } from 'semantic-ui-react'\n// // Heads up!\n// // We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\n// // For more advanced usage please check Responsive docs under the \"Usage\" section.\n// const getWidth = () => {\n//   const isSSR = typeof window === 'undefined'\n//   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n// }\n// /* eslint-disable react/no-multi-comp */\n// /* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n//  * such things.\n//  */\n// const HomepageHeading = ({ mobile }) => (\n//   <Container text>\n//     <Header\n//       as='h1'\n//       content='Imagine-a-Company'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '2em' : '4em',\n//         fontWeight: 'normal',\n//         marginBottom: 0,\n//         marginTop: mobile ? '1.5em' : '3em',\n//       }}\n//     />\n//     <Header\n//       as='h2'\n//       content='Do whatever you want when you want to.'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '1.5em' : '1.7em',\n//         fontWeight: 'normal',\n//         marginTop: mobile ? '0.5em' : '1.5em',\n//       }}\n//     />\n//     <Button as={Link} to='/search' primary size='huge'>\n//       Get Started\n//       <Icon name='right arrow' />\n//     </Button>\n//   </Container>\n// )\n// HomepageHeading.propTypes = {\n//   mobile: PropTypes.bool,\n// }\n// /* Heads up!\n//  * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n//  * It can be more complicated, but you can create really flexible markup.\n//  */\n// class DesktopContainer extends Component {\n//   state = {}\n//   hideFixedMenu = () => this.setState({ fixed: false })\n//   showFixedMenu = () => this.setState({ fixed: true })\n//   render() {\n//     const { children } = this.props\n//     const { fixed } = this.state\n//     return (\n//       <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n//         <Visibility\n//           once={false}\n//           onBottomPassed={this.showFixedMenu}\n//           onBottomPassedReverse={this.hideFixedMenu}\n//         >\n//           <Segment\n//             inverted\n//             textAlign='center'\n//             style={{ minHeight: 700, padding: '1em 0em' }}\n//             vertical\n//           >\n//             <Menu\n//               fixed={fixed ? 'top' : null}\n//               inverted={!fixed}\n//               pointing={!fixed}\n//               secondary={!fixed}\n//               size='large'\n//             >\n//               <Container>\n//                 <Menu.Item as={Link} to='/' active>\n//                   Home\n//                 </Menu.Item>\n//                 <Menu.Item as={Link} to='/leadlists'>Dashboard</Menu.Item>\n//                 <Menu.Item as={Link} to='/profile'>My Profile</Menu.Item>\n//                 <Menu.Item as={Link} to='/results'>Results</Menu.Item>\n//                 <Menu.Item position='right'>\n//                   <Button as={Link} to='/login' inverted={!fixed}>\n//                     Log in\n//                   </Button>\n//                   <Button as={Link} to='/signup' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n//                     Sign Up\n//                   </Button>\n//                 </Menu.Item>\n//               </Container>\n//             </Menu>\n//             <HomepageHeading />\n//           </Segment>\n//         </Visibility>\n//         {children}\n//       </Responsive>\n//     )\n//   }\n// }\n// DesktopContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n// class MobileContainer extends Component {\n//   state = {}\n//   handleSidebarHide = () => this.setState({ sidebarOpened: false })\n//   handleToggle = () => this.setState({ sidebarOpened: true })\n//   render() {\n//     const { children } = this.props\n//     const { sidebarOpened } = this.state\n//     return (\n//       <Responsive\n//         as={Sidebar.Pushable}\n//         getWidth={getWidth}\n//         maxWidth={Responsive.onlyMobile.maxWidth}\n//       >\n//         <Sidebar\n//           as={Menu}\n//           animation='push'\n//           inverted\n//           onHide={this.handleSidebarHide}\n//           vertical\n//           visible={sidebarOpened}\n//         >\n//           <Menu.Item as='a' active>\n//             Home\n//           </Menu.Item>\n//           <Menu.Item as='a'>Work</Menu.Item>\n//           <Menu.Item as='a'>Company</Menu.Item>\n//           <Menu.Item as='a'>Careers</Menu.Item>\n//           <Menu.Item as='a'>Log in</Menu.Item>\n//           <Menu.Item as='a'>Sign Up</Menu.Item>\n//         </Sidebar>\n//         <Sidebar.Pusher dimmed={sidebarOpened}>\n//           <Segment\n//             inverted\n//             textAlign='center'\n//             style={{ minHeight: 350, padding: '1em 0em' }}\n//             vertical\n//           >\n//             <Container>\n//               <Menu inverted pointing secondary size='large'>\n//                 <Menu.Item onClick={this.handleToggle}>\n//                   <Icon name='sidebar' />\n//                 </Menu.Item>\n//                 <Menu.Item position='right'>\n//                   <Button as={Link} to='/login' inverted>\n//                     Log in\n//                   </Button>\n//                   <Button as={Link} to='/signup' inverted style={{ marginLeft: '0.5em' }}>\n//                     Sign Up\n//                   </Button>\n//                 </Menu.Item>\n//               </Menu>\n//             </Container>\n//             <HomepageHeading mobile />\n//           </Segment>\n//           {children}\n//         </Sidebar.Pusher>\n//       </Responsive>\n//     )\n//   }\n// }\n// MobileContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n// const ResponsiveContainer = ({ children }) => (\n//   <div>\n//     <DesktopContainer>{children}</DesktopContainer>\n//     <MobileContainer>{children}</MobileContainer>\n//   </div>\n// )\n// ResponsiveContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n// const HomepageLayout = () => (\n//   <ResponsiveContainer>\n//     <Segment style={{ padding: '8em 0em' }} vertical>\n//       <Grid container stackable verticalAlign='middle'>\n//         <Grid.Row>\n//           <Grid.Column width={8}>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               We Help Companies and Companions\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>\n//               We can give your company superpowers to do things that they never thought possible.\n//               Let us delight your customers and empower your needs... through pure data analytics.\n//             </p>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               We Make Bananas That Can Dance\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>\n//               Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n//               bioengineered.\n//             </p>\n//           </Grid.Column>\n//           <Grid.Column floated='right' width={6}>\n//             <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\n//           </Grid.Column>\n//         </Grid.Row>\n//         <Grid.Row>\n//           <Grid.Column textAlign='center'>\n//             <Button size='huge'>Check Them Out</Button>\n//           </Grid.Column>\n//         </Grid.Row>\n//       </Grid>\n//     </Segment>\n//     <Segment style={{ padding: '0em' }} vertical>\n//       <Grid celled='internally' columns='equal' stackable>\n//         <Grid.Row textAlign='center'>\n//           <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               \"What a Company\"\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n//           </Grid.Column>\n//           <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               \"I shouldn't have gone with their competitor.\"\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>\n//               <Image avatar src='/images/avatar/large/nan.jpg' />\n//               <b>Nan</b> Chief Fun Officer Acme Toys\n//             </p>\n//           </Grid.Column>\n//         </Grid.Row>\n//       </Grid>\n//     </Segment>\n//     <Segment style={{ padding: '8em 0em' }} vertical>\n//       <Container text>\n//         <Header as='h3' style={{ fontSize: '2em' }}>\n//           Breaking The Grid, Grabs Your Attention\n//         </Header>\n//         <p style={{ fontSize: '1.33em' }}>\n//           Instead of focusing on content creation and hard work, we have learned how to master the\n//           art of doing nothing by providing massive amounts of whitespace and generic content that\n//           can seem massive, monolithic and worth your attention.\n//         </p>\n//         <Button as='a' size='large'>\n//           Read More\n//         </Button>\n//         <Divider\n//           as='h4'\n//           className='header'\n//           horizontal\n//           style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n//         >\n//           <a href='#'>Case Studies</a>\n//         </Divider>\n//         <Header as='h3' style={{ fontSize: '2em' }}>\n//           Did We Tell You About Our Bananas?\n//         </Header>\n//         <p style={{ fontSize: '1.33em' }}>\n//           Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n//           it's really true. It took years of gene splicing and combinatory DNA research, but our\n//           bananas can really dance.\n//         </p>\n//         <Button as='a' size='large'>\n//           I'm Still Quite Interested\n//         </Button>\n//       </Container>\n//     </Segment>\n//     <Segment inverted vertical style={{ padding: '5em 0em' }}>\n//       <Container>\n//         <Grid divided inverted stackable>\n//           <Grid.Row>\n//             <Grid.Column width={3}>\n//               <Header inverted as='h4' content='About' />\n//               <List link inverted>\n//                 <List.Item as='a'>Sitemap</List.Item>\n//                 <List.Item as='a'>Contact Us</List.Item>\n//                 <List.Item as='a'>Religious Ceremonies</List.Item>\n//                 <List.Item as='a'>Gazebo Plans</List.Item>\n//               </List>\n//             </Grid.Column>\n//             <Grid.Column width={3}>\n//               <Header inverted as='h4' content='Services' />\n//               <List link inverted>\n//                 <List.Item as='a'>Banana Pre-Order</List.Item>\n//                 <List.Item as='a'>DNA FAQ</List.Item>\n//                 <List.Item as='a'>How To Access</List.Item>\n//                 <List.Item as='a'>Favorite X-Men</List.Item>\n//               </List>\n//             </Grid.Column>\n//             <Grid.Column width={7}>\n//               <Header as='h4' inverted>\n//                 Footer Header\n//               </Header>\n//               <p>\n//                 Extra space for a call to action inside the footer that could help re-engage users.\n//               </p>\n//             </Grid.Column>\n//           </Grid.Row>\n//         </Grid>\n//       </Container>\n//     </Segment>\n//   </ResponsiveContainer>\n// )\n// export default HomepageLayout","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LandingPage.js"],"names":[],"mappingssourcesContent":["// import PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n// import React, { Component } from 'react'\n// import {\n//   Button,\n//   Container,\n//   Divider,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   List,\n//   Menu,\n//   Responsive,\n//   Segment,\n//   Sidebar,\n//   Visibility,\n// } from 'semantic-ui-react'\n\n// // Heads up!\n// // We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\n// // For more advanced usage please check Responsive docs under the \"Usage\" section.\n// const getWidth = () => {\n//   const isSSR = typeof window === 'undefined'\n\n//   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n// }\n\n// /* eslint-disable react/no-multi-comp */\n// /* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n//  * such things.\n//  */\n// const HomepageHeading = ({ mobile }) => (\n//   <Container text>\n//     <Header\n//       as='h1'\n//       content='Imagine-a-Company'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '2em' : '4em',\n//         fontWeight: 'normal',\n//         marginBottom: 0,\n//         marginTop: mobile ? '1.5em' : '3em',\n//       }}\n//     />\n//     <Header\n//       as='h2'\n//       content='Do whatever you want when you want to.'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '1.5em' : '1.7em',\n//         fontWeight: 'normal',\n//         marginTop: mobile ? '0.5em' : '1.5em',\n//       }}\n//     />\n//     <Button as={Link} to='/search' primary size='huge'>\n//       Get Started\n//       <Icon name='right arrow' />\n//     </Button>\n//   </Container>\n// )\n\n// HomepageHeading.propTypes = {\n//   mobile: PropTypes.bool,\n// }\n\n// /* Heads up!\n//  * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n//  * It can be more complicated, but you can create really flexible markup.\n//  */\n// class DesktopContainer extends Component {\n//   state = {}\n\n//   hideFixedMenu = () => this.setState({ fixed: false })\n//   showFixedMenu = () => this.setState({ fixed: true })\n\n//   render() {\n//     const { children } = this.props\n//     const { fixed } = this.state\n\n//     return (\n//       <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n//         <Visibility\n//           once={false}\n//           onBottomPassed={this.showFixedMenu}\n//           onBottomPassedReverse={this.hideFixedMenu}\n//         >\n//           <Segment\n//             inverted\n//             textAlign='center'\n//             style={{ minHeight: 700, padding: '1em 0em' }}\n//             vertical\n//           >\n//             <Menu\n//               fixed={fixed ? 'top' : null}\n//               inverted={!fixed}\n//               pointing={!fixed}\n//               secondary={!fixed}\n//               size='large'\n//             >\n//               <Container>\n//                 <Menu.Item as={Link} to='/' active>\n//                   Home\n//                 </Menu.Item>\n//                 <Menu.Item as={Link} to='/leadlists'>Dashboard</Menu.Item>\n//                 <Menu.Item as={Link} to='/profile'>My Profile</Menu.Item>\n//                 <Menu.Item as={Link} to='/results'>Results</Menu.Item>\n//                 <Menu.Item position='right'>\n//                   <Button as={Link} to='/login' inverted={!fixed}>\n//                     Log in\n//                   </Button>\n//                   <Button as={Link} to='/signup' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n//                     Sign Up\n//                   </Button>\n//                 </Menu.Item>\n//               </Container>\n//             </Menu>\n//             <HomepageHeading />\n//           </Segment>\n//         </Visibility>\n\n//         {children}\n//       </Responsive>\n//     )\n//   }\n// }\n\n// DesktopContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n// class MobileContainer extends Component {\n//   state = {}\n\n//   handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n//   handleToggle = () => this.setState({ sidebarOpened: true })\n\n//   render() {\n//     const { children } = this.props\n//     const { sidebarOpened } = this.state\n\n//     return (\n//       <Responsive\n//         as={Sidebar.Pushable}\n//         getWidth={getWidth}\n//         maxWidth={Responsive.onlyMobile.maxWidth}\n//       >\n//         <Sidebar\n//           as={Menu}\n//           animation='push'\n//           inverted\n//           onHide={this.handleSidebarHide}\n//           vertical\n//           visible={sidebarOpened}\n//         >\n//           <Menu.Item as='a' active>\n//             Home\n//           </Menu.Item>\n//           <Menu.Item as='a'>Work</Menu.Item>\n//           <Menu.Item as='a'>Company</Menu.Item>\n//           <Menu.Item as='a'>Careers</Menu.Item>\n//           <Menu.Item as='a'>Log in</Menu.Item>\n//           <Menu.Item as='a'>Sign Up</Menu.Item>\n//         </Sidebar>\n\n//         <Sidebar.Pusher dimmed={sidebarOpened}>\n//           <Segment\n//             inverted\n//             textAlign='center'\n//             style={{ minHeight: 350, padding: '1em 0em' }}\n//             vertical\n//           >\n//             <Container>\n//               <Menu inverted pointing secondary size='large'>\n//                 <Menu.Item onClick={this.handleToggle}>\n//                   <Icon name='sidebar' />\n//                 </Menu.Item>\n//                 <Menu.Item position='right'>\n//                   <Button as={Link} to='/login' inverted>\n//                     Log in\n//                   </Button>\n//                   <Button as={Link} to='/signup' inverted style={{ marginLeft: '0.5em' }}>\n//                     Sign Up\n//                   </Button>\n//                 </Menu.Item>\n//               </Menu>\n//             </Container>\n//             <HomepageHeading mobile />\n//           </Segment>\n\n//           {children}\n//         </Sidebar.Pusher>\n//       </Responsive>\n//     )\n//   }\n// }\n\n// MobileContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n// const ResponsiveContainer = ({ children }) => (\n//   <div>\n//     <DesktopContainer>{children}</DesktopContainer>\n//     <MobileContainer>{children}</MobileContainer>\n//   </div>\n// )\n\n// ResponsiveContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n// const HomepageLayout = () => (\n//   <ResponsiveContainer>\n//     <Segment style={{ padding: '8em 0em' }} vertical>\n//       <Grid container stackable verticalAlign='middle'>\n//         <Grid.Row>\n//           <Grid.Column width={8}>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               We Help Companies and Companions\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>\n//               We can give your company superpowers to do things that they never thought possible.\n//               Let us delight your customers and empower your needs... through pure data analytics.\n//             </p>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               We Make Bananas That Can Dance\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>\n//               Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n//               bioengineered.\n//             </p>\n//           </Grid.Column>\n//           <Grid.Column floated='right' width={6}>\n//             <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\n//           </Grid.Column>\n//         </Grid.Row>\n//         <Grid.Row>\n//           <Grid.Column textAlign='center'>\n//             <Button size='huge'>Check Them Out</Button>\n//           </Grid.Column>\n//         </Grid.Row>\n//       </Grid>\n//     </Segment>\n//     <Segment style={{ padding: '0em' }} vertical>\n//       <Grid celled='internally' columns='equal' stackable>\n//         <Grid.Row textAlign='center'>\n//           <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               \"What a Company\"\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n//           </Grid.Column>\n//           <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n//             <Header as='h3' style={{ fontSize: '2em' }}>\n//               \"I shouldn't have gone with their competitor.\"\n//             </Header>\n//             <p style={{ fontSize: '1.33em' }}>\n//               <Image avatar src='/images/avatar/large/nan.jpg' />\n//               <b>Nan</b> Chief Fun Officer Acme Toys\n//             </p>\n//           </Grid.Column>\n//         </Grid.Row>\n//       </Grid>\n//     </Segment>\n//     <Segment style={{ padding: '8em 0em' }} vertical>\n//       <Container text>\n//         <Header as='h3' style={{ fontSize: '2em' }}>\n//           Breaking The Grid, Grabs Your Attention\n//         </Header>\n//         <p style={{ fontSize: '1.33em' }}>\n//           Instead of focusing on content creation and hard work, we have learned how to master the\n//           art of doing nothing by providing massive amounts of whitespace and generic content that\n//           can seem massive, monolithic and worth your attention.\n//         </p>\n//         <Button as='a' size='large'>\n//           Read More\n//         </Button>\n//         <Divider\n//           as='h4'\n//           className='header'\n//           horizontal\n//           style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n//         >\n//           <a href='#'>Case Studies</a>\n//         </Divider>\n//         <Header as='h3' style={{ fontSize: '2em' }}>\n//           Did We Tell You About Our Bananas?\n//         </Header>\n//         <p style={{ fontSize: '1.33em' }}>\n//           Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n//           it's really true. It took years of gene splicing and combinatory DNA research, but our\n//           bananas can really dance.\n//         </p>\n//         <Button as='a' size='large'>\n//           I'm Still Quite Interested\n//         </Button>\n//       </Container>\n//     </Segment>\n//     <Segment inverted vertical style={{ padding: '5em 0em' }}>\n//       <Container>\n//         <Grid divided inverted stackable>\n//           <Grid.Row>\n//             <Grid.Column width={3}>\n//               <Header inverted as='h4' content='About' />\n//               <List link inverted>\n//                 <List.Item as='a'>Sitemap</List.Item>\n//                 <List.Item as='a'>Contact Us</List.Item>\n//                 <List.Item as='a'>Religious Ceremonies</List.Item>\n//                 <List.Item as='a'>Gazebo Plans</List.Item>\n//               </List>\n//             </Grid.Column>\n//             <Grid.Column width={3}>\n//               <Header inverted as='h4' content='Services' />\n//               <List link inverted>\n//                 <List.Item as='a'>Banana Pre-Order</List.Item>\n//                 <List.Item as='a'>DNA FAQ</List.Item>\n//                 <List.Item as='a'>How To Access</List.Item>\n//                 <List.Item as='a'>Favorite X-Men</List.Item>\n//               </List>\n//             </Grid.Column>\n//             <Grid.Column width={7}>\n//               <Header as='h4' inverted>\n//                 Footer Header\n//               </Header>\n//               <p>\n//                 Extra space for a call to action inside the footer that could help re-engage users.\n//               </p>\n//             </Grid.Column>\n//           </Grid.Row>\n//         </Grid>\n//       </Container>\n//     </Segment>\n//   </ResponsiveContainer>\n// )\n// export default HomepageLayout"]},"metadata":{},"sourceType":"module"}