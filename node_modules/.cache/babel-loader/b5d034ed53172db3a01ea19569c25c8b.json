{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js\";\nimport React, { Component } from \"react\";\nimport { Table, Menu, Form, Icon, Modal, Header, Button, Dropdown, Input, Checkbox, Pagination } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: [],\n      activePage: ''\n    };\n    this.leadsPagination = [{\n      activePage: 1,\n      data: this.props.leads[0].slice(0, 9)\n    }, {\n      activePage: 2,\n      data: this.props.leads[0].slice(10, 19)\n    }, {\n      activePage: 3,\n      data: this.props.leads[0].slice(20, 29)\n    }, {\n      activePage: 4,\n      data: this.props.leads[0].slice(30, 39)\n    }, {\n      activePage: 5,\n      data: this.props.leads[0].slice(40, 49)\n    }, {\n      activePage: 6,\n      data: this.props.leads[0].slice(50, 59)\n    }, {\n      activePage: 7,\n      data: this.props.leads[0].slice(60, 69)\n    }, {\n      activePage: 8,\n      data: this.props.leads[0].slice(70, 79)\n    }, {\n      activePage: 9,\n      data: this.props.leads[0].slice(80, 89)\n    }, {\n      activePage: 10,\n      data: this.props.leads[0].slice(90, 99)\n    }];\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadsArray = _this$state.leadsArray,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.auth.user.id;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId); // this.props.addList(this.state.listId)\n    };\n\n    this.handleLeadClick = (lead, checked) => {\n      console.log(lead);\n      console.log(checked);\n\n      if (checked) {\n        this.setState({\n          leadsArray: [...this.state.leadsArray, lead]\n        });\n      } else {\n        const newArray = this.state.leadsArray.filter(l => l.value !== lead.value);\n        this.setState({\n          leadsArray: newArray\n        });\n      }\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n  }\n\n  componentDidMount() {\n    const array = this.props.leads[0];\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    const dataArray = this.props.leads[0];\n    const leadsPagination = [{\n      activePage: 1,\n      data: this.props.leads[0].slice(0, 9)\n    }, {\n      activePage: 2,\n      data: this.props.leads[0].slice(10, 19)\n    }, {\n      activePage: 3,\n      data: this.props.leads[0].slice(20, 29)\n    }, {\n      activePage: 4,\n      data: this.props.leads[0].slice(30, 39)\n    }, {\n      activePage: 5,\n      data: this.props.leads[0].slice(40, 49)\n    }, {\n      activePage: 6,\n      data: this.props.leads[0].slice(50, 59)\n    }, {\n      activePage: 7,\n      data: this.props.leads[0].slice(60, 69)\n    }, {\n      activePage: 8,\n      data: this.props.leads[0].slice(70, 79)\n    }, {\n      activePage: 9,\n      data: this.props.leads[0].slice(80, 89)\n    }, {\n      activePage: 10,\n      data: this.props.leads[0].slice(90, 99)\n    }];\n    console.log(\"state\", this.state);\n    console.log(\"list props\", this.props.lists[0]);\n    let listArray = [];\n    let lists = this.props.lists[0];\n    Object.keys(lists).forEach(function (i) {\n      listArray.push({\n        key: lists[i].id,\n        text: lists[i].name,\n        value: lists[i].id\n      });\n    }); // console.log(\"searchoptions\", searchOptions)\n\n    console.log(\"list array\", listArray); // const dataArray = this.props.leads[0];\n\n    console.log(\"leads pagination\", leadsPagination); // const dataArray = \n\n    const tableRow = dataArray.emails.map(lead => {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, lead.first_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, lead.last_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, lead.value), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, lead.position), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, dataArray.organization), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, lead.confidence), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onClick: (event, {\n          checked\n        }) => this.handleLeadClick(lead, checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(Table, {\n      singleLine: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.leadsArray.length > 0 ? React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, this.state.leadsArray.length, \" leads selected\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      centered: true,\n      trigger: React.createElement(Button, {\n        onClick: this.handleLeadChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Save Leads\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, Object.keys(lists).length > 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      name: \"listId\",\n      style: styleDropdown,\n      placeholder: \"Select list...\",\n      fluid: true,\n      disabled: this.state.newListName ? true : false,\n      selection: true,\n      options: listArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), \" Add Lead to List\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Create A New List\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), \" Add Lead to List\")))))) : null, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Confidence\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Save Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, tableRow), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      boundaryRange: 0,\n      defaultActivePage: 1,\n      ellipsisItem: \"...\",\n      firstItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      lastItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      prevItem: {\n        content: React.createElement(Icon, {\n          name: \"angle left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      nextItem: {\n        content: React.createElement(Icon, {\n          name: \"angle right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      siblingRange: 1,\n      totalPages: 10,\n      onPageChange: (event, {\n        activePage\n      }) => this.handlePageChange(activePage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addList: listName => {\n      dispatch(addList(listName));\n    },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(addLead(leadsArray, company, website, listId, newListName, userId));\n    }\n  };\n}; // Connect this component to all returns for the company search\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js"],"names":["React","Component","Table","Menu","Form","Icon","Modal","Header","Button","Dropdown","Input","Checkbox","Pagination","connect","addList","addLead","Navbar","uuidv1","require","styleDropdown","width","SearchResults","state","listId","leadSelection","company","website","newListName","leadsArray","activePage","leadsPagination","data","props","leads","slice","handleDropdown","e","targetValue","value","setState","handleChange","target","targetName","name","handleSubmit","console","log","userId","auth","user","id","handleLeadClick","lead","checked","newArray","filter","l","handlePageChange","componentDidMount","array","organization","domain","render","dataArray","lists","listArray","Object","keys","forEach","i","push","key","text","tableRow","emails","map","first_name","last_name","position","confidence","event","length","handleLeadChange","content","icon","mapStateToProps","mapDispatchToProps","dispatch","listName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Table,\n  Menu,\n  Form,\n  Icon,\n  Modal,\n  Header,\n  Button,\n  Dropdown,\n  Input,\n  Checkbox,\n  Pagination\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [], \n    activePage: ''\n  };\n\n  leadsPagination = [\n    {\n      activePage: 1,\n      data: this.props.leads[0].slice(0,9)\n    },\n    {\n      activePage: 2,\n      data: this.props.leads[0].slice(10,19)\n    },\n    {\n      activePage: 3,\n      data: this.props.leads[0].slice(20,29)\n    },\n    {\n      activePage: 4,\n      data: this.props.leads[0].slice(30,39)\n    },\n    {\n      activePage: 5,\n      data: this.props.leads[0].slice(40,49)\n    },\n    {\n      activePage: 6,\n      data: this.props.leads[0].slice(50,59)\n    },\n    {\n      activePage: 7,\n      data: this.props.leads[0].slice(60,69)\n    },\n    {\n      activePage: 8,\n      data: this.props.leads[0].slice(70,79)\n    },\n    {\n      activePage: 9,\n      data: this.props.leads[0].slice(80,89)\n    },\n    {\n      activePage: 10,\n      data: this.props.leads[0].slice(90,99)\n    }\n  ]\n\n\n  componentDidMount() {\n    const array = this.props.leads[0];\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n    // this.props.addList(this.state.listId)\n  };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n  handlePageChange = (activePage) => {\n    this.setState({activePage})\n  }\n\n  render() {\n\n    const dataArray = this.props.leads[0];\n\n    const leadsPagination = [\n      {\n        activePage: 1,\n        data: this.props.leads[0].slice(0,9)\n      },\n      {\n        activePage: 2,\n        data: this.props.leads[0].slice(10,19)\n      },\n      {\n        activePage: 3,\n        data: this.props.leads[0].slice(20,29)\n      },\n      {\n        activePage: 4,\n        data: this.props.leads[0].slice(30,39)\n      },\n      {\n        activePage: 5,\n        data: this.props.leads[0].slice(40,49)\n      },\n      {\n        activePage: 6,\n        data: this.props.leads[0].slice(50,59)\n      },\n      {\n        activePage: 7,\n        data: this.props.leads[0].slice(60,69)\n      },\n      {\n        activePage: 8,\n        data: this.props.leads[0].slice(70,79)\n      },\n      {\n        activePage: 9,\n        data: this.props.leads[0].slice(80,89)\n      },\n      {\n        activePage: 10,\n        data: this.props.leads[0].slice(90,99)\n      }\n    ]\n\n    console.log(\"state\", this.state);\n    console.log(\"list props\", this.props.lists[0]);\n    let listArray = [];\n    let lists = this.props.lists[0];\n    Object.keys(lists).forEach(function(i) {\n      listArray.push({\n        key: lists[i].id,\n        text: lists[i].name,\n        value: lists[i].id\n      });\n    });\n    // console.log(\"searchoptions\", searchOptions)\n    console.log(\"list array\", listArray);\n    // const dataArray = this.props.leads[0];\n    console.log(\"leads pagination\", leadsPagination);\n    // const dataArray = \n    const tableRow = dataArray.emails.map(lead => {\n      return (\n        <Table.Row>\n          <Table.Cell>{lead.first_name}</Table.Cell>\n          <Table.Cell>{lead.last_name}</Table.Cell>\n          <Table.Cell>{lead.value}</Table.Cell>\n          <Table.Cell>{lead.position}</Table.Cell>\n          <Table.Cell>{dataArray.organization}</Table.Cell>\n          <Table.Cell>{lead.confidence}</Table.Cell>\n          <Table.Cell>\n            <Checkbox\n              onClick={(event, { checked }) =>\n                this.handleLeadClick(lead, checked)\n              }\n            />\n          </Table.Cell>\n          {/* <Table.Cell>\n            <Modal\n              centered\n              trigger={\n                <Button onClick={() => this.handleLeadChange(lead)}>Add</Button>\n              }\n              basic\n              size=\"small\"\n            >\n              {Object.keys(lists).length > 1 ? (\n                <div>\n                  <Modal.Header as='h2'>Select an Existing List:</Modal.Header>\n                  <Modal.Actions>\n                    <Dropdown\n                      onChange={this.handleDropdown}\n                      name=\"listId\"\n                      style={styleDropdown}\n                      placeholder=\"Select list...\"\n                      fluid\n                      selection\n                      options={listArray}\n                    />\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    />\n                    <Button\n                      onClick={this.handleSubmit}\n                      basic\n                      color=\"red\"\n                      inverted\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Button>\n                  </Modal.Actions>{\" \"}\n                </div>\n              ) : (\n                <div>\n                  <Modal.Header as='h2'>\n                    You have no existing lists. \n                    Create a new list:\n                  </Modal.Header>\n                  <Modal.Actions>\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    />\n                    <Button\n                      onClick={this.handleSubmit}\n                      basic\n                      color=\"red\"\n                      inverted\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              )}\n            </Modal>\n          </Table.Cell> */}\n        </Table.Row>\n      );\n    });\n    return (\n      <div>\n        <Navbar />\n        <Table singleLine>\n          <Table.Header>\n            {this.state.leadsArray.length > 0 ? (\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"6\">\n                  {this.state.leadsArray.length} leads selected\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <Modal\n                    centered\n                    trigger={\n                      <Button onClick={this.handleLeadChange}>\n                        Save Leads\n                      </Button>\n                    }\n                    basic\n                    size=\"small\"\n                  >\n                    {Object.keys(lists).length > 1 ? (\n                      <div>\n                        <Modal.Header as=\"h2\">\n                          Select an Existing List:\n                        </Modal.Header>\n                        <Modal.Actions>\n                          <Dropdown\n                            onChange={this.handleDropdown}\n                            name=\"listId\"\n                            style={styleDropdown}\n                            placeholder=\"Select list...\"\n                            fluid\n                            disabled={this.state.newListName ? true : false}\n                            selection\n                            options={listArray}\n                          />\n                          <Modal.Header as=\"h2\">\n                            Select an Existing List:\n                          </Modal.Header>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Modal.Header as=\"h2\"></Modal.Header>\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    ) : (\n                      <div>\n                        <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                        <Modal.Actions>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    )}\n                  </Modal>\n                </Table.HeaderCell>\n              </Table.Row>\n            ) : null}\n            <Table.Row>\n              <Table.HeaderCell>First Name</Table.HeaderCell>\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell>Position</Table.HeaderCell>\n              <Table.HeaderCell>Company</Table.HeaderCell>\n              <Table.HeaderCell>Confidence</Table.HeaderCell>\n              <Table.HeaderCell>Save Lead</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{tableRow}</Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Pagination\n                  boundaryRange={0}\n                  defaultActivePage={1}\n                  ellipsisItem={\"...\"}\n                  firstItem={{ content: <Icon name='angle double left' />, icon: true }}\n                  lastItem={{ content: <Icon name='angle double right' />, icon: true }}\n                  prevItem={{ content: <Icon name='angle left' />, icon: true }}\n                  nextItem={{ content: <Icon name='angle right' />, icon: true }}\n                  siblingRange={1}\n                  totalPages={10}\n                  onPageChange={(event, { activePage }) => this.handlePageChange(activePage)}\n                />\n                {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addList: listName => {\n      dispatch(addList(listName));\n    },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(\n        addLead(leadsArray, company, website, listId, newListName, userId)\n      );\n    }\n  };\n};\n\n// Connect this component to all returns for the company search\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchResults);\n"]},"metadata":{},"sourceType":"module"}