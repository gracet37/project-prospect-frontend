{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Button, Pagination, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport Navbar from \"./Navbar\";\nimport { deleteList, deleteListLead } from '../actions';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: null,\n      direction: null,\n      activePage: 1\n    };\n\n    this.formattedListArray = () => {\n      // let listlead1 = listlead.listlead\n      let listArray = this.props.listlead[0]; //   if (listArray) {\n\n      console.log(\"LISTARRAY??\", listArray); //   let array = listArray.map(lead => {\n      //     return {\n      //       id: lead.id,\n      //       first_name: lead.first_name,\n      //       last_name: lead.last_name, \n      //       position: lead.position, \n      //       company: lead.company,\n      //       status: null, \n      //       next_steps: null, \n      //       last_date_contacted: lead.contacted_date, \n      //       email: lead.email,\n      //       phone_number: lead.phone_number\n      //     }\n      //   })\n      //   this.setState({data: array})\n      // }\n    };\n\n    this.handleDeleteClick = (event, lead_id) => {\n      event.preventDefault();\n      console.log(lead_id); // this.props.deleteListLead(, lead_id)\n    };\n\n    this.handleRowClick = id => {\n      console.log(\"row clicked\", id);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.formattedListArray();\n  } // formatListArray = (listArray) => {\n  //     console.log(\"list array\", listArray)\n  //     let filteredArray = [];\n  //     // let lists = this.props.lists[0];\n  //     Object.keys(listArray).forEach(function(i) {\n  //       let date = new Date(listArray[i].created_at)\n  //       let dateString = date.toDateString()\n  //       filteredArray.push({\n  //         id: listArray[i].id,\n  //         name: listArray[i].name,\n  //         created: dateString\n  //       });\n  //     });\n  //     // this.setState({data: listArray})}\n  //     return filteredArray\n  // }\n  //   formattedListArray = () => {\n  //     // if (this.props.lists.length) {\n  //     let array = []\n  //     this.props.listlead.forEach(list => {\n  //       let date = new Date(list.created_at)\n  //       let dateString = date.toDateString()\n  //       array.push({\n  //         id: list.id,\n  //         name: list.name,\n  //         date: dateString\n  //       })\n  //     })\n  //     this.setState({data: array})\n  //     // return array\n  // }\n\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction,\n          activePage = _this$state2.activePage;\n    console.log(this.props.lists);\n    console.log(data); // console.log(dataSlice)\n\n    if (data) {\n      let dataSlice;\n\n      if (activePage === 1) {\n        dataSlice = data.slice(0, 9);\n      } else if (activePage === 2) {\n        dataSlice = data.slice(10, 19);\n      } else if (activePage === 3) {\n        dataSlice = data.slice(20, 29);\n      } else if (activePage === 4) {\n        dataSlice = data.slice(30, 39);\n      } else if (activePage === 5) {\n        dataSlice = data.slice(40, 49);\n      } else if (activePage === 6) {\n        dataSlice = data.slice(50, 59);\n      } else if (activePage === 7) {\n        dataSlice = data.slice(60, 69);\n      } else if (activePage === 8) {\n        dataSlice = data.slice(70, 79);\n      } else if (activePage === 9) {\n        dataSlice = data.slice(80, 89);\n      } else if (activePage === 10) {\n        dataSlice = data.slice(90, 99);\n      } else {\n        dataSlice = [];\n      }\n\n      console.log(dataSlice);\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Total Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"XXXXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Open Leads\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Another METRIC\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"XXXX\"), React.createElement(Image, {\n      floated: \"right\",\n      size: \"small\",\n      src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))))), this.props.listlead.length > 0 ? React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === \"first_name\" ? direction : null,\n      onClick: this.handleSort(\"first_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_name\" ? direction : null,\n      onClick: this.handleSort(\"last_name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"position\" ? direction : null,\n      onClick: this.handleSort(\"position\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"company\" ? direction : null,\n      onClick: this.handleSort(\"company\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"status\" ? direction : null,\n      onClick: this.handleSort(\"status\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"next_steps\" ? direction : null,\n      onClick: this.handleSort(\"next_steps\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(Table.HeaderCell, {\n      sorted: column === \"last_date_contacted\" ? direction : null,\n      onClick: this.handleSort(\"last_date_contacted\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Last Date Contacted\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Delete Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, _.map(data, ({\n      id,\n      first_name,\n      last_name,\n      position,\n      company,\n      status,\n      next_steps,\n      last_date_contacted\n    }) => React.createElement(Table.Row, {\n      key: id,\n      onClick: () => this.handleRowClick(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, first_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, last_name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, position), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, company), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, status), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, next_steps), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, last_date_contacted), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'trash alternate outline',\n      onClick: event => this.handleDeleteClick(event, id),\n      name: \"trash alternate outline\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }))))), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      boundaryRange: 0,\n      defaultActivePage: 1,\n      ellipsisItem: \"...\",\n      firstItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      lastItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      prevItem: {\n        content: React.createElement(Icon, {\n          name: \"angle left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      nextItem: {\n        content: React.createElement(Icon, {\n          name: \"angle right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      siblingRange: 1,\n      totalPages: 10,\n      onPageChange: (event, {\n        activePage\n      }) => this.handlePageChange(activePage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }))))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"You do not have any leads saved under this list.\"), React.createElement(Button, {\n      as: Link,\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Go to Search\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listlead: state.listlead,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: id => {\n      dispatch(deleteList(id));\n    },\n    deleteListLead: (user_id, lead_id) => {\n      dispatch(deleteListLead(user_id, lead_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Card","Table","Icon","Button","Pagination","Header","Link","connect","_","Navbar","deleteList","deleteListLead","Dashboard","state","column","data","direction","activePage","formattedListArray","listArray","props","listlead","console","log","handleDeleteClick","event","lead_id","preventDefault","handleRowClick","id","handleSort","clickedColumn","setState","sortBy","reverse","handlePageChange","componentDidMount","render","lists","dataSlice","slice","height","length","map","first_name","last_name","position","company","status","next_steps","last_date_contacted","content","icon","mapStateToProps","auth","mapDispatchToProps","dispatch","user_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Image, Card, Table, Icon, Button, Pagination, Header} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash'\nimport Navbar from \"./Navbar\";\nimport { deleteList, deleteListLead } from '../actions'\n\nclass Dashboard extends Component {\n  // UPDATE DATA WITH LISTS \n  state = {\n    column: null,\n    data: null,\n    direction: null,\n    activePage: 1\n  };\n\n  componentDidMount() {\n   this.formattedListArray()\n  }\n\n  // formatListArray = (listArray) => {\n  //     console.log(\"list array\", listArray)\n  //     let filteredArray = [];\n  //     // let lists = this.props.lists[0];\n  //     Object.keys(listArray).forEach(function(i) {\n  //       let date = new Date(listArray[i].created_at)\n  //       let dateString = date.toDateString()\n  //       filteredArray.push({\n  //         id: listArray[i].id,\n  //         name: listArray[i].name,\n  //         created: dateString\n  //       });\n  //     });\n  //     // this.setState({data: listArray})}\n  //     return filteredArray\n  // }\n\n//   formattedListArray = () => {\n//     // if (this.props.lists.length) {\n//     let array = []\n//     this.props.listlead.forEach(list => {\n//       let date = new Date(list.created_at)\n//       let dateString = date.toDateString()\n//       array.push({\n//         id: list.id,\n//         name: list.name,\n//         date: dateString\n//       })\n//     })\n//     this.setState({data: array})\n//     // return array\n// }\n\nformattedListArray = () => {\n  // let listlead1 = listlead.listlead\n  let listArray = this.props.listlead[0]\n//   if (listArray) {\n  console.log(\"LISTARRAY??\", listArray)\n//   let array = listArray.map(lead => {\n//     return {\n//       id: lead.id,\n//       first_name: lead.first_name,\n//       last_name: lead.last_name, \n//       position: lead.position, \n//       company: lead.company,\n//       status: null, \n//       next_steps: null, \n//       last_date_contacted: lead.contacted_date, \n//       email: lead.email,\n//       phone_number: lead.phone_number\n//     }\n//   })\n//   this.setState({data: array})\n// }\n}\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault()\n    console.log(lead_id)\n    // this.props.deleteListLead(, lead_id)\n  }\n\n  handleRowClick = (id) => {\n    console.log(\"row clicked\", id)\n  }\n  \n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\"\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handlePageChange = (activePage) => {\n    this.setState({activePage})\n  }\n\n  render() {\n    // let data = []\n    // if (this.props.lists.length) {\n    //   this.formattedListArray(this.props.lists)\n    //   // this.setState({data})\n    // }\n    const { column, data, direction, activePage } = this.state;\n    console.log(this.props.lists)\n    console.log(data)\n  \n    \n    // console.log(dataSlice)\n     \n    if (data) {\n    let dataSlice\n    if (activePage === 1) {\n      dataSlice = data.slice(0,9)\n    } else if (activePage === 2) {\n      dataSlice = data.slice(10,19)\n    } else if (activePage === 3) {\n      dataSlice = data.slice(20,29)\n    } else if (activePage === 4) {\n      dataSlice = data.slice(30,39)\n    } else if (activePage === 5) {\n      dataSlice = data.slice(40,49)\n    } else if (activePage === 6) {\n      dataSlice = data.slice(50,59)\n    } else if (activePage === 7) {\n      dataSlice = data.slice(60,69)\n    } else if (activePage === 8) {\n      dataSlice = data.slice(70,79)\n    } else if (activePage === 9) {\n      dataSlice = data.slice(80,89)\n    } else if (activePage === 10) {\n      dataSlice = data.slice(90,99)\n    } else {\n      dataSlice = []\n    }\n    console.log(dataSlice)\n  }\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Navbar />\n        <Grid divided=\"vertically\">\n          <Grid.Row columns={3}>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Total Leads</Card.Header>\n                  <Card.Description>XXXXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Open Leads</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Card.Content>\n                  <Card.Header>Another METRIC</Card.Header>\n                  <Card.Description>XXXX</Card.Description>\n                  <Image\n                    floated=\"right\"\n                    size=\"small\"\n                    src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n                  />\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n          {this.props.listlead.length > 0 ? \n          <Grid.Row columns={1}>\n            <Grid.Column>\n              <Table sortable selectable celled fixed>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell\n                      sorted={column === \"first_name\" ? direction : null}\n                      onClick={this.handleSort(\"first_name\")}\n                    >\n                      First Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"last_name\" ? direction : null}\n                      onClick={this.handleSort(\"last_name\")}\n                    >\n                      Last Name\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"position\" ? direction : null}\n                      onClick={this.handleSort(\"position\")}\n                    >\n                      Position\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"company\" ? direction : null}\n                      onClick={this.handleSort(\"company\")}\n                    >\n                      Company\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"status\" ? direction : null}\n                      onClick={this.handleSort(\"status\")}\n                    >\n                      Status\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"next_steps\" ? direction : null}\n                      onClick={this.handleSort(\"next_steps\")}\n                    >\n                      Next Steps\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      sorted={column === \"last_date_contacted\" ? direction : null}\n                      onClick={this.handleSort(\"last_date_contacted\")}\n                    >\n                      Last Date Contacted\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    >\n                      Delete Lead\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {_.map(data, ({ id, first_name, last_name, position, company, status, next_steps, last_date_contacted}) => (\n                    <Table.Row key={id} onClick={() => this.handleRowClick(id)}>\n                      <Table.Cell>{first_name}</Table.Cell>\n                      <Table.Cell>{last_name}</Table.Cell>\n                      <Table.Cell>{position}</Table.Cell>\n                      <Table.Cell>{company}</Table.Cell>\n                      <Table.Cell>{status}</Table.Cell>\n                      <Table.Cell>{next_steps}</Table.Cell>\n                      <Table.Cell>{last_date_contacted}</Table.Cell>\n                      <Table.Cell><Icon name={'trash alternate outline'} onClick={(event) => this.handleDeleteClick(event, id)} name='trash alternate outline' size='large' /></Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n                <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Pagination\n                  boundaryRange={0}\n                  defaultActivePage={1}\n                  ellipsisItem={\"...\"}\n                  firstItem={{ content: <Icon name='angle double left' />, icon: true }}\n                  lastItem={{ content: <Icon name='angle double right' />, icon: true }}\n                  prevItem={{ content: <Icon name='angle left' />, icon: true }}\n                  nextItem={{ content: <Icon name='angle right' />, icon: true }}\n                  siblingRange={1}\n                  totalPages={10}\n                  onPageChange={(event, { activePage }) => this.handlePageChange(activePage)}\n                />\n                {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n              </Table>\n            </Grid.Column>\n              </Grid.Row> : <div><Header>You do not have any leads saved under this list.</Header><Button as={Link} to='/search'>Go to Search</Button></div> }\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listlead: state.listlead,\n    auth: state.auth\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: (id) => {\n      dispatch(deleteList(id))\n    },\n    deleteListLead: (user_id, lead_id) => {\n      dispatch(deleteListLead(user_id, lead_id))\n    }\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}