{"ast":null,"code":"import _slicedToArray from \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/EnhancedTable.js\";\nimport React from \"react\";\nimport { userEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { Modal, Button, Dropdown, Form, Icon } from \"semantic-ui-react\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport { Link } from 'react-router-dom';\n\nconst uuidv1 = require(\"uuid/v1\");\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"First Name\"\n}, {\n  id: \"last_name\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Last Name\"\n}, {\n  id: \"email\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Email\"\n}, {\n  id: \"position\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Position\"\n}, {\n  id: \"company\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Company\"\n}, {\n  id: \"confidence\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Confidence\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    style: {\n      fontSize: \"12px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      fontSize: \"12px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    style: {\n      fontSize: \"12px\"\n    },\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    style: {\n      marginLeft: \"20px\",\n      marginRight: \"20px\"\n    },\n    icon: React.createElement(FavoriteBorder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    checkedIcon: React.createElement(Favorite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }),\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"select all leads\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    style: {\n      fontSize: \"15px\"\n    },\n    key: headCell.id // align={headCell.numeric ? 'right' : 'left'}\n    ,\n    align: \"left\",\n    padding: headCell.disablePadding ? \"none\" : \"default\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary // marginLeft: '200px'\n\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nfunction getClasses(props) {\n  let classes;\n  classes = makeStyles(theme => ({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: {\n      backgroundColor: \"black\"\n    },\n    // theme.palette.type === 'light'\n    //   ? {\n    //       color: theme.palette.secondary.main,\n    //       backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    //     }\n    // : {\n    //     color: theme.palette.text.primary,\n    //     backgroundColor: theme.palette.secondary.dark,\n    //   },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  }));\n  return classes;\n}\n\nclass EnhancedTableToolbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      activePage: 1,\n      leadsPagination: [],\n      classes: \"\",\n      submitted: false,\n      showModal: false\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      const _this$props = this.props,\n            leadsArray = _this$props.leadsArray,\n            company = _this$props.company,\n            website = _this$props.website;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.userId;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId);\n      this.handleClearListName();\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n      this.props.clearMessage();\n    };\n  }\n\n  handleClearListName() {\n    this.setState({\n      newListName: \"\"\n    });\n  } // handleClearMessage = () => {\n  // }\n\n\n  render() {\n    const classes = getClasses();\n    const showModal = this.state.showModal;\n    const numSelected = this.props.numSelected;\n    return React.createElement(Toolbar, {\n      className: clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      }) // style={{ backgroundColor: \"black\", color: \"white\" }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, numSelected > 0 ? React.createElement(Typography, {\n      color: \"inherit\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, numSelected, \" selected\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      id: \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Search Results\"), React.createElement(Button, {\n      as: Link,\n      to: \"/\",\n      style: {\n        borderRadius: \"30px\",\n        color: \"white\",\n        backgroundColor: \"#03DAC6\",\n        position: 'absolute',\n        left: '1430px',\n        top: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow alternate circle left outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), \" Back to Search\"))), React.createElement(\"div\", {\n      className: classes.spacer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, numSelected > 0 ? React.createElement(Modal, {\n      closeIcon: true,\n      onClose: this.closeModal,\n      open: showModal,\n      centered: true,\n      trigger: React.createElement(Button, {\n        onClick: () => this.setState({\n          showModal: true\n        }),\n        style: {\n          borderRadius: \"20px\",\n          backgroundColor: \"#6200EE\",\n          color: \"white\",\n          width: \"150px\",\n          fontSize: \"medium\",\n          verticalAlign: \"middle\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Save Leads\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, this.props.listArray.length ? React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, this.props.message ? React.createElement(Modal.Header, {\n      style: {\n        color: \"#71EFE0\"\n      },\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, this.props.message) : null, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      name: \"listId\",\n      style: {\n        width: \"40%\",\n        borderRadius: \"50px\"\n      },\n      placeholder: \"Select list...\" // fluid\n      ,\n      disabled: this.state.newListName ? true : false,\n      selection: true,\n      options: this.props.listArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Create a New List:\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"50px\",\n        width: \"300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(Form.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.handleSubmit() // basic\n      // color=\"violet\"\n      // inverted\n      ,\n      style: {\n        borderRadius: \"70px\",\n        backgroundColor: \"#6200EE\",\n        color: \"white\",\n        width: \"150px\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), \" Add Lead to List\")))) : React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, this.props.message ? React.createElement(Modal.Header, {\n      style: {\n        color: \"#71EFE0\"\n      },\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, this.props.message) : null, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Create A New List\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"50px\",\n        width: \"300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      onClick: this.handleSubmit // basic\n      // color=\"violet\"\n      // inverted\n      ,\n      style: {\n        borderRadius: \"70px\",\n        backgroundColor: \"#6200EE\",\n        color: \"white\",\n        width: \"150px\",\n        padding: \"10px\",\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), \" Add Lead to List\")))) // </Tooltip>\n    : React.createElement(Tooltip, {\n      title: \"Filter list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"filter list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"85%\",\n    margin: \"50px\",\n    marginTop: 100,\n    // verticalAlign: \"middle\",\n    textAlign: 'center',\n    display: \"inline-block\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  head: {\n    fontSize: \"12px\"\n  }\n}));\nexport default function EnhancedTable(props) {\n  const listArray = props.listArray;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"asc\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"name\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(15),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  const _React$useState13 = React.useState([]),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        leadsArray = _React$useState14[0],\n        setLeadsArray = _React$useState14[1];\n\n  const handleLeadClick = (lead, event) => {\n    if (event.target.checked) {\n      setLeadsArray(leadsArray => [...leadsArray, lead]);\n    } else {\n      const newArray = leadsArray.filter(l => l.email !== lead.email);\n      setLeadsArray(leadsArray => newArray);\n    }\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.email);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, email) => {\n    const selectedIndex = selected.indexOf(email);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, email);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = email => selected.indexOf(email) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n  if (props.rows) {\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(EnhancedTableToolbar, {\n      clearMessage: props.clearMessage,\n      addLead: props.addLead,\n      leadsArray: leadsArray,\n      company: props.company,\n      website: props.website,\n      listArray: listArray,\n      userId: props.userId,\n      numSelected: selected.length,\n      message: props.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      size: dense ? \"small\" : \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      classes: classes,\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: handleSelectAllClick,\n      onRequestSort: handleRequestSort,\n      rowCount: props.rows.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, stableSort(props.rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n      const isItemSelected = isSelected(row.email);\n      const labelId = \"enhanced-table-checkbox-\".concat(index);\n      return React.createElement(TableRow // style={{fontSize: '20px' }}\n      , {\n        hover: true,\n        onClick: event => handleClick(event, row.email),\n        role: \"checkbox\",\n        \"aria-checked\": isItemSelected,\n        tabIndex: -1,\n        key: uuidv1(),\n        selected: isItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"20px\"\n        },\n        icon: React.createElement(FavoriteBorder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567\n          },\n          __self: this\n        }),\n        checkedIcon: React.createElement(Favorite, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568\n          },\n          __self: this\n        }),\n        onChange: event => {\n          handleLeadClick(row, event);\n        },\n        checked: isItemSelected,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      })), React.createElement(TableCell // style={{ paddingRight: \"30px\"}\n      , {\n        component: \"th\",\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, row.name), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, row.last_name), React.createElement(TableCell, {\n        id: labelId,\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, row.position), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, row.company), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, row.confidence));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 25, 50, 100],\n      component: \"div\",\n      count: props.rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"previous page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"next page\"\n      },\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, \"Loading\");\n  }\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/EnhancedTable.js"],"names":["React","userEffect","useState","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","Modal","Button","Dropdown","Form","Icon","Favorite","FavoriteBorder","Link","uuidv1","require","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","fontSize","marginLeft","marginRight","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","getClasses","EnhancedTableToolbar","Component","state","listId","leadSelection","company","website","newListName","activePage","leadsPagination","submitted","showModal","handleDropdown","e","data","targetValue","value","setState","handleChange","target","targetName","name","handleSubmit","leadsArray","console","log","userId","addLead","handleClearListName","closeModal","clearMessage","render","borderRadius","position","left","top","margin","width","verticalAlign","textAlign","listArray","length","message","padding","useStyles","marginTop","display","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","overflow","head","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","setLeadsArray","handleLeadClick","lead","checked","newArray","filter","l","email","handleRequestSort","isDesc","handleSelectAllClick","newSelecteds","rows","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","handleChangeDense","isSelected","emptyRows","Math","min","row","isItemSelected","labelId","last_name","confidence"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { userEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { Modal, Button, Dropdown, Form, Icon } from \"semantic-ui-react\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport {Link} from 'react-router-dom'\n\nconst uuidv1 = require(\"uuid/v1\");\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"First Name\" },\n  {\n    id: \"last_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last Name\"\n  },\n  { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\n  { id: \"position\", numeric: false, disablePadding: false, label: \"Position\" },\n  { id: \"company\", numeric: false, disablePadding: false, label: \"Company\" },\n  {\n    id: \"confidence\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Confidence\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead style={{ fontSize: \"12px\" }}>\n      <TableRow style={{ fontSize: \"12px\" }}>\n        <TableCell style={{ fontSize: \"12px\" }} padding=\"checkbox\">\n          <Checkbox\n             style={{\n              marginLeft: \"20px\", marginRight: \"20px\"\n            }}\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all leads\" }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            style={{ fontSize: \"15px\" }}\n            key={headCell.id}\n            // align={headCell.numeric ? 'right' : 'left'}\n            align={\"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n    // marginLeft: '200px'\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nfunction getClasses(props) {\n  let classes;\n  classes = makeStyles(theme => ({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: {\n      backgroundColor: \"black\"\n    },\n    // theme.palette.type === 'light'\n    //   ? {\n    //       color: theme.palette.secondary.main,\n    //       backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    //     }\n    // : {\n    //     color: theme.palette.text.primary,\n    //     backgroundColor: theme.palette.secondary.dark,\n    //   },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  }));\n  return classes;\n}\n\nclass EnhancedTableToolbar extends React.Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    activePage: 1,\n    leadsPagination: [],\n    classes: \"\",\n    submitted: false,\n    showModal: false\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { listId, newListName } = this.state;\n    const { leadsArray, company, website } = this.props;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.userId;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n    this.handleClearListName()\n  };\n\n  handleClearListName() {\n    this.setState({newListName: \"\"})\n  }\n\n  // handleClearMessage = () => {\n    \n  // }\n\n  closeModal = () => {\n    this.setState({ showModal: false })\n    this.props.clearMessage()\n  }\n\n  render() {\n    const classes = getClasses();\n    const {showModal} = this.state\n    const { numSelected } = this.props;\n    return (\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0\n        })}\n        // style={{ backgroundColor: \"black\", color: \"white\" }}\n      >\n        <div className={classes.title}>\n          {numSelected > 0 ? (\n            <Typography color=\"inherit\" variant=\"h6\">\n              {numSelected} selected\n            </Typography>\n          ) : (\n            <div>\n            <Typography variant=\"h4\" id=\"tableTitle\">\n              Search Results\n            </Typography>\n               <Button\n               as={Link}\n               to=\"/\"\n               style={{\n                 borderRadius: \"30px\",\n                 color: \"white\",\n                 backgroundColor: \"#03DAC6\", position: 'absolute', left: '1430px', top: '20px'\n               }}\n             >\n               <Icon name=\"arrow alternate circle left outline\" /> Back to\n               Search\n             </Button>\n             </div>\n          )}\n        </div>\n        <div className={classes.spacer} />\n        <div style={{ margin: \"20px\" }}>\n          {numSelected > 0 ? (\n    \n              <Modal\n              closeIcon\n                onClose={this.closeModal} \n                open={showModal}\n                centered\n                trigger={\n                  <Button\n                  onClick={() => this.setState({showModal: true})}\n                    style={{\n                      borderRadius: \"20px\",\n                      backgroundColor: \"#6200EE\",\n                      color: \"white\",\n                      width: \"150px\",\n                      fontSize: \"medium\",\n                      verticalAlign: \"middle\",\n                      textAlign: \"center\"\n                    }}\n                  >\n                    Save Leads\n                  </Button>\n                }\n                basic\n                size=\"small\"\n              >\n                {this.props.listArray.length ? (\n                  <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n                    {this.props.message ? <Modal.Header style={{color: \"#71EFE0\"}} as='h2'>{this.props.message}</Modal.Header> : null }\n                    <Modal.Header as=\"h2\">\n                      Select an Existing List:\n                    </Modal.Header>\n                    <Modal.Actions>\n                      <Dropdown\n                        onChange={this.handleDropdown}\n                        name=\"listId\"\n                        style={{ width: \"40%\", borderRadius: \"50px\" }}\n                        placeholder=\"Select list...\"\n                        // fluid\n                        disabled={this.state.newListName ? true : false}\n                        selection\n                        options={this.props.listArray}\n                      />\n                      <Modal.Header as=\"h2\">Create a New List:</Modal.Header>\n                      <Form>\n                      <Form.Input\n                        placeholder=\"Create new list...\"\n                        onChange={this.handleChange}\n                        name=\"newListName\"\n                      >\n                        <input\n                          style={{ borderRadius: \"50px\", width: \"300px\" }}\n                        ></input>\n                      </Form.Input>\n                      <Form.Header as=\"h2\"></Form.Header>\n                      <Button\n                        onClick={() => this.handleSubmit()}\n                        \n                        // basic\n                        // color=\"violet\"\n                        // inverted\n                        style={{ borderRadius: \"70px\", backgroundColor: \"#6200EE\", color: \"white\", width: \"150px\", padding: \"10px\"}}\n                      >\n                        <Icon name=\"add\" /> Add Lead to List\n                      </Button>\n                      </Form>\n                    </Modal.Actions>\n                  </div>\n                ) : (\n                  <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n                    {this.props.message ? <Modal.Header style={{color: \"#71EFE0\"}} as='h2'>{this.props.message}</Modal.Header> : null }\n                    <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                    <Modal.Actions>\n                      <Form.Input\n                        placeholder=\"Create new list...\"\n                        onChange={this.handleChange}\n                        name=\"newListName\"\n                      >\n                       <input\n                          style={{ borderRadius: \"50px\", width: \"300px\" }}\n                        ></input>\n                      </Form.Input>\n                      <Form.Button\n                        onClick={this.handleSubmit}\n                        // basic\n                        // color=\"violet\"\n                        // inverted\n                        style={{ borderRadius: \"70px\", backgroundColor: \"#6200EE\", color: \"white\", width: \"150px\", padding: \"10px\", margin: \"20px\"}}\n                      >\n                        <Icon name=\"add\" /> Add Lead to List\n                      </Form.Button>\n                    </Modal.Actions>\n                  </div>\n                )}\n              </Modal>\n            // </Tooltip>\n          ) : (\n            <Tooltip title=\"Filter list\">\n              <IconButton aria-label=\"filter list\">\n                {/* <FilterListIcon /> */}\n              </IconButton>\n            </Tooltip>\n          )}\n        </div>\n      </Toolbar>\n    );\n  }\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"85%\",\n    margin: \"50px\",\n    marginTop: 100,\n    // verticalAlign: \"middle\",\n    textAlign: 'center',\n    display: \"inline-block\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  head: {\n    fontSize: \"12px\"\n  }\n}));\n\nexport default function EnhancedTable(props) {\n  const listArray = props.listArray;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\n  const [leadsArray, setLeadsArray] = React.useState([]);\n\n  const handleLeadClick = (lead, event) => {\n    if (event.target.checked) {\n      setLeadsArray(leadsArray => [...leadsArray, lead]);\n    } else {\n      const newArray = leadsArray.filter(l => l.email !== lead.email);\n      setLeadsArray(leadsArray => newArray);\n    }\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n.email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, email) => {\n    const selectedIndex = selected.indexOf(email);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, email);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = email => selected.indexOf(email) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n  if (props.rows) {\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar\n          clearMessage={props.clearMessage}\n            addLead={props.addLead}\n            leadsArray={leadsArray}\n            company={props.company}\n            website={props.website}\n            listArray={listArray}\n            userId={props.userId}\n            numSelected={selected.length}\n            message={props.message}\n          />\n          <div className={classes.tableWrapper}>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? \"small\" : \"medium\"}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={props.rows.length}\n              />\n              <TableBody>\n                {stableSort(props.rows, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.email);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                      // style={{fontSize: '20px' }}\n                        hover\n                        onClick={event => handleClick(event, row.email)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={uuidv1()}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            style={{\n                              marginLeft: \"20px\", marginRight: \"20px\"\n                            }}\n                            icon={<FavoriteBorder />}\n                            checkedIcon={<Favorite />}\n                            onChange={event => {\n                              handleLeadClick(row, event);\n                            }}\n                            checked={isItemSelected}\n                            inputProps={{ \"aria-labelledby\": labelId }}\n                          />\n                        </TableCell>\n                        <TableCell\n                          // style={{ paddingRight: \"30px\"}\n                          component=\"th\"\n                          scope=\"row\"\n                          padding=\"none\"\n                        >\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"left\">{row.last_name}</TableCell>\n                        <TableCell id={labelId} align=\"left\">\n                          {row.email}\n                        </TableCell>\n                        <TableCell align=\"left\">{row.position}</TableCell>\n                        <TableCell align=\"left\">{row.company}</TableCell>\n                        <TableCell align=\"left\">{row.confidence}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 25, 50, 100]}\n            component=\"div\"\n            count={props.rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"previous page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"next page\"\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    );\n  } else {\n    return <div>Loading</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}