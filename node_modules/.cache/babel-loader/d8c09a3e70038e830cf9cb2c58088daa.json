{"ast":null,"code":"import _slicedToArray from \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/EnhancedTable.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Modal, Button, Dropdown, Form, Icon } from \"semantic-ui-react\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport { Link } from \"react-router-dom\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"First Name\"\n}, {\n  id: \"last_name\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Last Name\"\n}, {\n  id: \"email\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Email\"\n}, {\n  id: \"position\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Position\"\n}, {\n  id: \"company\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Company\"\n} // {\n//   id: \"confidence\",\n//   numeric: true,\n//   disablePadding: false,\n//   label: \"Lead Accuracy\"\n// }\n];\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    style: {\n      fontSize: \"12px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      fontSize: \"12px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    style: {\n      fontSize: \"12px\"\n    },\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    style: {\n      marginLeft: \"20px\",\n      marginRight: \"20px\"\n    },\n    icon: React.createElement(FavoriteBorder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }),\n    checkedIcon: React.createElement(Favorite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }),\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"select all leads\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    style: {\n      fontSize: \"15px\"\n    },\n    key: headCell.id // align={headCell.numeric ? 'right' : 'left'}\n    ,\n    align: \"left\",\n    padding: headCell.disablePadding ? \"none\" : \"default\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary // marginLeft: '200px'\n\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nfunction getClasses(props) {\n  let classes;\n  classes = makeStyles(theme => ({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: {\n      backgroundColor: \"black\"\n    },\n    // theme.palette.type === 'light'\n    //   ? {\n    //       color: theme.palette.secondary.main,\n    //       backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    //     }\n    // : {\n    //     color: theme.palette.text.primary,\n    //     backgroundColor: theme.palette.secondary.dark,\n    //   },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  }));\n  return classes;\n}\n\nclass EnhancedTableToolbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      activePage: 1,\n      leadsPagination: [],\n      classes: \"\",\n      submitted: false,\n      showModal: false\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      const capitalizedName = newListName.charAt(0).toUpperCase() + newListName.substring(1);\n      const _this$props = this.props,\n            selected = _this$props.selected,\n            company = _this$props.company,\n            website = _this$props.website;\n      const userId = this.props.userId;\n      this.props.addLead( // leadsArray,\n      selected, company, website, listId, capitalizedName, userId);\n      this.handleClearListName();\n      this.closeModal();\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n      this.props.clearMessage();\n    };\n  }\n\n  handleClearListName() {\n    this.setState({\n      newListName: \"\"\n    });\n  } // handleClearMessage = () => {\n  // }\n\n\n  render() {\n    const classes = getClasses();\n    const showModal = this.state.showModal;\n    const numSelected = this.props.numSelected;\n    return React.createElement(Toolbar, {\n      className: clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      }) // style={{ backgroundColor: \"black\", color: \"white\" }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, numSelected > 0 ? React.createElement(Typography, {\n      color: \"inherit\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, numSelected, \" selected\") : React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      id: \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Search Results\")), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        float: \"right\",\n        marginLeft: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: \"/\",\n      style: {\n        borderRadius: \"30px\",\n        color: \"#6200EE\",\n        backgroundColor: \"white\",\n        // borderColor: \"#6200EE\",\n        float: \"right\",\n        top: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow alternate circle left outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), \" Back to Search\")))), React.createElement(\"div\", {\n      className: classes.spacer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, numSelected > 0 ? React.createElement(Modal, {\n      closeIcon: true,\n      onClose: this.closeModal,\n      open: showModal,\n      centered: true,\n      trigger: React.createElement(Button, {\n        onClick: () => this.setState({\n          showModal: true\n        }),\n        style: {\n          borderRadius: \"20px\",\n          backgroundColor: \"#6200EE\",\n          color: \"white\",\n          width: \"150px\",\n          fontSize: \"medium\",\n          verticalAlign: \"middle\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Save Leads\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, this.props.listArray.length ? React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, this.props.message ? React.createElement(Modal.Header, {\n      style: {\n        color: \"#71EFE0\"\n      },\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, this.props.message) : null, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      name: \"listId\",\n      style: {\n        width: \"40%\"\n      },\n      placeholder: \"Select list...\" // fluid\n      ,\n      disabled: this.state.newListName ? true : false,\n      selection: true,\n      options: this.props.listArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Create a New List:\"), React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        width: \"272px\",\n        height: \"38px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    })), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      onClick: this.handleSubmit // basic\n      // color=\"violet\"\n      // inverted\n      ,\n      style: {\n        borderRadius: \"70px\",\n        backgroundColor: \"#6200EE\",\n        color: \"white\",\n        width: \"150px\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), \" Add Lead to List\"))) : React.createElement(\"div\", {\n      style: {\n        verticalAlign: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, this.props.message ? React.createElement(Modal.Header, {\n      style: {\n        color: \"#71EFE0\"\n      },\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, this.props.message) : null, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Create A New List\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"50px\",\n        width: \"300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      onClick: this.handleSubmit // basic\n      // color=\"violet\"\n      // inverted\n      ,\n      style: {\n        borderRadius: \"70px\",\n        backgroundColor: \"#6200EE\",\n        color: \"white\",\n        width: \"150px\",\n        padding: \"10px\",\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), \" Add Lead to List\")))) : // </Tooltip>\n    React.createElement(Tooltip, {\n      title: \"Filter list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"filter list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"85%\",\n    margin: \"50px\",\n    marginTop: 100,\n    // verticalAlign: \"middle\",\n    textAlign: \"center\",\n    display: \"inline-block\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  head: {\n    fontSize: \"12px\"\n  }\n}));\nexport default function EnhancedTable(props) {\n  const listArray = props.listArray;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"asc\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"name\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(15),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1]; // const [leadsArray, setLeadsArray] = React.useState([]);\n  // const handleLeadClick = (lead, event) => {\n  //   if (event.target.checked) {\n  //     setLeadsArray(leadsArray => [...leadsArray, lead]);\n  //   } else {\n  //     const newArray = leadsArray.filter(l => l.email !== lead.email);\n  //     setLeadsArray(leadsArray => newArray);\n  //   }\n  // };\n\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n);\n      console.log(newSelecteds);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, row) => {\n    const selectedIndex = selected.indexOf(row);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, row);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    console.log(newSelected);\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = row => selected.indexOf(row) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n  if (props.rows) {\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(EnhancedTableToolbar, {\n      clearMessage: props.clearMessage,\n      addLead: props.addLead,\n      selected: selected // leadsArray={leadsArray}\n      ,\n      company: props.company,\n      website: props.website,\n      listArray: listArray,\n      userId: props.userId,\n      numSelected: selected.length,\n      message: props.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      size: dense ? \"small\" : \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      classes: classes,\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: handleSelectAllClick,\n      onRequestSort: handleRequestSort,\n      rowCount: props.rows.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, stableSort(props.rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n      const isItemSelected = isSelected(row);\n      const labelId = \"enhanced-table-checkbox-\".concat(index);\n      return React.createElement(TableRow // style={{fontSize: '20px' }}\n      , {\n        hover: true,\n        onClick: event => handleClick(event, row),\n        role: \"checkbox\",\n        \"aria-checked\": isItemSelected,\n        tabIndex: -1,\n        key: uuidv1(),\n        selected: isItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"20px\"\n        },\n        icon: React.createElement(FavoriteBorder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596\n          },\n          __self: this\n        }),\n        checkedIcon: React.createElement(Favorite, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }) // onChange={event => {\n        //   handleLeadClick(row, event);\n        // }}\n        ,\n        checked: isItemSelected,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      })), React.createElement(TableCell // style={{ paddingRight: \"30px\"}\n      , {\n        component: \"th\",\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, row.name), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, row.last_name), React.createElement(TableCell, {\n        id: labelId,\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, row.position), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, row.company));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 25, 50, 100],\n      component: \"div\",\n      count: props.rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"previous page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"next page\"\n      },\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, \"Loading\");\n  }\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/EnhancedTable.js"],"names":["React","useState","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","Modal","Button","Dropdown","Form","Icon","Favorite","FavoriteBorder","Link","uuidv1","require","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","fontSize","marginLeft","marginRight","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","getClasses","EnhancedTableToolbar","Component","state","listId","leadSelection","company","website","newListName","activePage","leadsPagination","submitted","showModal","handleDropdown","e","data","targetValue","value","setState","handleChange","target","targetName","name","handleSubmit","capitalizedName","charAt","toUpperCase","substring","selected","userId","addLead","handleClearListName","closeModal","clearMessage","render","width","display","float","borderRadius","top","margin","verticalAlign","textAlign","listArray","length","message","height","padding","useStyles","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","overflow","position","head","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","checked","newSelecteds","rows","n","console","log","handleClick","row","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","handleChangeDense","isSelected","emptyRows","Math","min","isItemSelected","labelId","last_name","email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Modal, Button, Dropdown, Form, Icon } from \"semantic-ui-react\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport { Link } from \"react-router-dom\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"First Name\" },\n  {\n    id: \"last_name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last Name\"\n  },\n  { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\n  { id: \"position\", numeric: false, disablePadding: false, label: \"Position\" },\n  { id: \"company\", numeric: false, disablePadding: false, label: \"Company\" }\n  // {\n  //   id: \"confidence\",\n  //   numeric: true,\n  //   disablePadding: false,\n  //   label: \"Lead Accuracy\"\n  // }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead style={{ fontSize: \"12px\" }}>\n      <TableRow style={{ fontSize: \"12px\" }}>\n        <TableCell style={{ fontSize: \"12px\" }} padding=\"checkbox\">\n          <Checkbox\n            style={{\n              marginLeft: \"20px\",\n              marginRight: \"20px\"\n            }}\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all leads\" }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            style={{ fontSize: \"15px\" }}\n            key={headCell.id}\n            // align={headCell.numeric ? 'right' : 'left'}\n            align={\"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n    // marginLeft: '200px'\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nfunction getClasses(props) {\n  let classes;\n  classes = makeStyles(theme => ({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: {\n      backgroundColor: \"black\"\n    },\n    // theme.palette.type === 'light'\n    //   ? {\n    //       color: theme.palette.secondary.main,\n    //       backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    //     }\n    // : {\n    //     color: theme.palette.text.primary,\n    //     backgroundColor: theme.palette.secondary.dark,\n    //   },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  }));\n  return classes;\n}\n\nclass EnhancedTableToolbar extends React.Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    activePage: 1,\n    leadsPagination: [],\n    classes: \"\",\n    submitted: false,\n    showModal: false\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { listId, newListName } = this.state;\n    const capitalizedName =\n      newListName.charAt(0).toUpperCase() + newListName.substring(1);\n    const { selected, company, website } = this.props;\n    const userId = this.props.userId;\n    this.props.addLead(\n      // leadsArray,\n      selected,\n      company,\n      website,\n      listId,\n      capitalizedName,\n      userId\n    );\n    this.handleClearListName();\n    this.closeModal();\n  };\n\n  handleClearListName() {\n    this.setState({ newListName: \"\" });\n  }\n\n  // handleClearMessage = () => {\n\n  // }\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n    this.props.clearMessage();\n  };\n\n  render() {\n    const classes = getClasses();\n    const { showModal } = this.state;\n    const { numSelected } = this.props;\n    return (\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0\n        })}\n        // style={{ backgroundColor: \"black\", color: \"white\" }}\n      >\n        <div className={classes.title}>\n          {numSelected > 0 ? (\n            <Typography color=\"inherit\" variant=\"h6\">\n              {numSelected} selected\n            </Typography>\n          ) : (\n            <div style={{ width: \"100%\" }}>\n              <div style={{ display: \"inline-block\" }}>\n                <Typography variant=\"h4\" id=\"tableTitle\">\n                  Search Results\n                </Typography>\n              </div>\n              <div\n                style={{\n                  display: \"inline-block\",\n                  float: \"right\",\n                  marginLeft: \"30px\"\n                }}\n              >\n                <Button\n                  as={Link}\n                  to=\"/\"\n                  style={{\n                    borderRadius: \"30px\",\n                    color: \"#6200EE\",\n                    backgroundColor: \"white\",\n                    // borderColor: \"#6200EE\",\n                    float: \"right\",\n                    top: \"20px\"\n                  }}\n                >\n                  <Icon name=\"arrow alternate circle left outline\" /> Back to\n                  Search\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className={classes.spacer} />\n        <div style={{ margin: \"20px\" }}>\n          {numSelected > 0 ? (\n            <Modal\n              closeIcon\n              onClose={this.closeModal}\n              open={showModal}\n              centered\n              trigger={\n                <Button\n                  onClick={() => this.setState({ showModal: true })}\n                  style={{\n                    borderRadius: \"20px\",\n                    backgroundColor: \"#6200EE\",\n                    color: \"white\",\n                    width: \"150px\",\n                    fontSize: \"medium\",\n                    verticalAlign: \"middle\",\n                    textAlign: \"center\"\n                  }}\n                >\n                  Save Leads\n                </Button>\n              }\n              basic\n              size=\"small\"\n            >\n              {this.props.listArray.length ? (\n                <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n                  {this.props.message ? (\n                    <Modal.Header style={{ color: \"#71EFE0\" }} as=\"h2\">\n                      {this.props.message}\n                    </Modal.Header>\n                  ) : null}\n                  <Modal.Header as=\"h2\">Select an Existing List:</Modal.Header>\n                  <Modal.Actions>\n                    <Dropdown\n                      onChange={this.handleDropdown}\n                      name=\"listId\"\n                      style={{ width: \"40%\" }}\n                      placeholder=\"Select list...\"\n                      // fluid\n                      disabled={this.state.newListName ? true : false}\n                      selection\n                      options={this.props.listArray}\n                    />\n                    <Modal.Header as=\"h2\">Create a New List:</Modal.Header>\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    >\n                      <input style={{ width: \"272px\", height: \"38px\" }}></input>\n                    </Form.Input>\n                    <Modal.Header as=\"h2\"></Modal.Header>\n                    <Form.Button\n                      onClick={this.handleSubmit}\n                      // basic\n                      // color=\"violet\"\n                      // inverted\n                      style={{\n                        borderRadius: \"70px\",\n                        backgroundColor: \"#6200EE\",\n                        color: \"white\",\n                        width: \"150px\",\n                        padding: \"10px\"\n                      }}\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Form.Button>\n                  </Modal.Actions>\n                </div>\n              ) : (\n                <div style={{ verticalAlign: \"center\", textAlign: \"center\" }}>\n                  {this.props.message ? (\n                    <Modal.Header style={{ color: \"#71EFE0\" }} as=\"h2\">\n                      {this.props.message}\n                    </Modal.Header>\n                  ) : null}\n                  <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                  <Modal.Actions>\n                    <Form.Input\n                      placeholder=\"Create new list...\"\n                      onChange={this.handleChange}\n                      name=\"newListName\"\n                    >\n                      <input\n                        style={{ borderRadius: \"50px\", width: \"300px\" }}\n                      ></input>\n                    </Form.Input>\n                    <Form.Button\n                      onClick={this.handleSubmit}\n                      // basic\n                      // color=\"violet\"\n                      // inverted\n                      style={{\n                        borderRadius: \"70px\",\n                        backgroundColor: \"#6200EE\",\n                        color: \"white\",\n                        width: \"150px\",\n                        padding: \"10px\",\n                        margin: \"20px\"\n                      }}\n                    >\n                      <Icon name=\"add\" /> Add Lead to List\n                    </Form.Button>\n                  </Modal.Actions>\n                </div>\n              )}\n            </Modal>\n          ) : (\n            // </Tooltip>\n            <Tooltip title=\"Filter list\">\n              <IconButton aria-label=\"filter list\">\n                {/* <FilterListIcon /> */}\n              </IconButton>\n            </Tooltip>\n          )}\n        </div>\n      </Toolbar>\n    );\n  }\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"85%\",\n    margin: \"50px\",\n    marginTop: 100,\n    // verticalAlign: \"middle\",\n    textAlign: \"center\",\n    display: \"inline-block\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  head: {\n    fontSize: \"12px\"\n  }\n}));\n\nexport default function EnhancedTable(props) {\n  const listArray = props.listArray;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\n  // const [leadsArray, setLeadsArray] = React.useState([]);\n\n  // const handleLeadClick = (lead, event) => {\n  //   if (event.target.checked) {\n  //     setLeadsArray(leadsArray => [...leadsArray, lead]);\n  //   } else {\n  //     const newArray = leadsArray.filter(l => l.email !== lead.email);\n  //     setLeadsArray(leadsArray => newArray);\n  //   }\n  // };\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = props.rows.map(n => n);\n      console.log(newSelecteds)\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, row) => {\n    const selectedIndex = selected.indexOf(row);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, row);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    console.log(newSelected)\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = row => selected.indexOf(row) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n  if (props.rows) {\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar\n            clearMessage={props.clearMessage}\n            addLead={props.addLead}\n            selected={selected}\n            // leadsArray={leadsArray}\n            company={props.company}\n            website={props.website}\n            listArray={listArray}\n            userId={props.userId}\n            numSelected={selected.length}\n            message={props.message}\n          />\n          <div className={classes.tableWrapper}>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? \"small\" : \"medium\"}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={props.rows.length}\n              />\n              <TableBody>\n                {stableSort(props.rows, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        // style={{fontSize: '20px' }}\n                        hover\n                        onClick={event => handleClick(event, row)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={uuidv1()}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            style={{\n                              marginLeft: \"20px\",\n                              marginRight: \"20px\"\n                            }}\n                            icon={<FavoriteBorder />}\n                            checkedIcon={<Favorite />}\n                            // onChange={event => {\n                            //   handleLeadClick(row, event);\n                            // }}\n                            checked={isItemSelected}\n                            inputProps={{ \"aria-labelledby\": labelId }}\n                          />\n                        </TableCell>\n                        <TableCell\n                          // style={{ paddingRight: \"30px\"}\n                          component=\"th\"\n                          scope=\"row\"\n                          padding=\"none\"\n                        >\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"left\">{row.last_name}</TableCell>\n                        <TableCell id={labelId} align=\"left\">\n                          {row.email}\n                        </TableCell>\n                        <TableCell align=\"left\">{row.position}</TableCell>\n                        <TableCell align=\"left\">{row.company}</TableCell>\n                        {/* <TableCell align=\"left\">{row.confidence}</TableCell> */}\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 25, 50, 100]}\n            component=\"div\"\n            count={props.rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"previous page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"next page\"\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    );\n  } else {\n    return <div>Loading</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}