{"ast":null,"code":"import _slicedToArray from \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { connect } from 'react-redux';\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Dessert (100g serving)'\n}, {\n  id: 'calories',\n  numeric: true,\n  disablePadding: false,\n  label: 'Calories'\n}, {\n  id: 'fat',\n  numeric: true,\n  disablePadding: false,\n  label: 'Fat (g)'\n}, {\n  id: 'carbs',\n  numeric: true,\n  disablePadding: false,\n  label: 'Carbs (g)'\n}, {\n  id: 'protein',\n  numeric: true,\n  disablePadding: false,\n  label: 'Protein (g)'\n}];\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Nutrition\")), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction EnhancedTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('calories'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(5),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = this.props.rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.props.rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: this.props.rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, stableSort(this.props.rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.name),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, row.calories), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, row.fat), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, row.carbs), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, row.protein));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }),\n    label: \"Dense padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }));\n}\n\nclass DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: [],\n      rows: []\n    };\n\n    this.createData = (first_name, last_name, email, position, company, confidence) => {\n      return {\n        first_name,\n        last_name,\n        email,\n        position,\n        company,\n        confidence\n      };\n    };\n\n    this.createRowData = () => {\n      let array = [];\n      this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence);\n        array.push(newRow);\n      });\n      this.setState({\n        rows: array\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadsArray = _this$state.leadsArray,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.auth.user.id;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId);\n    };\n\n    this.handleLeadClick = (lead, checked) => {\n      console.log(lead);\n      console.log(checked);\n\n      if (checked) {\n        this.props.listWithLeadNotes.forEach(l => {\n          console.log(\"what is l\", l);\n\n          if (l.lead.email !== lead.value) {\n            this.setState({\n              leadsArray: [...this.state.leadsArray, lead]\n            });\n          } else {\n            return null;\n          }\n        });\n      } else {\n        const newArray = this.state.leadsArray.filter(l => l.value !== lead.value);\n        this.setState({\n          leadsArray: newArray\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData();\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(EnhancedTable, {\n      rows: this.state.rows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(addLead(leadsArray, company, website, listId, newListName, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResultsTest.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","connect","addList","addLead","Navbar","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","rows","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","value","handleChangeDense","isSelected","emptyRows","Math","min","row","isItemSelected","labelId","calories","fat","carbs","protein","DataTable","Component","state","listId","leadSelection","company","website","newListName","leadsArray","createData","first_name","last_name","email","confidence","createRowData","leads","emails","forEach","lead","newRow","organization","push","setState","handleDropdown","e","data","targetValue","handleChange","targetName","handleSubmit","console","log","userId","auth","user","handleLeadClick","listWithLeadNotes","l","newArray","filter","componentDidMount","domain","render","mapStateToProps","lists","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6B;AAC3B,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACV,CAAD,EAAIC,CAAJ,KAAU;AAC5B,UAAMU,KAAK,GAAGN,GAAG,CAACL,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAjB;AACA,QAAIU,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOX,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,GAJD;AAKA,SAAOK,cAAc,CAACC,GAAf,CAAmBC,EAAE,IAAIA,EAAE,CAAC,CAAD,CAA3B,CAAP;AACD;;AAED,SAASI,UAAT,CAAoBD,KAApB,EAA2BT,OAA3B,EAAoC;AAClC,SAAOS,KAAK,KAAK,MAAV,GAAmB,CAACX,CAAD,EAAIC,CAAJ,KAAUF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAjC,GAAmD,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAzE;AACD;;AAED,MAAMW,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,OAAO,EAAE,KAAvB;AAA8BC,EAAAA,cAAc,EAAE,IAA9C;AAAoDC,EAAAA,KAAK,EAAE;AAA3D,CADgB,EAEhB;AAAEH,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,OAAO,EAAE,IAA3B;AAAiCC,EAAAA,cAAc,EAAE,KAAjD;AAAwDC,EAAAA,KAAK,EAAE;AAA/D,CAFgB,EAGhB;AAAEH,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,OAAO,EAAE,IAAtB;AAA4BC,EAAAA,cAAc,EAAE,KAA5C;AAAmDC,EAAAA,KAAK,EAAE;AAA1D,CAHgB,EAIhB;AAAEH,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,OAAO,EAAE,IAAxB;AAA8BC,EAAAA,cAAc,EAAE,KAA9C;AAAqDC,EAAAA,KAAK,EAAE;AAA5D,CAJgB,EAKhB;AAAEH,EAAAA,EAAE,EAAE,SAAN;AAAiBC,EAAAA,OAAO,EAAE,IAA1B;AAAgCC,EAAAA,cAAc,EAAE,KAAhD;AAAuDC,EAAAA,KAAK,EAAE;AAA9D,CALgB,CAAlB;;AAQA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,QACxBC,OADwB,GAC4DD,KAD5D,CACxBC,OADwB;AAAA,QACfC,gBADe,GAC4DF,KAD5D,CACfE,gBADe;AAAA,QACGV,KADH,GAC4DQ,KAD5D,CACGR,KADH;AAAA,QACUT,OADV,GAC4DiB,KAD5D,CACUjB,OADV;AAAA,QACmBoB,WADnB,GAC4DH,KAD5D,CACmBG,WADnB;AAAA,QACgCC,QADhC,GAC4DJ,KAD5D,CACgCI,QADhC;AAAA,QAC0CC,aAD1C,GAC4DL,KAD5D,CAC0CK,aAD1C;;AAEhC,QAAMC,iBAAiB,GAAGC,QAAQ,IAAIC,KAAK,IAAI;AAC7CH,IAAAA,aAAa,CAACG,KAAD,EAAQD,QAAR,CAAb;AACD,GAFD;;AAIA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEJ,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGC,QADlD;AAEE,IAAA,OAAO,EAAED,WAAW,KAAKC,QAF3B;AAGE,IAAA,QAAQ,EAAEF,gBAHZ;AAIE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASGR,SAAS,CAACN,GAAV,CAAcqB,QAAQ,IACrB,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACd,EADhB;AAEE,IAAA,KAAK,EAAEc,QAAQ,CAACb,OAAT,GAAmB,OAAnB,GAA6B,MAFtC;AAGE,IAAA,OAAO,EAAEa,QAAQ,CAACZ,cAAT,GAA0B,MAA1B,GAAmC,SAH9C;AAIE,IAAA,aAAa,EAAEd,OAAO,KAAK0B,QAAQ,CAACd,EAArB,GAA0BH,KAA1B,GAAkC,KAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,cAAD;AACE,IAAA,MAAM,EAAET,OAAO,KAAK0B,QAAQ,CAACd,EAD/B;AAEE,IAAA,SAAS,EAAEH,KAFb;AAGE,IAAA,OAAO,EAAEc,iBAAiB,CAACG,QAAQ,CAACd,EAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGc,QAAQ,CAACX,KALZ,EAMGf,OAAO,KAAK0B,QAAQ,CAACd,EAArB,GACC;AAAM,IAAA,SAAS,EAAEM,OAAO,CAACS,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,KAAK,KAAK,MAAV,GAAmB,mBAAnB,GAAyC,kBAD5C,CADD,GAIG,IAVN,CANF,CADD,CATH,CADF,CADF;AAmCD;;AAEDO,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BV,EAAAA,OAAO,EAAE9C,SAAS,CAACyD,MAAV,CAAiBC,UADE;AAE5BV,EAAAA,WAAW,EAAEhD,SAAS,CAAC2D,MAAV,CAAiBD,UAFF;AAG5BR,EAAAA,aAAa,EAAElD,SAAS,CAAC4D,IAAV,CAAeF,UAHF;AAI5BX,EAAAA,gBAAgB,EAAE/C,SAAS,CAAC4D,IAAV,CAAeF,UAJL;AAK5BrB,EAAAA,KAAK,EAAErC,SAAS,CAAC6D,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,EAAiCH,UALZ;AAM5B9B,EAAAA,OAAO,EAAE5B,SAAS,CAAC8D,MAAV,CAAiBJ,UANE;AAO5BT,EAAAA,QAAQ,EAAEjD,SAAS,CAAC2D,MAAV,CAAiBD;AAPC,CAA9B;AAUA,MAAMK,gBAAgB,GAAG5D,UAAU,CAAC6D,KAAK,KAAK;AAC5CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEJC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFV,GADsC;AAK5CE,EAAAA,SAAS,EACPL,KAAK,CAACM,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACI;AACEC,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBC,IADjC;AAEEC,IAAAA,eAAe,EAAEzE,OAAO,CAAC8D,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBG,KAAzB,EAAgC,IAAhC;AAF1B,GADJ,GAKI;AACEJ,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcO,IAAd,CAAmBC,OAD5B;AAEEH,IAAAA,eAAe,EAAEX,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBM;AAF3C,GAXsC;AAe5CC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GAfoC;AAkB5CC,EAAAA,OAAO,EAAE;AACPV,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcO,IAAd,CAAmBJ;AADnB,GAlBmC;AAqB5CU,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAE;AADD;AArBqC,CAAL,CAAN,CAAnC;;AA0BA,MAAMG,oBAAoB,GAAGvC,KAAK,IAAI;AACpC,QAAMC,OAAO,GAAGiB,gBAAgB,EAAhC;AADoC,QAE5Bf,WAF4B,GAEZH,KAFY,CAE5BG,WAF4B;AAIpC,SACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAE/C,IAAI,CAAC6C,OAAO,CAACmB,IAAT,EAAe;AAC5B,OAACnB,OAAO,CAACuB,SAAT,GAAqBrB,WAAW,GAAG;AADP,KAAf,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACqC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,WAAW,GAAG,CAAd,GACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WADH,cADD,GAKC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,EAAE,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CALF,EAgBE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACkC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAK,IAAA,SAAS,EAAElC,OAAO,CAACoC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlC,WAAW,GAAG,CAAd,GACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADD,GAOC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CARJ,CAjBF,CADF;AAmCD,CAvCD;;AAyCAoC,oBAAoB,CAAC5B,SAArB,GAAiC;AAC/BR,EAAAA,WAAW,EAAEhD,SAAS,CAAC2D,MAAV,CAAiBD;AADC,CAAjC;AAIA,MAAM2B,SAAS,GAAGlF,UAAU,CAAC6D,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJqB,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,SAAS,EAAEvB,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAD+B;AAKrCqB,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,MADF;AAELG,IAAAA,YAAY,EAAEzB,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAL8B;AASrCuB,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAT8B;AAYrCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAZuB;AAerCtC,EAAAA,cAAc,EAAE;AACduC,IAAAA,MAAM,EAAE,CADM;AAEdC,IAAAA,IAAI,EAAE,eAFQ;AAGdC,IAAAA,MAAM,EAAE,CAHM;AAIdC,IAAAA,MAAM,EAAE,CAAC,CAJK;AAKdC,IAAAA,QAAQ,EAAE,QALI;AAMdC,IAAAA,OAAO,EAAE,CANK;AAOdC,IAAAA,QAAQ,EAAE,UAPI;AAQdC,IAAAA,GAAG,EAAE,EARS;AASdf,IAAAA,KAAK,EAAE;AATO;AAfqB,CAAL,CAAN,CAA5B;;AA4BA,SAASgB,aAAT,GAAyB;AACvB,QAAMxD,OAAO,GAAGuC,SAAS,EAAzB;;AADuB,0BAEGtF,KAAK,CAACwG,QAAN,CAAe,KAAf,CAFH;AAAA;AAAA,QAEhBlE,KAFgB;AAAA,QAETmE,QAFS;;AAAA,2BAGOzG,KAAK,CAACwG,QAAN,CAAe,UAAf,CAHP;AAAA;AAAA,QAGhB3E,OAHgB;AAAA,QAGP6E,UAHO;;AAAA,2BAIS1G,KAAK,CAACwG,QAAN,CAAe,EAAf,CAJT;AAAA;AAAA,QAIhBG,QAJgB;AAAA,QAINC,WAJM;;AAAA,2BAKC5G,KAAK,CAACwG,QAAN,CAAe,CAAf,CALD;AAAA;AAAA,QAKhBK,IALgB;AAAA,QAKVC,OALU;;AAAA,2BAMG9G,KAAK,CAACwG,QAAN,CAAe,KAAf,CANH;AAAA;AAAA,QAMhBO,KANgB;AAAA,QAMTC,QANS;;AAAA,4BAOehH,KAAK,CAACwG,QAAN,CAAe,CAAf,CAPf;AAAA;AAAA,QAOhBS,WAPgB;AAAA,QAOHC,cAPG;;AASvB,QAAMC,iBAAiB,GAAG,CAAC7D,KAAD,EAAQD,QAAR,KAAqB;AAC7C,UAAM+D,MAAM,GAAGvF,OAAO,KAAKwB,QAAZ,IAAwBf,KAAK,KAAK,MAAjD;AACAmE,IAAAA,QAAQ,CAACW,MAAM,GAAG,KAAH,GAAW,MAAlB,CAAR;AACAV,IAAAA,UAAU,CAACrD,QAAD,CAAV;AACD,GAJD;;AAMA,QAAMgE,oBAAoB,GAAG/D,KAAK,IAAI;AACpC,QAAIA,KAAK,CAACgE,MAAN,CAAaC,OAAjB,EAA0B;AACxB,YAAMC,YAAY,GAAG,KAAK1E,KAAL,CAAW2E,IAAX,CAAgBvF,GAAhB,CAAoBwF,CAAC,IAAIA,CAAC,CAACC,IAA3B,CAArB;AACAf,MAAAA,WAAW,CAACY,YAAD,CAAX;AACA;AACD;;AACDZ,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAMgB,WAAW,GAAG,CAACtE,KAAD,EAAQqE,IAAR,KAAiB;AACnC,UAAME,aAAa,GAAGlB,QAAQ,CAACmB,OAAT,CAAiBH,IAAjB,CAAtB;AACA,QAAII,WAAW,GAAG,EAAlB;;AAEA,QAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBrB,QAAnB,EAA6BgB,IAA7B,CAAd;AACD,KAFD,MAEO,IAAIE,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBrB,QAAQ,CAACsB,KAAT,CAAe,CAAf,CAAnB,CAAd;AACD,KAFM,MAEA,IAAIJ,aAAa,KAAKlB,QAAQ,CAACuB,MAAT,GAAkB,CAAxC,EAA2C;AAChDH,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBrB,QAAQ,CAACsB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACD,KAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACZrB,QAAQ,CAACsB,KAAT,CAAe,CAAf,EAAkBJ,aAAlB,CADY,EAEZlB,QAAQ,CAACsB,KAAT,CAAeJ,aAAa,GAAG,CAA/B,CAFY,CAAd;AAID;;AAEDjB,IAAAA,WAAW,CAACmB,WAAD,CAAX;AACD,GAlBD;;AAoBA,QAAMI,gBAAgB,GAAG,CAAC7E,KAAD,EAAQ8E,OAAR,KAAoB;AAC3CtB,IAAAA,OAAO,CAACsB,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAG/E,KAAK,IAAI;AACvC4D,IAAAA,cAAc,CAAC,CAAC5D,KAAK,CAACgE,MAAN,CAAagB,KAAf,CAAd;AACAxB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMyB,iBAAiB,GAAGjF,KAAK,IAAI;AACjC0D,IAAAA,QAAQ,CAAC1D,KAAK,CAACgE,MAAN,CAAaC,OAAd,CAAR;AACD,GAFD;;AAIA,QAAMiB,UAAU,GAAGb,IAAI,IAAIhB,QAAQ,CAACmB,OAAT,CAAiBH,IAAjB,MAA2B,CAAC,CAAvD;;AAEA,QAAMc,SAAS,GAAGxB,WAAW,GAAGyB,IAAI,CAACC,GAAL,CAAS1B,WAAT,EAAsB,KAAKnE,KAAL,CAAW2E,IAAX,CAAgBS,MAAhB,GAAyBrB,IAAI,GAAGI,WAAtD,CAAhC;AAEA,SACE;AAAK,IAAA,SAAS,EAAElE,OAAO,CAACmB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEnB,OAAO,CAAC0C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,WAAW,EAAEkB,QAAQ,CAACuB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEnF,OAAO,CAAC8C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAE9C,OAAO,CAAC4C,KADrB;AAEE,uBAAgB,YAFlB;AAGE,IAAA,IAAI,EAAEoB,KAAK,GAAG,OAAH,GAAa,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAEhE,OADX;AAEE,IAAA,WAAW,EAAE4D,QAAQ,CAACuB,MAFxB;AAGE,IAAA,KAAK,EAAE5F,KAHT;AAIE,IAAA,OAAO,EAAET,OAJX;AAKE,IAAA,gBAAgB,EAAEwF,oBALpB;AAME,IAAA,aAAa,EAAEF,iBANjB;AAOE,IAAA,QAAQ,EAAE,KAAKrE,KAAL,CAAW2E,IAAX,CAAgBS,MAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpG,UAAU,CAAC,KAAKgB,KAAL,CAAW2E,IAAZ,EAAkBlF,UAAU,CAACD,KAAD,EAAQT,OAAR,CAA5B,CAAV,CACEoG,KADF,CACQpB,IAAI,GAAGI,WADf,EAC4BJ,IAAI,GAAGI,WAAP,GAAqBA,WADjD,EAEE/E,GAFF,CAEM,CAAC0G,GAAD,EAAMxG,KAAN,KAAgB;AACnB,UAAMyG,cAAc,GAAGL,UAAU,CAACI,GAAG,CAACjB,IAAL,CAAjC;AACA,UAAMmB,OAAO,qCAA8B1G,KAA9B,CAAb;AAEA,WACE,oBAAC,QAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAEkB,KAAK,IAAIsE,WAAW,CAACtE,KAAD,EAAQsF,GAAG,CAACjB,IAAZ,CAF/B;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,sBAAckB,cAJhB;AAKE,MAAA,QAAQ,EAAE,CAAC,CALb;AAME,MAAA,GAAG,EAAED,GAAG,CAACjB,IANX;AAOE,MAAA,QAAQ,EAAEkB,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEA,cADX;AAEE,MAAA,UAAU,EAAE;AAAE,2BAAmBC;AAArB,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,EAeE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,IAArB;AAA0B,MAAA,EAAE,EAAEA,OAA9B;AAAuC,MAAA,KAAK,EAAC,KAA7C;AAAmD,MAAA,OAAO,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,GAAG,CAACjB,IADP,CAfF,EAkBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BiB,GAAG,CAACG,QAA9B,CAlBF,EAmBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BH,GAAG,CAACI,GAA9B,CAnBF,EAoBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BJ,GAAG,CAACK,KAA9B,CApBF,EAqBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BL,GAAG,CAACM,OAA9B,CArBF,CADF;AAyBD,GA/BF,CADH,EAiCGT,SAAS,GAAG,CAAZ,IACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAExC,MAAAA,MAAM,EAAE,KAAKwC;AAAf,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlCJ,CAdF,CADF,CAFF,EA0DE,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAEhB,IAAI,CAACS,MAHd;AAIE,IAAA,WAAW,EAAEjB,WAJf;AAKE,IAAA,IAAI,EAAEJ,IALR;AAME,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK,KANvB;AASE,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK,KATvB;AAYE,IAAA,YAAY,EAAEsB,gBAZhB;AAaE,IAAA,mBAAmB,EAAEE,uBAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DF,CADF,EA2EE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEtB,KAAjB;AAAwB,MAAA,QAAQ,EAAEwB,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAEE,IAAA,KAAK,EAAC,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EF,CADF;AAkFD;;AAED,MAAMY,SAAN,SAAwBnJ,KAAK,CAACoJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,UAAU,EAAE,EANN;AAONlC,MAAAA,IAAI,EAAE;AAPA,KAD8B;;AAAA,SAkBtCmC,UAlBsC,GAkBzB,CAACC,UAAD,EAAaC,SAAb,EAAwBC,KAAxB,EAA+B1D,QAA/B,EAAyCmD,OAAzC,EAAkDQ,UAAlD,KAAiE;AAC5E,aAAO;AAAEH,QAAAA,UAAF;AAAcC,QAAAA,SAAd;AAAyBC,QAAAA,KAAzB;AAAgC1D,QAAAA,QAAhC;AAA0CmD,QAAAA,OAA1C;AAAmDQ,QAAAA;AAAnD,OAAP;AACD,KApBqC;;AAAA,SAsBtCC,aAtBsC,GAsBtB,MAAM;AACpB,UAAIlI,KAAK,GAAG,EAAZ;AACA,WAAKe,KAAL,CAAWoH,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,CAAgCC,IAAI,IAAI;AACpC,YAAIC,MAAM,GAAG,KAAKV,UAAL,CAAgBS,IAAI,CAACR,UAArB,EAAiCQ,IAAI,CAACP,SAAtC,EAAiDO,IAAI,CAAC/B,KAAtD,EAA6D+B,IAAI,CAAChE,QAAlE,EAA4E,KAAKvD,KAAL,CAAWoH,KAAX,CAAiBK,YAA7F,EAA2GF,IAAI,CAACL,UAAhH,CAAb;AACAjI,QAAAA,KAAK,CAACyI,IAAN,CAAWF,MAAX;AACH,OAHD;AAIA,WAAKG,QAAL,CAAc;AAAChD,QAAAA,IAAI,EAAE1F;AAAP,OAAd;AACD,KA7BqC;;AAAA,SAgCtC2I,cAhCsC,GAgCrB,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5B,YAAMC,WAAW,GAAGD,IAAI,CAACtC,KAAzB;AACA,WAAKmC,QAAL,CAAc;AAAEnB,QAAAA,MAAM,EAAEuB;AAAV,OAAd;AACD,KAnCqC;;AAAA,SAqCtCC,YArCsC,GAqCvBH,CAAC,IAAI;AAClB,YAAME,WAAW,GAAGF,CAAC,CAACrD,MAAF,CAASgB,KAA7B;AACA,YAAMyC,UAAU,GAAGJ,CAAC,CAACrD,MAAF,CAASK,IAA5B;AACA,WAAK8C,QAAL,CAAc;AAAE,SAACM,UAAD,GAAcF;AAAhB,OAAd;AACD,KAzCqC;;AAAA,SA2CtCG,YA3CsC,GA2CvB,MAAM;AAAA,0BAC2C,KAAK3B,KADhD;AAAA,YACXM,UADW,eACXA,UADW;AAAA,YACCH,OADD,eACCA,OADD;AAAA,YACUC,OADV,eACUA,OADV;AAAA,YACmBH,MADnB,eACmBA,MADnB;AAAA,YAC2BI,WAD3B,eAC2BA,WAD3B;AAEnBuB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAK7B,KAA3B;AACA,YAAM8B,MAAM,GAAG,KAAKrI,KAAL,CAAWsI,IAAX,CAAgBC,IAAhB,CAAqB5I,EAApC;AACA,WAAKK,KAAL,CAAWtB,OAAX,CACEmI,UADF,EAEEH,OAFF,EAGEC,OAHF,EAIEH,MAJF,EAKEI,WALF,EAMEyB,MANF;AAQD,KAvDqC;;AAAA,SAyDtCG,eAzDsC,GAyDpB,CAACjB,IAAD,EAAO9C,OAAP,KAAmB;AACnC0D,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY3D,OAAZ;;AACA,UAAIA,OAAJ,EAAa;AACX,aAAKzE,KAAL,CAAWyI,iBAAX,CAA6BnB,OAA7B,CAAqCoB,CAAC,IAAI;AACxCP,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,CAAzB;;AACA,cAAIA,CAAC,CAACnB,IAAF,CAAON,KAAP,KAAiBM,IAAI,CAAC/B,KAA1B,EAAiC;AAC/B,iBAAKmC,QAAL,CAAc;AAAEd,cAAAA,UAAU,EAAE,CAAC,GAAG,KAAKN,KAAL,CAAWM,UAAf,EAA2BU,IAA3B;AAAd,aAAd;AACD,WAFD,MAEO;AACL,mBACE,IADF;AAGD;AACF,SATD;AAUD,OAXD,MAWO;AACL,cAAMoB,QAAQ,GAAG,KAAKpC,KAAL,CAAWM,UAAX,CAAsB+B,MAAtB,CACfF,CAAC,IAAIA,CAAC,CAAClD,KAAF,KAAY+B,IAAI,CAAC/B,KADP,CAAjB;AAGA,aAAKmC,QAAL,CAAc;AAAEd,UAAAA,UAAU,EAAE8B;AAAd,SAAd;AACD;AACF,KA7EqC;AAAA;;AAWtCE,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpI,KAAL,CAAWoH,KAAvB;AACA,UAAMnI,KAAK,GAAG,KAAKe,KAAL,CAAWoH,KAAzB;AACA,SAAKD,aAAL;AACA,SAAKQ,QAAL,CAAc;AAAEjB,MAAAA,OAAO,EAAEzH,KAAK,CAACwI,YAAjB;AAA+Bd,MAAAA,OAAO,EAAE1H,KAAK,CAAC6J;AAA9C,KAAd;AACD;;AAiEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKxC,KAAL,CAAW5B,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAvFqC;;AA0FxC,MAAMqE,eAAe,GAAGzC,KAAK,IAAI;AAC/B,SAAO;AACLa,IAAAA,KAAK,EAAEb,KAAK,CAACa,KADR;AAEL6B,IAAAA,KAAK,EAAE1C,KAAK,CAAC0C,KAFR;AAGLX,IAAAA,IAAI,EAAE/B,KAAK,CAAC+B,IAHP;AAILG,IAAAA,iBAAiB,EAAElC,KAAK,CAACkC;AAJpB,GAAP;AAMD,CAPD;;AASA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL;AACA;AACA;AACAzK,IAAAA,OAAO,EAAE,CAACmI,UAAD,EAAaH,OAAb,EAAsBC,OAAtB,EAA+BH,MAA/B,EAAuCI,WAAvC,EAAoDyB,MAApD,KAA+D;AACtEc,MAAAA,QAAQ,CACNzK,OAAO,CAACmI,UAAD,EAAaH,OAAb,EAAsBC,OAAtB,EAA+BH,MAA/B,EAAuCI,WAAvC,EAAoDyB,MAApD,CADD,CAAR;AAGD;AARI,GAAP;AAUD,CAXD;;AAaA,eAAe7J,OAAO,CAACwK,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7C,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {connect} from 'react-redux';\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = this.props.rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.props.rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={this.props.rows.length}\n            />\n            <TableBody>\n              {stableSort(this.props.rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nclass DataTable extends React.Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [],\n    rows: []\n  }  \n  \n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.createRowData()\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  createData = (first_name, last_name, email, position, company, confidence) => {\n    return { first_name, last_name, email, position, company, confidence};\n  }\n\n  createRowData = () => {\n    let array = []\n    this.props.leads.emails.forEach(lead => {\n        let newRow = this.createData(lead.first_name, lead.last_name, lead.value, lead.position, this.props.leads.organization, lead.confidence)\n        array.push(newRow)\n    })\n    this.setState({rows: array})\n  }\n  \n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n  };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.props.listWithLeadNotes.forEach(l => {\n        console.log(\"what is l\", l)\n        if (l.lead.email !== lead.value) {\n          this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n        } else {\n          return (\n            null\n          )\n        }\n      })\n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n\n\n  render() {\n    return (\n      <div>\n        <EnhancedTable rows={this.state.rows}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(\n        addLead(leadsArray, company, website, listId, newListName, userId)\n      );\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable)"]},"metadata":{},"sourceType":"module"}