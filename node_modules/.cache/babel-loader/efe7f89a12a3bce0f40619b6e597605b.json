{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image, Table, Icon, Button, Pagination, Header, Modal, Form, Search, Segment, Label, Popup, Sticky, Visibility, Dropdown } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport { deleteList, deleteListLead, addLeadNote, updateSearch, sortLists, sortLeadLists } from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport FilterLeads from \"./FilterLeads\";\nimport { GridList } from \"@material-ui/core\";\nconst filterOptions = [{\n  key: \"name\",\n  text: \"First Name\",\n  value: \"first_name\"\n}, {\n  key: \"last_name\",\n  text: \"Last Name\",\n  value: \"last_name\"\n}, {\n  key: \"position\",\n  text: \"Position\",\n  value: \"position\"\n}];\nconst styleRow = {\n  // top: \"70px\",\n  margin: \"20px\",\n  paddingRight: \"120px\",\n  paddingLeft: \"120px\",\n  marginBottom: \"40px\",\n  // position: \"relative\",\n  top: 60,\n  textAlign: \"left\"\n};\nconst styleMetrics = {\n  borderWidth: \"1px\",\n  borderRadius: \"10px\",\n  borderColor: \"rgba(98, 0, 238, 0.2)\",\n  borderStyle: \"solid\",\n  margin: \"0 50px 50px 50px\",\n  padding: \"20px\",\n  height: \"100px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.15)\",\n  verticalAlign: 'middle'\n};\nconst styleImage = {\n  position: \"relative\",\n  top: \"-40px\",\n  opacity: 0.8\n};\nconst styleButton = {\n  borderRadius: \"30px\",\n  color: \"white\",\n  backgroundColor: \"#6200EE\",\n  padding: \"14px\",\n  paddingRight: \"20px\",\n  paddingLeft: \"20px\"\n};\nconst statusArray = [{\n  key: \"10\",\n  text: \"Meeting booked\",\n  value: \"Meeting booked\"\n}, {\n  key: \"25\",\n  text: \"Met with decision maker\",\n  value: \"Met with decision maker\"\n}, {\n  key: \"50\",\n  text: \"Proposal sent\",\n  value: \"Proposal sent\"\n}, {\n  key: \"90\",\n  text: \"Verbal confirmation\",\n  value: \"Verbal confirmation\"\n}, {\n  key: \"100\",\n  text: \"Sale closed\",\n  value: \"Sale closed\"\n}, {\n  key: \"notfit\",\n  text: \"Not fit for business\",\n  value: \"Not fit for business\"\n}, {\n  key: \"incorrect\",\n  text: \"Incorrect contact\",\n  value: \"Incorrect contact\"\n}, {\n  key: \"contact\",\n  text: \"Contact at later date\",\n  value: \"Contact at later date\"\n}]; // ! Search bar\n\nconst resultRenderer = ({\n  first_name\n}) => React.createElement(Label, {\n  content: first_name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  position: PropTypes.string\n};\n\nclass LeadList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      activePage: 1,\n      statusInput: \"\",\n      nextStepsInput: \"\",\n      commentsInput: \"\",\n      selectedLead: {},\n      // totalLeadCount: 0,\n      // totalMeetingsBooked: 0,\n      // totalNotContacted: 0,\n      filter: \"\",\n      searchSelection: \"\",\n      showModal: false,\n      selectedLeadNotes: {},\n      dateString: \"\"\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleDeleteClick = (event, lead_id) => {\n      event.preventDefault(); // let newArray = this.state.data.filter(data => data.id !== lead_id);\n      // this.setState({ data: newArray });\n\n      this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleDropdown = (e, data) => {\n      console.log(e);\n      const targetValue = data.value;\n      this.setState({\n        statusInput: targetValue\n      });\n    };\n\n    this.handleSearchDropdown = (e, data) => {\n      console.log(e);\n      const targetValue = data.value;\n      this.setState({\n        searchSelection: targetValue\n      });\n    };\n\n    this.handleAddLeadNote = leadId => {\n      // debugger;\n      this.closeModal();\n      const _this$state = this.state,\n            statusInput = _this$state.statusInput,\n            nextStepsInput = _this$state.nextStepsInput,\n            commentsInput = _this$state.commentsInput;\n      this.props.addLeadNote(statusInput, nextStepsInput, this.props.auth.user.id, leadId, commentsInput);\n    };\n\n    this.handleFilterChange = (event, value) => {\n      this.props.updateSearch(value);\n    };\n  }\n\n  renderLeadCount() {\n    if (this.props.listleads) {\n      let totalLeads = 0;\n      totalLeads = this.props.listleads.leads.length;\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Total Leads\"), React.createElement(Header, {\n        style: {\n          margin: '0'\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, totalLeads), React.createElement(Image, {\n        style: styleImage,\n        size: \"small\",\n        floated: \"right\",\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Meetings Booked\"), React.createElement(Header, {\n        style: {\n          margin: '0'\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, meetingsBookedCount), React.createElement(Image, {\n        size: \"small\",\n        floated: \"right\",\n        style: styleImage,\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderNotContacted() {\n    let notContacted = 0;\n\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      return React.createElement(Grid.Column, {\n        style: styleMetrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Not Yet Contacted\"), React.createElement(Header, {\n        style: {\n          margin: '0'\n        },\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, notContacted), React.createElement(Image, {\n        size: \"small\",\n        floated: \"right\",\n        style: styleImage,\n        src: \"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  }\n\n  renderTableBody() {\n    // Set original list array to the full array in store\n    const searchSelection = this.state.searchSelection;\n    let listArr = this.props.listleads.leads;\n\n    if (this.props.search === \"\") {\n      listArr = this.props.listleads.leads;\n    } else {\n      listArr = this.props.listleads.leads.filter(lead => {\n        if (searchSelection === \"first_name\") {\n          return lead.lead.first_name.toUpperCase().includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"last_name\") {\n          return lead.lead.last_name.toUpperCase().includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"position\") {\n          return lead.lead.position.toUpperCase().includes(this.props.search.toUpperCase());\n        }\n      });\n    }\n\n    return React.createElement(Table.Body, {\n      onScroll: () => console.log(\"scroll\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, _.map(listArr, ({\n      lead,\n      leadnotes\n    }) => {\n      let last = null;\n      let dateString;\n\n      if (leadnotes.length) {\n        last = leadnotes[leadnotes.length - 1];\n      }\n\n      if (last) {\n        dateString = new Date(last.created_at).toDateString();\n      }\n\n      return React.createElement(Table.Row, {\n        textAlign: \"center\",\n        key: lead.id // onClick={() => this.handleRowClick(id)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, lead.first_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, lead.last_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, lead.position), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, lead.company), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, last ? last.status : null), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, last ? last.next_steps : null), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, last ? dateString : null), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        onClick: () => this.setState({\n          showModal: true,\n          selectedLead: lead,\n          selectedLeadNotes: last,\n          dateString: dateString\n        }),\n        name: \"edit outline\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"trash alternate outline\",\n        onClick: event => this.handleDeleteClick(event, lead.id),\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      })));\n    }));\n  }\n\n  renderModal() {\n    const _this$state2 = this.state,\n          selectedLead = _this$state2.selectedLead,\n          selectedLeadNotes = _this$state2.selectedLeadNotes,\n          dateString = _this$state2.dateString;\n    const lead = selectedLead;\n    const last = selectedLeadNotes; // const dateString = dateString;\n\n    return React.createElement(Modal, {\n      closeIcon: true,\n      onClose: this.closeModal,\n      open: this.state.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, selectedLead.first_name + \" \" + selectedLead.last_name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), \" \", lead.position ? lead.position + \",\" : null, \" \", lead.company), React.createElement(Modal.Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Email: \", lead.email, React.createElement(Modal, {\n      trigger: React.createElement(Icon, {\n        size: \"large\",\n        style: {\n          color: \"#03DAC6\",\n          float: 'right'\n        },\n        name: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Send an email to \", lead.first_name), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(MailForm, {\n      email: lead.email,\n      myEmail: this.props.auth.user.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    })))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      // fluid\n      onChange: this.handleDropdown,\n      name: \"statusInput\",\n      label: \"Status\",\n      options: statusArray,\n      placeholder: last ? last.status : \"Select status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"nextStepsInput\",\n      label: \"Next Steps\",\n      placeholder: last ? last.next_steps : \"Next steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    })), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"commentsInput\",\n      control: \"textarea\",\n      rows: \"3\",\n      label: \"Notes\",\n      placeholder: last ? dateString + last.comments : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        borderRadius: \"50px\",\n        backgroundColor: \"#03DAC6\",\n        color: \"white\"\n      },\n      onClick: () => this.handleAddLeadNote(lead.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Save\"))));\n  } // ! /////////////////////////////////////////////////////////// RENDER START ///////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    const _this$state3 = this.state,\n          column = _this$state3.column,\n          data = _this$state3.data,\n          direction = _this$state3.direction,\n          activePage = _this$state3.activePage,\n          filter = _this$state3.filter,\n          open = _this$state3.open,\n          closeOnEscape = _this$state3.closeOnEscape,\n          closeOnDimmerClick = _this$state3.closeOnDimmerClick;\n    const leadnotesArray = this.props.leadnotes;\n    console.log(this.state); // console.log(this.state);\n    // let renderData;\n    // let dataSlice;\n    // if (filter) {\n    //   renderData = this.filteredLeads();\n    // } else {\n    //   renderData = data;\n    // }\n    // console.log(renderData)\n    // if (renderData) {\n    //   renderData.slice((activePage * 10) - 10, (activePage * 10) - 1)\n    //   if (activePage === 1) {\n    //     dataSlice = renderData.slice(0, 9);\n    //   } else if (activePage === 2) {\n    //     dataSlice = renderData.slice(10, 19);\n    //   } else if (activePage === 3) {\n    //     dataSlice = renderData.slice(20, 29);\n    //   } else if (activePage === 4) {\n    //     dataSlice = renderData.slice(30, 39);\n    //   } else if (activePage === 5) {\n    //     dataSlice = renderData.slice(40, 49);\n    //   } else if (activePage === 6) {\n    //     dataSlice = renderData.slice(50, 59);\n    //   } else if (activePage === 7) {\n    //     dataSlice = renderData.slice(60, 69);\n    //   } else if (activePage === 8) {\n    //     dataSlice = renderData.slice(70, 79);\n    //   } else if (activePage === 9) {\n    //     dataSlice = renderData.slice(80, 89);\n    //   } else if (activePage === 10) {\n    //     dataSlice = renderData.slice(90, 99);\n    //   } else {\n    //     dataSlice = [];\n    //   }\n    //   // return dataSlice\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        backgroundImage: \"url(\".concat(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\", \")\"),\n        minHeight: \"800px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 1,\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      columns: 1,\n      style: {\n        top: 90,\n        verticalAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        padding: 0,\n        height: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, this.props.listleads.list.name))), React.createElement(Grid.Row, {\n      columns: \"equal\",\n      style: styleRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, this.renderLeadCount(), this.renderMeetingsBooked(), this.renderNotContacted()), React.createElement(Grid.Row, {\n      columns: 1,\n      style: {\n        top: -20,\n        verticalAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: \"/dashboard\",\n      style: styleButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow alternate circle left outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }), \" Back to Dashboard\"))), this.props.listleads.leads.length ? React.createElement(Grid.Row, {\n      style: {\n        // margin: \"20px\",\n        // marginRight: \"60px\",\n        // marginLeft: \"60px\",\n        // minHeight: \"450px\"\n        // margin: \"20px\",\n        // marginRight: \"60px\",\n        // marginLeft: \"60px\"\n        // position: 'absolute',\n        // top: '430px',\n        // marginLeft: \"150px\",\n        // marginRight: \"150px\"\n        width: \"400px\",\n        margin: \"60px\",\n        height: \"500px\",\n        // marginTop: '20px',\n        display: \"inline-block\"\n      },\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sortable: true,\n      selectable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, \"Search leads by\", \" \", React.createElement(Dropdown, {\n      inline: true,\n      onChange: this.handleSearchDropdown,\n      name: \"searchSelection\",\n      options: filterOptions,\n      defaultValue: filterOptions[0].text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    })), React.createElement(Search // style={{ margin: \"15px\", position: 'fixed', top: 0 }}\n    , {\n      onSearchChange: _.debounce((event, {\n        value\n      }) => this.handleFilterChange(event, value), 300),\n      noResultsMessage: \"No results found\",\n      showNoResults: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }))), React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      style: {\n        position: \"sticky\"\n      },\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, \"Last Date Contacted\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, \"Edit Lead\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, \"Delete Lead\"))), this.renderModal(), this.renderTableBody()))) : React.createElement(Grid.Row, {\n      style: {\n        margin: \"1px\",\n        // position: \"fixed\",\n        top: \"50px\",\n        display: \"inline-block\"\n      },\n      column: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, \"Oops! You do not have any leads saved under this list.\"), React.createElement(Button, {\n      as: Link,\n      to: \"/\",\n      style: {\n        borderRadius: \"30px\",\n        color: \"#43425D\",\n        backgroundColor: \"#FFF176\",\n        padding: \"14px\",\n        paddingRight: \"20px\",\n        paddingLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow alternate circle left outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }), \" Search For Leads\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes,\n    search: state.search\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\n\nexport default connect(mapStateToProps, {\n  deleteList,\n  deleteListLead,\n  addLeadNote,\n  updateSearch,\n  sortLists,\n  sortLeadLists\n})(LeadList); // handleFetchClick = (id) => {\n//   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n// }\n// countTotalLeads = () => {\n//   if (this.props.listleads) {\n//     let totalLeads;\n//     // console.log(this.props.lists);\n//     totalLeads = this.props.listleads.leads.length;\n//     this.setState({ totalLeadCount: totalLeads });\n//   } else {\n//     return null;\n//   }\n// };\n// countMeetingsBooked = () => {\n//   let meetingsBookedCount = 0;\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       lead.leadnotes.forEach(leadnote => {\n//         if (leadnote.status === \"Meeting booked\") {\n//           meetingsBookedCount += 1;\n//         }\n//       });\n//     });\n//     this.setState({ totalMeetingsBooked: meetingsBookedCount });\n//   } else {\n//     return null;\n//   }\n// };\n// countNotContacted = () => {\n//   let notContacted = 0;\n//   // let testArray = []\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       if (lead.leadnotes.length < 1) {\n//         notContacted += 1;\n//       }\n//     });\n//     this.setState({ totalNotContacted: notContacted });\n//   } else {\n//     return null;\n//   }\n// };\n// id,\n// first_name,\n// last_name,\n// position,\n// company,\n// status,\n// next_steps,\n// last_date_contacted,\n// phone_number,\n// email,\n// comments,\n// comments_date\n\n{\n  /* <Table.Footer>\n                    {data.length > 10 ? (\n                      <Table.Row>\n                        <Table.HeaderCell colSpan=\"3\">\n                          <Pagination\n                            boundaryRange={0}\n                            defaultActivePage={1}\n                            ellipsisItem={\"...\"}\n                            firstItem={{\n                              content: <Icon name=\"angle double left\" />,\n                              icon: true\n                            }}\n                            lastItem={{\n                              content: <Icon name=\"angle double right\" />,\n                              icon: true\n                            }}\n                            prevItem={{\n                              content: <Icon name=\"angle left\" />,\n                              icon: true\n                            }}\n                            nextItem={{\n                              content: <Icon name=\"angle right\" />,\n                              icon: true\n                            }}\n                            siblingRange={1}\n                            totalPages={10}\n                            onPageChange={(event, { activePage }) =>\n                              this.handlePageChange(activePage)\n                            }\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    ) : null}\n                  </Table.Footer> */\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":["React","Component","Grid","Image","Table","Icon","Button","Pagination","Header","Modal","Form","Search","Segment","Label","Popup","Sticky","Visibility","Dropdown","Link","connect","_","Navbar","MailForm","deleteList","deleteListLead","addLeadNote","updateSearch","sortLists","sortLeadLists","PropTypes","FilterLeads","GridList","filterOptions","key","text","value","styleRow","margin","paddingRight","paddingLeft","marginBottom","top","textAlign","styleMetrics","borderWidth","borderRadius","borderColor","borderStyle","padding","height","boxShadow","verticalAlign","styleImage","position","opacity","styleButton","color","backgroundColor","statusArray","resultRenderer","first_name","propTypes","string","last_name","LeadList","state","column","data","direction","activePage","statusInput","nextStepsInput","commentsInput","selectedLead","filter","searchSelection","showModal","selectedLeadNotes","dateString","closeModal","setState","handleDeleteClick","event","lead_id","preventDefault","props","listleads","list","id","handlePageChange","handleChange","e","targetValue","target","targetName","name","handleDropdown","console","log","handleSearchDropdown","handleAddLeadNote","leadId","auth","user","handleFilterChange","renderLeadCount","totalLeads","leads","length","renderMeetingsBooked","meetingsBookedCount","forEach","lead","leadnotes","leadnote","status","renderNotContacted","notContacted","renderTableBody","listArr","search","toUpperCase","includes","map","last","Date","created_at","toDateString","company","next_steps","renderModal","email","float","comments","render","open","closeOnEscape","closeOnDimmerClick","leadnotesArray","backgroundImage","minHeight","width","display","debounce","mapStateToProps","lists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Image,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  Header,\n  Modal,\n  Form,\n  Search,\n  Segment,\n  Label,\n  Popup,\n  Sticky,\n  Visibility,\n  Dropdown\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport Navbar from \"./Navbar\";\nimport MailForm from \"./MailForm\";\nimport {\n  deleteList,\n  deleteListLead,\n  addLeadNote,\n  updateSearch,\n  sortLists,\n  sortLeadLists\n} from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport FilterLeads from \"./FilterLeads\";\nimport { GridList } from \"@material-ui/core\";\n\nconst filterOptions = [\n  {\n    key: \"name\",\n    text: \"First Name\",\n    value: \"first_name\"\n  },\n  {\n    key: \"last_name\",\n    text: \"Last Name\",\n    value: \"last_name\"\n  },\n  {\n    key: \"position\",\n    text: \"Position\",\n    value: \"position\"\n  }\n];\n\nconst styleRow = {\n  // top: \"70px\",\n  margin: \"20px\",\n  paddingRight: \"120px\",\n  paddingLeft: \"120px\",\n  marginBottom: \"40px\",\n  // position: \"relative\",\n  top: 60,\n  textAlign: \"left\"\n};\n\nconst styleMetrics = {\n  borderWidth: \"1px\",\n  borderRadius: \"10px\",\n  borderColor: \"rgba(98, 0, 238, 0.2)\",\n  borderStyle: \"solid\",\n  margin: \"0 50px 50px 50px\",\n  padding: \"20px\",\n  height: \"100px\",\n  boxShadow: \"10px 10px 15px -6px rgba(67,66,93,0.15)\",\n  verticalAlign: 'middle'\n};\n\nconst styleImage = {\n  position: \"relative\",\n  top: \"-40px\",\n  opacity: 0.8\n};\n\nconst styleButton = {\n  borderRadius: \"30px\",\n  color: \"white\",\n  backgroundColor: \"#6200EE\",\n  padding: \"14px\",\n  paddingRight: \"20px\",\n  paddingLeft: \"20px\"\n};\n\nconst statusArray = [\n  { key: \"10\", text: \"Meeting booked\", value: \"Meeting booked\" },\n  {\n    key: \"25\",\n    text: \"Met with decision maker\",\n    value: \"Met with decision maker\"\n  },\n  { key: \"50\", text: \"Proposal sent\", value: \"Proposal sent\" },\n  { key: \"90\", text: \"Verbal confirmation\", value: \"Verbal confirmation\" },\n  { key: \"100\", text: \"Sale closed\", value: \"Sale closed\" },\n  {\n    key: \"notfit\",\n    text: \"Not fit for business\",\n    value: \"Not fit for business\"\n  },\n  { key: \"incorrect\", text: \"Incorrect contact\", value: \"Incorrect contact\" },\n  {\n    key: \"contact\",\n    text: \"Contact at later date\",\n    value: \"Contact at later date\"\n  }\n];\n\n// ! Search bar\n\nconst resultRenderer = ({ first_name }) => <Label content={first_name} />;\n\nresultRenderer.propTypes = {\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  position: PropTypes.string\n};\n\nclass LeadList extends Component {\n  // UPDATE DATA WITH LISTS\n  state = {\n    column: null,\n    data: [],\n    direction: null,\n    activePage: 1,\n    statusInput: \"\",\n    nextStepsInput: \"\",\n    commentsInput: \"\",\n    selectedLead: {},\n    // totalLeadCount: 0,\n    // totalMeetingsBooked: 0,\n    // totalNotContacted: 0,\n    filter: \"\",\n    searchSelection: \"\",\n    showModal: false,\n    selectedLeadNotes: {},\n    dateString: \"\"\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  // ! ////////////////////////////////////// CLASS COMPONENT FUNCTIONS ////////////////////////////////////////////////////////////\n\n  handleDeleteClick = (event, lead_id) => {\n    event.preventDefault();\n    // let newArray = this.state.data.filter(data => data.id !== lead_id);\n    // this.setState({ data: newArray });\n    this.props.deleteListLead(this.props.listleads.list.id, lead_id);\n  };\n\n  //! turned off sort function\n  // handleSort = clickedColumn => () => {\n  //   console.log(this.state)\n  //   console.log(clickedColumn)\n  //   const { column, direction } = this.state;\n  //   const dataArray = this.props.listleads.leads;\n\n  //   const dataSorted = _.sortBy(dataArray, [clickedColumn])\n  //   console.log(dataSorted)\n\n  //   if (column !== clickedColumn) {\n  //     this.setState({\n  //       column: clickedColumn,\n  //       // data: _.sortBy(dataArray, [clickedColumn]),\n  //       direction: \"ascending\"\n  //     });\n  //     this.props.sortLeadLists(_.sortBy(dataArray, [clickedColumn]))\n  //     return;\n  //   }\n\n  //   this.setState({\n  //     // data: dataArray.reverse(),\n  //     direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n  //   })\n  //   this.props.sortLeadLists(dataArray.reverse())\n  // };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleDropdown = (e, data) => {\n    console.log(e);\n    const targetValue = data.value;\n    this.setState({ statusInput: targetValue });\n  };\n\n  handleSearchDropdown = (e, data) => {\n    console.log(e);\n    const targetValue = data.value;\n    this.setState({ searchSelection: targetValue });\n  };\n\n  handleAddLeadNote = leadId => {\n    // debugger;\n    this.closeModal();\n    const { statusInput, nextStepsInput, commentsInput } = this.state;\n    this.props.addLeadNote(\n      statusInput,\n      nextStepsInput,\n      this.props.auth.user.id,\n      leadId,\n      commentsInput\n    );\n  };\n\n  // ? Search Bar code\n\n  handleFilterChange = (event, value) => {\n    this.props.updateSearch(value);\n  };\n\n  renderLeadCount() {\n    if (this.props.listleads) {\n      let totalLeads = 0;\n      totalLeads = this.props.listleads.leads.length;\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h4\">Total Leads</Header>\n          <Header style={{margin: '0'}} as=\"h1\">{totalLeads}</Header>\n          <Image\n            style={styleImage}\n            size=\"small\"\n            floated=\"right\"\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderMeetingsBooked() {\n    let meetingsBookedCount = 0;\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        lead.leadnotes.forEach(leadnote => {\n          if (leadnote.status === \"Meeting booked\") {\n            meetingsBookedCount += 1;\n          }\n        });\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h4\">Meetings Booked</Header>\n          <Header style={{margin: '0'}} as=\"h1\">{meetingsBookedCount}</Header>\n          <Image\n            size=\"small\"\n            floated=\"right\"\n            style={styleImage}\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQk-PoFytrGO-egRH0bNhdK77YgmvNvozJbUsZvn9xAPPpjioM-SRk6hyr3rXfVVq2Y&_nc_ht=scontent-ort2-2.xx&oh=c1bc858aa386c365cae63c3eea610b9e&oe=5DF88CFF\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderNotContacted() {\n    let notContacted = 0;\n    if (this.props.listleads) {\n      this.props.listleads.leads.forEach(lead => {\n        if (lead.leadnotes.length < 1) {\n          notContacted += 1;\n        }\n      });\n      return (\n        <Grid.Column style={styleMetrics}>\n          <Header as=\"h4\">Not Yet Contacted</Header>\n          <Header style={{margin: '0'}} as=\"h1\">{notContacted}</Header>\n          <Image\n            size=\"small\"\n            floated=\"right\"\n            style={styleImage}\n            src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQk5RRMoC9mgfA61QWoq_mT8y4SylOWJWzRclLynSDsznJetifnuN5Ks-YcHFkuFiMs&_nc_ht=scontent-ort2-2.xx&oh=51a411e11a9181923a23d3a7d1e05c21&oe=5E35AB9A\"\n          />\n        </Grid.Column>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderTableBody() {\n    // Set original list array to the full array in store\n    const searchSelection = this.state.searchSelection;\n    let listArr = this.props.listleads.leads;\n    if (this.props.search === \"\") {\n      listArr = this.props.listleads.leads;\n    } else {\n      listArr = this.props.listleads.leads.filter(lead => {\n        if (searchSelection === \"first_name\") {\n          return lead.lead.first_name\n            .toUpperCase()\n            .includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"last_name\") {\n          return lead.lead.last_name\n            .toUpperCase()\n            .includes(this.props.search.toUpperCase());\n        } else if (searchSelection === \"position\") {\n          return lead.lead.position\n            .toUpperCase()\n            .includes(this.props.search.toUpperCase());\n        }\n      });\n    }\n\n    return (\n      <Table.Body onScroll={() => console.log(\"scroll\")}>\n        {_.map(listArr, ({ lead, leadnotes }) => {\n          let last = null;\n          let dateString;\n          if (leadnotes.length) {\n            last = leadnotes[leadnotes.length - 1];\n          }\n          if (last) {\n            dateString = new Date(last.created_at).toDateString();\n          }\n          return (\n            <Table.Row\n              textAlign=\"center\"\n              key={lead.id}\n              // onClick={() => this.handleRowClick(id)}\n            >\n              <Table.Cell>{lead.first_name}</Table.Cell>\n              <Table.Cell>{lead.last_name}</Table.Cell>\n              <Table.Cell>{lead.position}</Table.Cell>\n              <Table.Cell>{lead.company}</Table.Cell>\n              <Table.Cell>{last ? last.status : null}</Table.Cell>\n              <Table.Cell>{last ? last.next_steps : null}</Table.Cell>\n              <Table.Cell>{last ? dateString : null}</Table.Cell>\n              <Table.Cell>\n                {\" \"}\n                <Icon\n                  onClick={() =>\n                    this.setState({ showModal: true, selectedLead: lead, selectedLeadNotes: last, dateString: dateString})\n                  }\n                  name={\"edit outline\"}\n                  size=\"large\"\n                />\n              </Table.Cell>\n              <Table.Cell>\n                <Icon\n                  name={\"trash alternate outline\"}\n                  onClick={event => this.handleDeleteClick(event, lead.id)}\n                  size=\"large\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    );\n  }\n  renderModal() {\n    const {selectedLead, selectedLeadNotes, dateString} = this.state\n    const lead = selectedLead;\n    const last = selectedLeadNotes;\n    // const dateString = dateString;\n    return (\n      <Modal closeIcon onClose={this.closeModal} open={this.state.showModal}>\n        <Modal.Header as=\"h1\">\n          {selectedLead.first_name +\n            \" \" +\n            selectedLead.last_name}{\" \"}\n          <br /> {lead.position ? lead.position + \",\" : null} {lead.company}\n        </Modal.Header>\n        <Modal.Header as=\"h3\">\n          Email: {lead.email}\n          {/* <Icon name={\"envelope\"}></Icon> */}\n          <Modal\n            trigger={\n              <Icon size='large' style={{ color: \"#03DAC6\", float: 'right' }} name={\"envelope\"}></Icon>\n            }\n          >\n            <Modal.Header>Send an email to {lead.first_name}</Modal.Header>\n            <Modal.Content>\n              <MailForm\n                email={lead.email}\n                myEmail={this.props.auth.user.email}\n              />\n            </Modal.Content>\n          </Modal>\n        </Modal.Header>\n        {/* <Modal.Header as='h3'>{position}, {company}</Modal.Header> */}\n\n        <Modal.Content>\n          <Form>\n            <Form.Group>\n              <Form.Select\n                // fluid\n                onChange={this.handleDropdown}\n                name=\"statusInput\"\n                label=\"Status\"\n                options={statusArray}\n                placeholder={last ? last.status : \"Select status\"}\n              />\n              {/* <Form.Header>Next Steps</Form.Header> */}\n              <Form.Input\n                onChange={this.handleChange}\n                name=\"nextStepsInput\"\n                label=\"Next Steps\"\n                placeholder={last ? last.next_steps : \"Next steps\"}\n              ></Form.Input>\n            </Form.Group>\n            <Form.Input\n              onChange={this.handleChange}\n              name=\"commentsInput\"\n              control=\"textarea\"\n              rows=\"3\"\n              label=\"Notes\"\n              placeholder={last ? dateString + last.comments : null}\n            />\n            <Button\n              style={{\n                borderRadius: \"50px\",\n                backgroundColor: \"#03DAC6\",\n                color: \"white\"\n              }}\n              onClick={() => this.handleAddLeadNote(lead.id)}\n            >\n              Save\n            </Button>\n            {/* <Form.Description></Form.Description> */}\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n  // ! /////////////////////////////////////////////////////////// RENDER START ///////////////////////////////////////////////////////////////////////////////\n\n  render() {\n    const {\n      column,\n      data,\n      direction,\n      activePage,\n      filter,\n      open,\n      closeOnEscape,\n      closeOnDimmerClick\n    } = this.state;\n    const leadnotesArray = this.props.leadnotes;\n    console.log(this.state);\n    // console.log(this.state);\n    // let renderData;\n    // let dataSlice;\n    // if (filter) {\n    //   renderData = this.filteredLeads();\n    // } else {\n    //   renderData = data;\n    // }\n\n    // console.log(renderData)\n    // if (renderData) {\n    //   renderData.slice((activePage * 10) - 10, (activePage * 10) - 1)\n    //   if (activePage === 1) {\n    //     dataSlice = renderData.slice(0, 9);\n    //   } else if (activePage === 2) {\n    //     dataSlice = renderData.slice(10, 19);\n    //   } else if (activePage === 3) {\n    //     dataSlice = renderData.slice(20, 29);\n    //   } else if (activePage === 4) {\n    //     dataSlice = renderData.slice(30, 39);\n    //   } else if (activePage === 5) {\n    //     dataSlice = renderData.slice(40, 49);\n    //   } else if (activePage === 6) {\n    //     dataSlice = renderData.slice(50, 59);\n    //   } else if (activePage === 7) {\n    //     dataSlice = renderData.slice(60, 69);\n    //   } else if (activePage === 8) {\n    //     dataSlice = renderData.slice(70, 79);\n    //   } else if (activePage === 9) {\n    //     dataSlice = renderData.slice(80, 89);\n    //   } else if (activePage === 10) {\n    //     dataSlice = renderData.slice(90, 99);\n    //   } else {\n    //     dataSlice = [];\n    //   }\n    //   // return dataSlice\n    // }\n\n    return (\n      <div>\n        <Grid\n          style={{\n            backgroundImage: `url(${\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/s2048x2048/70590332_836756946718765_3473765009224368128_n.png?_nc_cat=111&_nc_oc=AQnI8TKKO2F4LqO-fZDRyZuRDWWLWhMONIpEB2mHf1QEmAP04HdNNIq8JU0QUq5LYwE&_nc_ht=scontent-ort2-2.xx&oh=e9db466921239dad5b5ae5b132f1f40f&oe=5E3DD369\"})`,\n            minHeight: \"800px\"\n          }}\n        >\n          <Grid.Row columns={1} style={{padding: 0}}>\n            <Grid.Column>\n              <Navbar />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row columns={1} style={{top: 90, verticalAlign: 'center'}}>\n            <Grid.Column style={{padding: 0, height: '50px'}}>\n              <Header as=\"h1\">{this.props.listleads.list.name}</Header>\n            </Grid.Column>\n          </Grid.Row>\n          {/* METRIC CARDS */}\n          <Grid.Row\n           columns=\"equal\" style={styleRow}\n          >\n            {this.renderLeadCount()}\n            {this.renderMeetingsBooked()}\n            {this.renderNotContacted()}\n          </Grid.Row>\n\n          {/*  BACK TO DASHBOARD BUTTON  */}\n          <Grid.Row\n            columns={1} style={{top: -20, verticalAlign: 'center'}}\n          >\n            <Grid.Column style={{ margin: \"20px\" }}>\n              <Button as={Link} to=\"/dashboard\" style={styleButton}>\n                <Icon name=\"arrow alternate circle left outline\" /> Back to\n                Dashboard\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n\n          {this.props.listleads.leads.length ? (\n            <Grid.Row\n              style={{\n                // margin: \"20px\",\n                // marginRight: \"60px\",\n                // marginLeft: \"60px\",\n                // minHeight: \"450px\"\n                // margin: \"20px\",\n                // marginRight: \"60px\",\n                // marginLeft: \"60px\"\n                // position: 'absolute',\n                // top: '430px',\n                // marginLeft: \"150px\",\n                // marginRight: \"150px\"\n                width: \"400px\",\n                margin: \"60px\",\n                height: \"500px\",\n                // marginTop: '20px',\n                display: \"inline-block\"\n              }}\n              columns={1}\n            >\n              {/* TABLE OF CONTENTS */}\n              <Grid.Column>\n                <Table sortable selectable celled fixed>\n                  <Table.Header>\n                    <Table.Row>\n                      <span>\n                        Search leads by{\" \"}\n                        <Dropdown\n                          inline\n                          onChange={this.handleSearchDropdown}\n                          name=\"searchSelection\"\n                          options={filterOptions}\n                          defaultValue={filterOptions[0].text}\n                        />\n                      </span>\n                      <Search\n                        // style={{ margin: \"15px\", position: 'fixed', top: 0 }}\n                        onSearchChange={_.debounce(\n                          (event, { value }) =>\n                            this.handleFilterChange(event, value),\n                          300\n                        )}\n                        noResultsMessage=\"No results found\"\n                        showNoResults={false}\n                      />\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Header>\n                    <Table.Row\n                      style={{ position: \"sticky\" }}\n                      textAlign=\"center\"\n                    >\n                      <Table.HeaderCell\n                        // sorted={column === \"first_name\" ? direction : null}\n                        // onClick={this.handleSort(\"first_name\")}\n                      >\n                        First Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        // sorted={column === \"last_name\" ? direction : null}\n                        // onClick={this.handleSort(\"last_name\")}\n                      >\n                        Last Name\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        // sorted={column === \"position\" ? direction : null}\n                        // onClick={this.handleSort(\"position\")}\n                      >\n                        Position\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        // sorted={column === \"company\" ? direction : null}\n                        // onClick={this.handleSort(\"company\")}\n                      >\n                        Company\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        // sorted={column === \"status\" ? direction : null}\n                        // onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        // sorted={column === \"next_steps\" ? direction : null}\n                        // onClick={this.handleSort(\"next_steps\")}\n                      >\n                        Next Steps\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        // sorted={\n                        //   column === \"last_date_contacted\" ? direction : null\n                        // }\n                        // onClick={this.handleSort(\"last_date_contacted\")}\n                      >\n                        Last Date Contacted\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Edit Lead</Table.HeaderCell>\n                      <Table.HeaderCell>Delete Lead</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  {this.renderModal()}\n                  {this.renderTableBody()}\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          ) : (\n            <Grid.Row\n            style={{\n              margin: \"1px\",\n              // position: \"fixed\",\n              top: \"50px\",\n              display: \"inline-block\"\n            }}\n              column={1}\n            >\n              <Grid.Column>\n                <Header>\n                  Oops! You do not have any leads saved under this list.\n                </Header>\n\n                <Button\n                  as={Link}\n                  to=\"/\"\n                  style={{\n                    borderRadius: \"30px\",\n                    color: \"#43425D\",\n                    backgroundColor: \"#FFF176\",\n                    padding: \"14px\",\n                    paddingRight: \"20px\",\n                    paddingLeft: \"20px\"\n                  }}\n                >\n                  <Icon name=\"arrow alternate circle left outline\" /> Search For\n                  Leads\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    listleads: state.listleads,\n    auth: state.auth,\n    leadnotes: state.leadnotes,\n    search: state.search\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: id => {\n//       dispatch(deleteList(id));\n//     },\n//     deleteListLead: (list_id, lead_id) => {\n//       dispatch(deleteListLead(list_id, lead_id));\n//     },\n//     addLeadNote: (status, nextSteps, userId, leadId, comment) => {\n//       dispatch(addLeadNote(status, nextSteps, userId, leadId, comment))\n//     }\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  { deleteList, deleteListLead, addLeadNote, updateSearch, sortLists, sortLeadLists }\n)(LeadList);\n\n// handleFetchClick = (id) => {\n//   this.props.thunkFetchLeadNote(this.props.auth.user.id, id)\n// }\n\n// countTotalLeads = () => {\n//   if (this.props.listleads) {\n//     let totalLeads;\n//     // console.log(this.props.lists);\n//     totalLeads = this.props.listleads.leads.length;\n//     this.setState({ totalLeadCount: totalLeads });\n//   } else {\n//     return null;\n//   }\n// };\n\n// countMeetingsBooked = () => {\n//   let meetingsBookedCount = 0;\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       lead.leadnotes.forEach(leadnote => {\n//         if (leadnote.status === \"Meeting booked\") {\n//           meetingsBookedCount += 1;\n//         }\n//       });\n//     });\n//     this.setState({ totalMeetingsBooked: meetingsBookedCount });\n//   } else {\n//     return null;\n//   }\n// };\n\n// countNotContacted = () => {\n//   let notContacted = 0;\n//   // let testArray = []\n//   if (this.props.listleads) {\n//     this.props.listleads.leads.forEach(lead => {\n//       if (lead.leadnotes.length < 1) {\n//         notContacted += 1;\n//       }\n//     });\n//     this.setState({ totalNotContacted: notContacted });\n//   } else {\n//     return null;\n//   }\n// };\n\n// id,\n// first_name,\n// last_name,\n// position,\n// company,\n// status,\n// next_steps,\n// last_date_contacted,\n// phone_number,\n// email,\n// comments,\n// comments_date\n\n{\n  /* <Table.Footer>\n                    {data.length > 10 ? (\n                      <Table.Row>\n                        <Table.HeaderCell colSpan=\"3\">\n                          <Pagination\n                            boundaryRange={0}\n                            defaultActivePage={1}\n                            ellipsisItem={\"...\"}\n                            firstItem={{\n                              content: <Icon name=\"angle double left\" />,\n                              icon: true\n                            }}\n                            lastItem={{\n                              content: <Icon name=\"angle double right\" />,\n                              icon: true\n                            }}\n                            prevItem={{\n                              content: <Icon name=\"angle left\" />,\n                              icon: true\n                            }}\n                            nextItem={{\n                              content: <Icon name=\"angle right\" />,\n                              icon: true\n                            }}\n                            siblingRange={1}\n                            totalPages={10}\n                            onPageChange={(event, { activePage }) =>\n                              this.handlePageChange(activePage)\n                            }\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    ) : null}\n                  </Table.Footer> */\n}\n"]},"metadata":{},"sourceType":"module"}