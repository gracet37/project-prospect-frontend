{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js\";\nimport React, { Component } from \"react\";\nimport { Table, Menu, Icon, Modal, Header, Button, Dropdown, Input } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\"\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleLeadChange = lead => {\n      this.setState({\n        leadSelection: lead\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadSelection = _this$state.leadSelection,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId;\n      this.props.addLead(leadSelection, company, website, listId); // this.props.addList(this.state.listId)\n    };\n\n    this.handleTest = () => {\n      console.log(\"TEST\");\n    };\n  }\n\n  componentDidMount() {\n    const array = this.props.leads[0];\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    console.log(\"state\", this.state);\n    console.log(\"list props\", this.props.lists);\n    let listArray = [];\n    let lists = this.props.lists[0];\n    if (Ob) Object.keys(lists).forEach(function (i) {\n      listArray.push({\n        key: lists[i].id,\n        text: lists[i].name,\n        value: lists[i].id\n      });\n    }); // console.log(\"searchoptions\", searchOptions)\n\n    const dataArray = this.props.leads[0];\n    console.log(dataArray);\n    const tableRow = dataArray.emails.map(lead => {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, lead.first_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, lead.last_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, lead.value), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, lead.position), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, dataArray.organization), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, lead.confidence), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        trigger: React.createElement(Button, {\n          onClick: () => this.handleLeadChange(lead),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Add\"),\n        basic: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Select a list:\")), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: this.handleChange,\n        placeholder: \"New List...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        onChange: this.handleDropdown,\n        name: \"listId\",\n        style: styleDropdown,\n        placeholder: \"Select List...\",\n        fluid: true,\n        selection: true,\n        options: listArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        basic: true,\n        color: \"red\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \" Add Lead to List\")))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Table, {\n      singleLine: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Confidence\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Save Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, tableRow), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      floated: \"right\",\n      pagination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      as: \"a\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"chevron left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"1\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"2\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"3\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"4\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"chevron right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addList: listName => {\n      dispatch(addList(listName));\n    },\n    addLead: (leadObj, company, website, listId) => {\n      dispatch(addLead(leadObj, company, website, listId));\n    }\n  };\n}; // Connect this component to all returns for the company search\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js"],"names":["React","Component","Table","Menu","Icon","Modal","Header","Button","Dropdown","Input","connect","addList","addLead","Navbar","uuidv1","require","styleDropdown","width","SearchResults","state","listId","leadSelection","company","website","handleDropdown","e","data","targetValue","value","setState","handleChange","target","targetName","name","handleLeadChange","lead","handleSubmit","props","handleTest","console","log","componentDidMount","array","leads","organization","domain","render","lists","listArray","Ob","Object","keys","forEach","i","push","key","id","text","dataArray","tableRow","emails","map","first_name","last_name","position","confidence","mapStateToProps","mapDispatchToProps","dispatch","listName","leadObj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,QAPF,EAQEC,KARF,QASO,mBATP;AAUA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB;;AAIA,MAAMC,aAAN,SAA4BjB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCkB,KADoC,GAC5B;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,OAAO,EAAE;AAJH,KAD4B;;AAAA,SAapCC,cAboC,GAanB,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5B,YAAMC,WAAW,GAAGD,IAAI,CAACE,KAAzB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEO;AAAV,OAAd;AACD,KAhBmC;;AAAA,SAkBpCG,YAlBoC,GAkBrBL,CAAC,IAAI;AAClB,YAAME,WAAW,GAAGF,CAAC,CAACM,MAAF,CAASH,KAA7B;AACA,YAAMI,UAAU,GAAGP,CAAC,CAACM,MAAF,CAASE,IAA5B;AACA,WAAKJ,QAAL,CAAc;AAAE,SAACG,UAAD,GAAcL;AAAhB,OAAd;AACD,KAtBmC;;AAAA,SAwBpCO,gBAxBoC,GAwBjBC,IAAI,IAAI;AACzB,WAAKN,QAAL,CAAc;AAAER,QAAAA,aAAa,EAAEc;AAAjB,OAAd;AACD,KA1BmC;;AAAA,SA4BpCC,YA5BoC,GA4BrB,MAAM;AAAA,0BACiC,KAAKjB,KADtC;AAAA,YACXE,aADW,eACXA,aADW;AAAA,YACIC,OADJ,eACIA,OADJ;AAAA,YACaC,OADb,eACaA,OADb;AAAA,YACsBH,MADtB,eACsBA,MADtB;AAEnB,WAAKiB,KAAL,CAAWzB,OAAX,CAAmBS,aAAnB,EAAkCC,OAAlC,EAA2CC,OAA3C,EAAoDH,MAApD,EAFmB,CAGnB;AACD,KAhCmC;;AAAA,SAkCpCkB,UAlCoC,GAkCvB,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KApCmC;AAAA;;AAQpCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiB,CAAjB,CAAd;AACA,SAAKd,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAEoB,KAAK,CAACE,YAAjB;AAA+BrB,MAAAA,OAAO,EAAEmB,KAAK,CAACG;AAA9C,KAAd;AACD;;AA2BDC,EAAAA,MAAM,GAAG;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKrB,KAA1B;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKH,KAAL,CAAWU,KAArC;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAID,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAX,CAAiB,CAAjB,CAAZ;AACA,QAAIE,EAAJ,EACAC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAASC,CAAT,EAAY;AACrCL,MAAAA,SAAS,CAACM,IAAV,CAAe;AACbC,QAAAA,GAAG,EAAER,KAAK,CAACM,CAAD,CAAL,CAASG,EADD;AAEbC,QAAAA,IAAI,EAAEV,KAAK,CAACM,CAAD,CAAL,CAASpB,IAFF;AAGbL,QAAAA,KAAK,EAAEmB,KAAK,CAACM,CAAD,CAAL,CAASG;AAHH,OAAf;AAKD,KAND,EANO,CAaP;;AACA,UAAME,SAAS,GAAG,KAAKrB,KAAL,CAAWM,KAAX,CAAiB,CAAjB,CAAlB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYkB,SAAZ;AACA,UAAMC,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiBC,GAAjB,CAAqB1B,IAAI,IAAI;AAC5C,aACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaA,IAAI,CAAC2B,UAAlB,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa3B,IAAI,CAAC4B,SAAlB,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa5B,IAAI,CAACP,KAAlB,CAHF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaO,IAAI,CAAC6B,QAAlB,CAJF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaN,SAAS,CAACd,YAAvB,CALF,EAME,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaT,IAAI,CAAC8B,UAAlB,CANF,EAOE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,OAAO,EACL,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK/B,gBAAL,CAAsBC,IAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CARF,EAWE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKL,YAAtB;AAAoC,QAAA,WAAW,EAAC,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKN,cADjB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAER,aAHT;AAIE,QAAA,WAAW,EAAC,gBAJd;AAKE,QAAA,KAAK,MALP;AAME,QAAA,SAAS,MANX;AAOE,QAAA,OAAO,EAAEgC,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAWE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKZ,YAAtB;AAAoC,QAAA,KAAK,MAAzC;AAA0C,QAAA,KAAK,EAAC,KAAhD;AAAsD,QAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,sBAXF,CAXF,CADF,CAPF,CADF;AAuCD,KAxCgB,CAAjB;AAyCA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CADF,CADF,EAaE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAauB,QAAb,CAbF,EAcE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,OAAO,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,OAAd;AAAsB,MAAA,UAAU,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,GAAd;AAAkB,MAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,EAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,GAAd;AAAkB,MAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF,CADF,CADF,CAdF,CAFF,CADF;AAsCD;;AArImC;;AAwItC,MAAMO,eAAe,GAAG/C,KAAK,IAAI;AAC/B,SAAO;AACLwB,IAAAA,KAAK,EAAExB,KAAK,CAACwB,KADR;AAELI,IAAAA,KAAK,EAAE5B,KAAK,CAAC4B;AAFR,GAAP;AAID,CALD;;AAOA,MAAMoB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLzD,IAAAA,OAAO,EAAE0D,QAAQ,IAAI;AACnBD,MAAAA,QAAQ,CAACzD,OAAO,CAAC0D,QAAD,CAAR,CAAR;AACD,KAHI;AAILzD,IAAAA,OAAO,EAAE,CAAC0D,OAAD,EAAUhD,OAAV,EAAmBC,OAAnB,EAA4BH,MAA5B,KAAuC;AAC9CgD,MAAAA,QAAQ,CAACxD,OAAO,CAAC0D,OAAD,EAAUhD,OAAV,EAAmBC,OAAnB,EAA4BH,MAA5B,CAAR,CAAR;AACD;AANI,GAAP;AAQD,CATD,C,CAWA;;;AACA,eAAeV,OAAO,CACpBwD,eADoB,EAEpBC,kBAFoB,CAAP,CAGbjD,aAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Table,\n  Menu,\n  Icon,\n  Modal,\n  Header,\n  Button,\n  Dropdown,\n  Input\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\"\n  };\n\n  componentDidMount() {\n    const array = this.props.leads[0];\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleLeadChange = lead => {\n    this.setState({ leadSelection: lead });\n  };\n\n  handleSubmit = () => {\n    const { leadSelection, company, website, listId } = this.state;\n    this.props.addLead(leadSelection, company, website, listId);\n    // this.props.addList(this.state.listId)\n  };\n\n  handleTest = () => {\n    console.log(\"TEST\");\n  };\n\n  render() {\n    console.log(\"state\", this.state);\n    console.log(\"list props\", this.props.lists);\n    let listArray = [];\n    let lists = this.props.lists[0];\n    if (Ob)\n    Object.keys(lists).forEach(function(i) {\n      listArray.push({\n        key: lists[i].id,\n        text: lists[i].name,\n        value: lists[i].id\n      });\n    });\n    // console.log(\"searchoptions\", searchOptions)\n    const dataArray = this.props.leads[0];\n    console.log(dataArray);\n    const tableRow = dataArray.emails.map(lead => {\n      return (\n        <Table.Row>\n          <Table.Cell>{lead.first_name}</Table.Cell>\n          <Table.Cell>{lead.last_name}</Table.Cell>\n          <Table.Cell>{lead.value}</Table.Cell>\n          <Table.Cell>{lead.position}</Table.Cell>\n          <Table.Cell>{dataArray.organization}</Table.Cell>\n          <Table.Cell>{lead.confidence}</Table.Cell>\n          <Table.Cell>\n            <Modal\n              trigger={\n                <Button onClick={() => this.handleLeadChange(lead)}>Add</Button>\n              }\n              basic\n              size=\"small\"\n            >\n              <Header/>\n              <Modal.Content>\n                <h3>Select a list:</h3>\n              </Modal.Content>\n              <Modal.Actions>\n                <Input onChange={this.handleChange} placeholder=\"New List...\" />\n                <Dropdown\n                  onChange={this.handleDropdown}\n                  name=\"listId\"\n                  style={styleDropdown}\n                  placeholder=\"Select List...\"\n                  fluid\n                  selection\n                  options={listArray}\n                />\n                <Button onClick={this.handleSubmit} basic color=\"red\" inverted>\n                  <Icon name=\"add\" /> Add Lead to List\n                </Button>\n              </Modal.Actions>\n            </Modal>\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n    return (\n      <div>\n        <Navbar />\n        <Table singleLine>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>First Name</Table.HeaderCell>\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell>Position</Table.HeaderCell>\n              <Table.HeaderCell>Company</Table.HeaderCell>\n              <Table.HeaderCell>Confidence</Table.HeaderCell>\n              <Table.HeaderCell>Save Lead</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{tableRow}</Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addList: listName => {\n      dispatch(addList(listName));\n    },\n    addLead: (leadObj, company, website, listId) => {\n      dispatch(addLead(leadObj, company, website, listId));\n    }\n  };\n};\n\n// Connect this component to all returns for the company search\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchResults);\n"]},"metadata":{},"sourceType":"module"}