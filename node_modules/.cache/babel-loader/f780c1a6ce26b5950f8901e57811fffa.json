{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js\";\nimport React, { Component } from \"react\";\nimport { Table, Menu, Form, Icon, Modal, Header, Button, Dropdown, Input, Checkbox, Pagination } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listId: \"\",\n      leadSelection: \"\",\n      company: \"\",\n      website: \"\",\n      newListName: \"\",\n      leadsArray: [],\n      activePage: 1,\n      leadsPagination: []\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      this.setState({\n        listId: targetValue\n      });\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            leadsArray = _this$state.leadsArray,\n            company = _this$state.company,\n            website = _this$state.website,\n            listId = _this$state.listId,\n            newListName = _this$state.newListName;\n      console.log(\"SUBMIT\", this.state);\n      const userId = this.props.auth.user.id;\n      this.props.addLead(leadsArray, company, website, listId, newListName, userId);\n    };\n\n    this.handleLeadClick = (lead, checked) => {\n      console.log(lead);\n      console.log(checked);\n\n      if (checked) {\n        this.props.listWithLeadNotes.forEach(l => {\n          if (l.lead.email === lead.value) {\n            this.setState({\n              leadsArray: [...this.state.leadsArray, lead]\n            });\n          } else {\n            return React.createElement(Modal, {\n              trigger: React.createElement(Button, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90\n                },\n                __self: this\n              }),\n              basic: true,\n              size: \"small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(Header, {\n              icon: \"archive\",\n              content: \"Archive Old Messages\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }), React.createElement(Modal.Content, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, \"Your inbox is getting full, would you like us to enable automatic archiving of old messages?\")), React.createElement(Modal.Actions, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, React.createElement(Button, {\n              basic: true,\n              color: \"red\",\n              inverted: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              name: \"remove\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }), \" No\"), React.createElement(Button, {\n              color: \"green\",\n              inverted: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              name: \"checkmark\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }), \" Yes\")));\n          }\n        });\n      } else {\n        const newArray = this.state.leadsArray.filter(l => l.value !== lead.value);\n        this.setState({\n          leadsArray: newArray\n        });\n      }\n    };\n\n    this.handlePageChange = activePage => {\n      this.setState({\n        activePage\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.setState({\n      company: array.organization,\n      website: array.domain\n    });\n  }\n\n  render() {\n    const activePage = this.state.activePage;\n    const dataArray = this.props.leads;\n    const dataArrayEmails = this.props.leads.emails;\n    let dataSlice;\n\n    if (activePage === 1) {\n      dataSlice = dataArrayEmails.slice(0, 9);\n    } else if (activePage === 2) {\n      dataSlice = dataArrayEmails.slice(10, 19);\n    } else if (activePage === 3) {\n      dataSlice = dataArrayEmails.slice(20, 29);\n    } else if (activePage === 4) {\n      dataSlice = dataArrayEmails.slice(30, 39);\n    } else if (activePage === 5) {\n      dataSlice = dataArrayEmails.slice(40, 49);\n    } else if (activePage === 6) {\n      dataSlice = dataArrayEmails.slice(50, 59);\n    } else if (activePage === 7) {\n      dataSlice = dataArrayEmails.slice(60, 69);\n    } else if (activePage === 8) {\n      dataSlice = dataArrayEmails.slice(70, 79);\n    } else if (activePage === 9) {\n      dataSlice = dataArrayEmails.slice(80, 89);\n    } else if (activePage === 10) {\n      dataSlice = dataArrayEmails.slice(90, 99);\n    } else {\n      dataSlice = [];\n    }\n\n    console.log(\"list props\", this.props.lists);\n    let lists = this.props.lists;\n    let listArray = lists.map(list => {\n      return {\n        key: list.id,\n        text: list.name,\n        value: list.id\n      };\n    });\n    const tableRow = dataSlice.map(lead => {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, lead.first_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, lead.last_name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, lead.value), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, lead.position), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, dataArray.organization), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, lead.confidence), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onClick: (event, {\n          checked\n        }) => this.handleLeadClick(lead, checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"SEARCH RESULTS\")), React.createElement(Table, {\n      singleLine: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.leadsArray.length > 0 ? React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.leadsArray.length, \" leads selected\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      centered: true,\n      trigger: React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Save Leads\"),\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, listArray.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Select an Existing List:\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleDropdown,\n      name: \"listId\",\n      style: styleDropdown,\n      placeholder: \"Select list...\",\n      fluid: true,\n      disabled: this.state.newListName ? true : false,\n      selection: true,\n      options: listArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Create a New List:\"), React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), \" Add Lead to List\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Create A New List\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Create new list...\",\n      onChange: this.handleChange,\n      name: \"newListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), \" Add Lead to List\")))))) : null, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Position\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Company\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Confidence\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Save Lead\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, tableRow), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      boundaryRange: 0,\n      defaultActivePage: 1,\n      ellipsisItem: \"...\",\n      firstItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      lastItem: {\n        content: React.createElement(Icon, {\n          name: \"angle double right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      prevItem: {\n        content: React.createElement(Icon, {\n          name: \"angle left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      nextItem: {\n        content: React.createElement(Icon, {\n          name: \"angle right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }),\n        icon: true\n      },\n      siblingRange: 1,\n      totalPages: 10,\n      onPageChange: (event, {\n        activePage\n      }) => this.handlePageChange(activePage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(addLead(leadsArray, company, website, listId, newListName, userId));\n    }\n  };\n}; // Connect this component to all returns for the company search\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/SearchResults.js"],"names":["React","Component","Table","Menu","Form","Icon","Modal","Header","Button","Dropdown","Input","Checkbox","Pagination","connect","addList","addLead","Navbar","uuidv1","require","styleDropdown","width","SearchResults","state","listId","leadSelection","company","website","newListName","leadsArray","activePage","leadsPagination","handleDropdown","e","data","targetValue","value","setState","handleChange","target","targetName","name","handleSubmit","console","log","userId","props","auth","user","id","handleLeadClick","lead","checked","listWithLeadNotes","forEach","l","email","newArray","filter","handlePageChange","componentDidMount","leads","array","organization","domain","render","dataArray","dataArrayEmails","emails","dataSlice","slice","lists","listArray","map","list","key","text","tableRow","first_name","last_name","position","confidence","event","length","content","icon","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Table,\n  Menu,\n  Form,\n  Icon,\n  Modal,\n  Header,\n  Button,\n  Dropdown,\n  Input,\n  Checkbox,\n  Pagination\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { addList, addLead } from \"../actions\";\nimport Navbar from \"./Navbar\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst styleDropdown = {\n  width: \"40%\"\n};\n\nclass SearchResults extends Component {\n  state = {\n    listId: \"\",\n    leadSelection: \"\",\n    company: \"\",\n    website: \"\",\n    newListName: \"\",\n    leadsArray: [],\n    activePage: 1,\n    leadsPagination: []\n    };\n\n  componentDidMount() {\n    console.log(this.props.leads);\n    const array = this.props.leads;\n    this.setState({ company: array.organization, website: array.domain });\n  }\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    this.setState({ listId: targetValue });\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  handleSubmit = () => {\n    const { leadsArray, company, website, listId, newListName } = this.state;\n    console.log(\"SUBMIT\", this.state);\n    const userId = this.props.auth.user.id;\n    this.props.addLead(\n      leadsArray,\n      company,\n      website,\n      listId,\n      newListName,\n      userId\n    );\n  };\n\n  // handleLeadClick = (lead, checked) => {\n  //   console.log(lead);\n  //   console.log(checked);\n  //   if (checked) {\n  //     this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n  //   } else {\n  //     const newArray = this.state.leadsArray.filter(\n  //       l => l.value !== lead.value\n  //     );\n  //     this.setState({ leadsArray: newArray });\n  //   }\n  // };\n\n  handleLeadClick = (lead, checked) => {\n    console.log(lead);\n    console.log(checked);\n    if (checked) {\n      this.props.listWithLeadNotes.forEach(l => {\n        if (l.lead.email === lead.value) {\n          this.setState({ leadsArray: [...this.state.leadsArray, lead] });\n        } else {\n          return (\n            <Modal trigger={<Button></Button>} basic size='small'>\n            <Header icon='archive' content='Archive Old Messages' />\n            <Modal.Content>\n              <p>\n                Your inbox is getting full, would you like us to enable automatic\n                archiving of old messages?\n              </p>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button basic color='red' inverted>\n                <Icon name='remove' /> No\n              </Button>\n              <Button color='green' inverted>\n                <Icon name='checkmark' /> Yes\n              </Button>\n            </Modal.Actions>\n          </Modal>\n          )\n        }\n      })\n     \n    } else {\n      const newArray = this.state.leadsArray.filter(\n        l => l.value !== lead.value\n      );\n      this.setState({ leadsArray: newArray });\n    }\n  };\n\n  handlePageChange = activePage => {\n    this.setState({ activePage });\n  };\n\n  render() {\n    const { activePage } = this.state;\n    const dataArray = this.props.leads;\n    const dataArrayEmails = this.props.leads.emails;\n    let dataSlice;\n    if (activePage === 1) {\n      dataSlice = dataArrayEmails.slice(0, 9);\n    } else if (activePage === 2) {\n      dataSlice = dataArrayEmails.slice(10, 19);\n    } else if (activePage === 3) {\n      dataSlice = dataArrayEmails.slice(20, 29);\n    } else if (activePage === 4) {\n      dataSlice = dataArrayEmails.slice(30, 39);\n    } else if (activePage === 5) {\n      dataSlice = dataArrayEmails.slice(40, 49);\n    } else if (activePage === 6) {\n      dataSlice = dataArrayEmails.slice(50, 59);\n    } else if (activePage === 7) {\n      dataSlice = dataArrayEmails.slice(60, 69);\n    } else if (activePage === 8) {\n      dataSlice = dataArrayEmails.slice(70, 79);\n    } else if (activePage === 9) {\n      dataSlice = dataArrayEmails.slice(80, 89);\n    } else if (activePage === 10) {\n      dataSlice = dataArrayEmails.slice(90, 99);\n    } else {\n      dataSlice = [];\n    }\n\n    console.log(\"list props\", this.props.lists);\n    let lists = this.props.lists;\n    let listArray = lists.map(list => {\n      return {\n        key: list.id,\n        text: list.name,\n        value: list.id\n      };\n    });\n    const tableRow = dataSlice.map(lead => {\n      return (\n        <Table.Row>\n          <Table.Cell>{lead.first_name}</Table.Cell>\n          <Table.Cell>{lead.last_name}</Table.Cell>\n          <Table.Cell>{lead.value}</Table.Cell>\n          <Table.Cell>{lead.position}</Table.Cell>\n          <Table.Cell>{dataArray.organization}</Table.Cell>\n          <Table.Cell>{lead.confidence}</Table.Cell>\n          <Table.Cell>\n            <Checkbox\n              onClick={(event, { checked }) =>\n                this.handleLeadClick(lead, checked)\n              }\n            />\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n    return (\n      <div>\n        <Navbar />\n        <div>\n          <h1>SEARCH RESULTS</h1>\n        </div>\n        <Table singleLine>\n          <Table.Header>\n            {this.state.leadsArray.length > 0 ? (\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"6\">\n                  {this.state.leadsArray.length} leads selected\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <Modal\n                    centered\n                    trigger={<Button>Save Leads</Button>}\n                    basic\n                    size=\"small\"\n                  >\n                    {listArray.length ? (\n                      <div>\n                        <Modal.Header as=\"h2\">\n                          Select an Existing List:\n                        </Modal.Header>\n                        <Modal.Actions>\n                          <Dropdown\n                            onChange={this.handleDropdown}\n                            name=\"listId\"\n                            style={styleDropdown}\n                            placeholder=\"Select list...\"\n                            fluid\n                            disabled={this.state.newListName ? true : false}\n                            selection\n                            options={listArray}\n                          />\n                          <Modal.Header as=\"h2\">\n                            Create a New List:\n                          </Modal.Header>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Modal.Header as=\"h2\"></Modal.Header>\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    ) : (\n                      <div>\n                        <Modal.Header as=\"h2\">Create A New List</Modal.Header>\n                        <Modal.Actions>\n                          <Form.Input\n                            placeholder=\"Create new list...\"\n                            onChange={this.handleChange}\n                            name=\"newListName\"\n                          />\n                          <Button\n                            onClick={this.handleSubmit}\n                            basic\n                            color=\"blue\"\n                            inverted\n                          >\n                            <Icon name=\"add\" /> Add Lead to List\n                          </Button>\n                        </Modal.Actions>\n                      </div>\n                    )}\n                  </Modal>\n                </Table.HeaderCell>\n              </Table.Row>\n            ) : null}\n            <Table.Row>\n              <Table.HeaderCell>First Name</Table.HeaderCell>\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\n              <Table.HeaderCell>Email</Table.HeaderCell>\n              <Table.HeaderCell>Position</Table.HeaderCell>\n              <Table.HeaderCell>Company</Table.HeaderCell>\n              <Table.HeaderCell>Confidence</Table.HeaderCell>\n              <Table.HeaderCell>Save Lead</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{tableRow}</Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Pagination\n                  boundaryRange={0}\n                  defaultActivePage={1}\n                  ellipsisItem={\"...\"}\n                  firstItem={{\n                    content: <Icon name=\"angle double left\" />,\n                    icon: true\n                  }}\n                  lastItem={{\n                    content: <Icon name=\"angle double right\" />,\n                    icon: true\n                  }}\n                  prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                  nextItem={{\n                    content: <Icon name=\"angle right\" />,\n                    icon: true\n                  }}\n                  siblingRange={1}\n                  totalPages={10}\n                  onPageChange={(event, { activePage }) =>\n                    this.handlePageChange(activePage)\n                  }\n                />\n                {/* <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu> */}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    leads: state.leads,\n    lists: state.lists,\n    auth: state.auth,\n    listWithLeadNotes: state.listWithLeadNotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addList: (listName, id) => {\n    //   dispatch(addList(listName, id));\n    // },\n    addLead: (leadsArray, company, website, listId, newListName, userId) => {\n      dispatch(\n        addLead(leadsArray, company, website, listId, newListName, userId)\n      );\n    }\n  };\n};\n\n// Connect this component to all returns for the company search\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchResults);\n"]},"metadata":{},"sourceType":"module"}