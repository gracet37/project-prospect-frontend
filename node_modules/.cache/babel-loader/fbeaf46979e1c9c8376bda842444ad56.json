{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _const = require('../const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _bootstrap = require('../contexts/bootstrap');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint\n  react/require-default-props: 0\n  jsx-a11y/no-noninteractive-element-interactions: 0\n*/\n\n\nvar SelectionCell = function (_Component) {\n  _inherits(SelectionCell, _Component);\n\n  function SelectionCell() {\n    _classCallCheck(this, SelectionCell);\n\n    var _this = _possibleConstructorReturn(this, (SelectionCell.__proto__ || Object.getPrototypeOf(SelectionCell)).call(this));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SelectionCell, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var shouldUpdate = this.props.rowIndex !== nextProps.rowIndex || this.props.selected !== nextProps.selected || this.props.disabled !== nextProps.disabled || this.props.rowKey !== nextProps.rowKey || this.props.tabIndex !== nextProps.tabIndex || this.props.selectColumnStyle !== nextProps.selectColumnStyle;\n      return shouldUpdate;\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(e) {\n      var _props = this.props,\n          inputType = _props.mode,\n          rowKey = _props.rowKey,\n          selected = _props.selected,\n          onRowSelect = _props.onRowSelect,\n          disabled = _props.disabled,\n          rowIndex = _props.rowIndex;\n      e.stopPropagation();\n      if (disabled) return;\n      var checked = inputType === _const2.default.ROW_SELECT_SINGLE ? true : !selected;\n      onRowSelect(rowKey, checked, rowIndex, e);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          rowKey = _props2.rowKey,\n          inputType = _props2.mode,\n          selected = _props2.selected,\n          disabled = _props2.disabled,\n          tabIndex = _props2.tabIndex,\n          rowIndex = _props2.rowIndex,\n          selectionRenderer = _props2.selectionRenderer,\n          selectColumnStyle = _props2.selectColumnStyle;\n      var attrs = {};\n      if (tabIndex !== -1) attrs.tabIndex = tabIndex;\n      attrs.style = _utils2.default.isFunction(selectColumnStyle) ? selectColumnStyle({\n        checked: selected,\n        disabled: disabled,\n        rowIndex: rowIndex,\n        rowKey: rowKey\n      }) : selectColumnStyle;\n      return _react2.default.createElement(_bootstrap.BootstrapContext.Consumer, null, function (_ref) {\n        var bootstrap4 = _ref.bootstrap4;\n        return _react2.default.createElement('td', _extends({\n          onClick: _this2.handleClick\n        }, attrs), selectionRenderer ? selectionRenderer({\n          mode: inputType,\n          checked: selected,\n          disabled: disabled,\n          rowIndex: rowIndex\n        }) : _react2.default.createElement('input', {\n          type: inputType,\n          checked: selected,\n          disabled: disabled,\n          className: bootstrap4 ? 'selection-input-4' : '',\n          onChange: function onChange() {}\n        }));\n      });\n    }\n  }]);\n\n  return SelectionCell;\n}(_react.Component);\n\nSelectionCell.propTypes = {\n  mode: _propTypes2.default.string.isRequired,\n  rowKey: _propTypes2.default.any,\n  selected: _propTypes2.default.bool,\n  onRowSelect: _propTypes2.default.func,\n  disabled: _propTypes2.default.bool,\n  rowIndex: _propTypes2.default.number,\n  tabIndex: _propTypes2.default.number,\n  clickToSelect: _propTypes2.default.bool,\n  selectionRenderer: _propTypes2.default.func,\n  selectColumnStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func])\n};\nexports.default = SelectionCell;","map":null,"metadata":{},"sourceType":"script"}