{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { Grid, Image, Card, Table, Icon, Button } from \"semantic-ui-react\";\n// import { connect } from \"react-redux\";\n// import _ from 'lodash'\n// import Navbar from \"./Navbar\";\n// import { deleteList } from '../actions'\n// class Dashboard extends Component {\n//   // UPDATE DATA WITH LISTS \n//   state = {\n//     column: null,\n//     data: null,\n//     direction: null\n//   };\n//   componentDidMount() {\n//   }\n//   // formatListArray = (listArray) => {\n//   //     console.log(\"list array\", listArray)\n//   //     let filteredArray = [];\n//   //     // let lists = this.props.lists[0];\n//   //     Object.keys(listArray).forEach(function(i) {\n//   //       let date = new Date(listArray[i].created_at)\n//   //       let dateString = date.toDateString()\n//   //       filteredArray.push({\n//   //         id: listArray[i].id,\n//   //         name: listArray[i].name,\n//   //         created: dateString\n//   //       });\n//   //     });\n//   //     // this.setState({data: listArray})}\n//   //     return filteredArray\n//   // }\n//   formattedListArray = (listArray) => {\n//     let array = []\n//     listArray.forEach(list => {\n//       let date = new Date(list.created_at)\n//       let dateString = date.toDateString()\n//       array.push({\n//         id: list.id,\n//         name: list.name,\n//         created: dateString\n//       })\n//     })\n//     this.setState({data: listArray})\n//     return array\n//   }\n//   handleDeleteClick = (event, id) => {\n//     event.preventDefault()\n//     console.log(id)\n//     this.props.deleteList(id)\n//   }\n//   handleRowClick = (id) => {\n//     console.log(\"row clicked\", id)\n//   }\n//   handleSort = clickedColumn => () => {\n//     const { column, data, direction } = this.state;\n//     if (column !== clickedColumn) {\n//       this.setState({\n//         column: clickedColumn,\n//         data: _.sortBy(data, [clickedColumn]),\n//         direction: \"ascending\"\n//       });\n//       return;\n//     }\n//     this.setState({\n//       data: data.reverse(),\n//       direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n//     });\n//   };\n//   render() {\n//     let data = []\n//     if (this.props.lists.length) {\n//       data = this.formattedListArray(this.props.lists)\n//     }\n//     const { column, direction } = this.state;\n//     console.log(this.props.lists)\n//     console.log(this.state)\n//     return (\n//       <div style={{ height: \"100%\" }}>\n//         <Navbar />\n//         <Grid divided=\"vertically\">\n//           <Grid.Row columns={3}>\n//             <Grid.Column>\n//               <Card>\n//                 <Card.Content>\n//                   <Card.Header>Total Leads</Card.Header>\n//                   <Card.Description>XXXXXX</Card.Description>\n//                   <Image\n//                     floated=\"right\"\n//                     size=\"small\"\n//                     src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n//                   />\n//                 </Card.Content>\n//               </Card>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Card>\n//                 <Card.Content>\n//                   <Card.Header>Open Leads</Card.Header>\n//                   <Card.Description>XXXX</Card.Description>\n//                   <Image\n//                     floated=\"right\"\n//                     size=\"small\"\n//                     src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n//                   />\n//                 </Card.Content>\n//               </Card>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Card>\n//                 <Card.Content>\n//                   <Card.Header>Another METRIC</Card.Header>\n//                   <Card.Description>XXXX</Card.Description>\n//                   <Image\n//                     floated=\"right\"\n//                     size=\"small\"\n//                     src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n//                   />\n//                 </Card.Content>\n//               </Card>\n//             </Grid.Column>\n//           </Grid.Row>\n//           <Grid.Row columns={1}>\n//             <Grid.Column>\n//               <Table sortable selectable celled fixed>\n//                 <Table.Header>\n//                   <Table.Row>\n//                     <Table.HeaderCell\n//                       sorted={column === \"name\" ? direction : null}\n//                       onClick={this.handleSort(\"name\")}\n//                     >\n//                       List Name\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       sorted={column === \"meetings\" ? direction : null}\n//                       onClick={this.handleSort(\"meetings\")}\n//                     >\n//                       Meetings Booked\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       sorted={column === \"total\" ? direction : null}\n//                       onClick={this.handleSort(\"total\")}\n//                     >\n//                       Total Leads\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       sorted={column === \"date\" ? direction : null}\n//                       onClick={this.handleSort(\"date\")}\n//                     >\n//                       Date Created\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       // sorted={column === \"date\" ? direction : null}\n//                       // onClick={this.handleSort(\"date\")}\n//                     >\n//                       Delete List\n//                     </Table.HeaderCell>\n//                   </Table.Row>\n//                 </Table.Header>\n//                 <Table.Body>\n//                   {_.map(data, ({ id, name, created }) => (\n//                     <Table.Row key={id} onClick={() => this.handleRowClick(id)}>\n//                       <Table.Cell>{name}</Table.Cell>\n//                       <Table.Cell></Table.Cell>\n//                       <Table.Cell></Table.Cell>\n//                       <Table.Cell>{created}</Table.Cell>\n//                       <Table.Cell><Icon name={'trash alternate outline'} onClick={(event) => this.handleDeleteClick(event, id)} name='trash alternate outline' size='large' /></Table.Cell>\n//                     </Table.Row>\n//                   ))}\n//                 </Table.Body>\n//               </Table>\n//             </Grid.Column>\n//           </Grid.Row>\n//         </Grid>\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     lists: state.lists\n//   }\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: (id) => {\n//       dispatch(deleteList(id))\n//     }\n//   }\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module-five-project/project-prospect-frontend/src/components/LeadList.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import { Grid, Image, Card, Table, Icon, Button } from \"semantic-ui-react\";\n// import { connect } from \"react-redux\";\n// import _ from 'lodash'\n// import Navbar from \"./Navbar\";\n// import { deleteList } from '../actions'\n\n// class Dashboard extends Component {\n//   // UPDATE DATA WITH LISTS \n//   state = {\n//     column: null,\n//     data: null,\n//     direction: null\n//   };\n\n//   componentDidMount() {\n   \n//   }\n\n//   // formatListArray = (listArray) => {\n//   //     console.log(\"list array\", listArray)\n//   //     let filteredArray = [];\n//   //     // let lists = this.props.lists[0];\n//   //     Object.keys(listArray).forEach(function(i) {\n//   //       let date = new Date(listArray[i].created_at)\n//   //       let dateString = date.toDateString()\n//   //       filteredArray.push({\n//   //         id: listArray[i].id,\n//   //         name: listArray[i].name,\n//   //         created: dateString\n//   //       });\n//   //     });\n//   //     // this.setState({data: listArray})}\n//   //     return filteredArray\n//   // }\n\n//   formattedListArray = (listArray) => {\n//     let array = []\n//     listArray.forEach(list => {\n//       let date = new Date(list.created_at)\n//       let dateString = date.toDateString()\n//       array.push({\n//         id: list.id,\n//         name: list.name,\n//         created: dateString\n//       })\n//     })\n//     this.setState({data: listArray})\n//     return array\n//   }\n\n//   handleDeleteClick = (event, id) => {\n//     event.preventDefault()\n//     console.log(id)\n//     this.props.deleteList(id)\n//   }\n\n//   handleRowClick = (id) => {\n//     console.log(\"row clicked\", id)\n//   }\n  \n//   handleSort = clickedColumn => () => {\n//     const { column, data, direction } = this.state;\n\n//     if (column !== clickedColumn) {\n//       this.setState({\n//         column: clickedColumn,\n//         data: _.sortBy(data, [clickedColumn]),\n//         direction: \"ascending\"\n//       });\n\n//       return;\n//     }\n\n//     this.setState({\n//       data: data.reverse(),\n//       direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n//     });\n//   };\n\n//   render() {\n//     let data = []\n//     if (this.props.lists.length) {\n//       data = this.formattedListArray(this.props.lists)\n//     }\n//     const { column, direction } = this.state;\n//     console.log(this.props.lists)\n//     console.log(this.state)\n//     return (\n//       <div style={{ height: \"100%\" }}>\n//         <Navbar />\n//         <Grid divided=\"vertically\">\n//           <Grid.Row columns={3}>\n//             <Grid.Column>\n//               <Card>\n//                 <Card.Content>\n//                   <Card.Header>Total Leads</Card.Header>\n//                   <Card.Description>XXXXXX</Card.Description>\n//                   <Image\n//                     floated=\"right\"\n//                     size=\"small\"\n//                     src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71382639_511374239440274_5689414491201077248_n.png?_nc_cat=102&_nc_oc=AQmxMPkcSBw3tsH3vtHdty3xBIiwwwo1u58qIFM6JBWKhgr_vArb8fKIvHJeZbUXVHA&_nc_ht=scontent-ort2-2.xx&oh=5ecbfc218c65ca3f290c9e06988b2804&oe=5DF1636E\"\n//                   />\n//                 </Card.Content>\n//               </Card>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Card>\n//                 <Card.Content>\n//                   <Card.Header>Open Leads</Card.Header>\n//                   <Card.Description>XXXX</Card.Description>\n//                   <Image\n//                     floated=\"right\"\n//                     size=\"small\"\n//                     src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/71338480_839476829779627_88982982114672640_n.png?_nc_cat=103&_nc_oc=AQlz6riL_5nCn_aFSeq7vrwmHLIvmmoEXuFWQLi-o0ouY9NmTb65RrwrN8grKcefjAc&_nc_ht=scontent-ort2-2.xx&oh=abcf184851a1381d3c1e6f1a2655708f&oe=5DF88CFF\"\n//                   />\n//                 </Card.Content>\n//               </Card>\n//             </Grid.Column>\n//             <Grid.Column>\n//               <Card>\n//                 <Card.Content>\n//                   <Card.Header>Another METRIC</Card.Header>\n//                   <Card.Description>XXXX</Card.Description>\n//                   <Image\n//                     floated=\"right\"\n//                     size=\"small\"\n//                     src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/70880021_751349978649592_7265954774900539392_n.png?_nc_cat=101&_nc_oc=AQn6B5Hc2QHFjLfjzwx8QK_KTfxQXSwEJn6eWDeWtUc5nEU37bRyVKv1v3-ZPPbd7p8&_nc_ht=scontent-ort2-2.xx&oh=9b4a7332352bb07373e20a8830861a35&oe=5E35AB9A\"\n//                   />\n//                 </Card.Content>\n//               </Card>\n//             </Grid.Column>\n//           </Grid.Row>\n\n//           <Grid.Row columns={1}>\n//             <Grid.Column>\n//               <Table sortable selectable celled fixed>\n//                 <Table.Header>\n//                   <Table.Row>\n//                     <Table.HeaderCell\n//                       sorted={column === \"name\" ? direction : null}\n//                       onClick={this.handleSort(\"name\")}\n//                     >\n//                       List Name\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       sorted={column === \"meetings\" ? direction : null}\n//                       onClick={this.handleSort(\"meetings\")}\n//                     >\n//                       Meetings Booked\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       sorted={column === \"total\" ? direction : null}\n//                       onClick={this.handleSort(\"total\")}\n//                     >\n//                       Total Leads\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       sorted={column === \"date\" ? direction : null}\n//                       onClick={this.handleSort(\"date\")}\n//                     >\n//                       Date Created\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                       // sorted={column === \"date\" ? direction : null}\n//                       // onClick={this.handleSort(\"date\")}\n//                     >\n//                       Delete List\n//                     </Table.HeaderCell>\n//                   </Table.Row>\n//                 </Table.Header>\n//                 <Table.Body>\n//                   {_.map(data, ({ id, name, created }) => (\n//                     <Table.Row key={id} onClick={() => this.handleRowClick(id)}>\n//                       <Table.Cell>{name}</Table.Cell>\n//                       <Table.Cell></Table.Cell>\n//                       <Table.Cell></Table.Cell>\n//                       <Table.Cell>{created}</Table.Cell>\n//                       <Table.Cell><Icon name={'trash alternate outline'} onClick={(event) => this.handleDeleteClick(event, id)} name='trash alternate outline' size='large' /></Table.Cell>\n//                     </Table.Row>\n//                   ))}\n//                 </Table.Body>\n//               </Table>\n//             </Grid.Column>\n//           </Grid.Row>\n//         </Grid>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     lists: state.lists\n//   }\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     deleteList: (id) => {\n//       dispatch(deleteList(id))\n//     }\n//   }\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Dashboard);\n"]},"metadata":{},"sourceType":"module"}